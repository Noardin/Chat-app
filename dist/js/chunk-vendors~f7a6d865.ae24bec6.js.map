{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/components/carousel/carousel-slide.js","webpack:///./node_modules/bootstrap-vue/es/components/carousel/carousel.js","webpack:///./node_modules/bootstrap-vue/es/components/carousel/index.js"],"names":["exports","__esModule","default","props","_vue","_interopRequireDefault","__webpack_require__","_img","_id","_env","_html","obj","imgSrc","type","String","imgAlt","imgWidth","Number","imgHeight","imgBlank","Boolean","imgBlankColor","contentVisibleUp","contentTag","caption","captionHtml","captionTag","text","textHtml","textTag","background","_default2","extend","name","mixins","inject","bvCarousel","noTouch","data","computed","contentClasses","this","concat","computedWidth","computedHeight","render","h","$slots","noDrag","hasTouchSupport","img","fluidGrow","block","src","blank","blankColor","width","height","alt","on","dragstart","e","preventDefault","content","staticClass","class","domProps","htmlOrText","style","attrs","id","safeId","role","_observeDom","_keyCodes","_noop","_config","_dom","NAME","DIRECTION","next","dirClass","overlayClass","prev","TRANS_DURATION","TOUCH_EVENT_COMPAT_WAIT","SWIPE_THRESHOLD","PointerType","TOUCH","PEN","TransitionEndEvents","WebkitTransition","MozTransition","OTransition","transition","EventOptions","passive","capture","getTransitionEndEvent","el","undefined","provide","model","prop","event","labelPrev","getComponentConfig","labelNext","labelGotoSlide","labelIndicators","interval","indicators","controls","noAnimation","fade","noHoverPause","value","index","isSliding","transitionEndEvent","slides","direction","isPaused","parseInt","touchStartX","touchDeltaX","watch","newVal","oldVal","setSlide","pause","start","$emit","to","from","doSlide","created","_intervalId","_animationTimeout","_touchTimeout","mounted","$el","updateSlides","$refs","inner","bind","subtree","childList","attributes","attributeFilter","beforeDestroy","clearTimeout","clearInterval","methods","slide","_this","arguments","length","inBrowser","document","visibilityState","hidden","len","$once","Math","floor","evt","setInterval","max","restart","contains","activeElement","_this2","isCycling","calcDirection","currentSlide","nextSlide","addClass","removeClass","$nextTick","reflow","called","onceTransEnd","events","split","forEach","eventOff","setAttr","eventOn","setTimeout","selectAll","numSlides","min","idx","n","curIndex","nextIndex","handleClick","fn","keyCode","SPACE","ENTER","stopPropagation","handleSwipe","absDeltaX","abs","touchStart","hasPointerEvent","pointerType","toUpperCase","clientX","touches","touchMove","touchEnd","_this3","ref","href","aria-controls","click","keydown","aria-hidden","directives","rawName","expression","aria-label","aria-owns","map","key","active","tabindex","aria-current","aria-describedby","mouseenter","mouseleave","focusin","focusout","test","target","tagName","LEFT","RIGHT","carousel-fade","pointer-event","aria-busy","_carousel","_carouselSlide","_plugins","components","BCarousel","BCarouselSlide","_default","install","installFactory"],"mappings":"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","file":"js/chunk-vendors~f7a6d865.ae24bec6.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.props = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _img = _interopRequireDefault(require(\"../image/img\"));\n\nvar _id = _interopRequireDefault(require(\"../../mixins/id\"));\n\nvar _env = require(\"../../utils/env\");\n\nvar _html = require(\"../../utils/html\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar props = {\n  imgSrc: {\n    type: String // default: undefined\n\n  },\n  imgAlt: {\n    type: String // default: undefined\n\n  },\n  imgWidth: {\n    type: [Number, String] // default: undefined\n\n  },\n  imgHeight: {\n    type: [Number, String] // default: undefined\n\n  },\n  imgBlank: {\n    type: Boolean,\n    default: false\n  },\n  imgBlankColor: {\n    type: String,\n    default: 'transparent'\n  },\n  contentVisibleUp: {\n    type: String\n  },\n  contentTag: {\n    type: String,\n    default: 'div'\n  },\n  caption: {\n    type: String\n  },\n  captionHtml: {\n    type: String\n  },\n  captionTag: {\n    type: String,\n    default: 'h3'\n  },\n  text: {\n    type: String\n  },\n  textHtml: {\n    type: String\n  },\n  textTag: {\n    type: String,\n    default: 'p'\n  },\n  background: {\n    type: String\n  } // @vue/component\n\n};\nexports.props = props;\n\nvar _default2 = _vue.default.extend({\n  name: 'BCarouselSlide',\n  mixins: [_id.default],\n  inject: {\n    bvCarousel: {\n      default: function _default() {\n        return {\n          // Explicitly disable touch if not a child of carousel\n          noTouch: true\n        };\n      }\n    }\n  },\n  props: props,\n  data: function data() {\n    return {};\n  },\n  computed: {\n    contentClasses: function contentClasses() {\n      return [this.contentVisibleUp ? 'd-none' : '', this.contentVisibleUp ? \"d-\".concat(this.contentVisibleUp, \"-block\") : ''];\n    },\n    computedWidth: function computedWidth() {\n      // Use local width, or try parent width\n      return this.imgWidth || this.bvCarousel.imgWidth || null;\n    },\n    computedHeight: function computedHeight() {\n      // Use local height, or try parent height\n      return this.imgHeight || this.bvCarousel.imgHeight || null;\n    }\n  },\n  render: function render(h) {\n    var $slots = this.$slots;\n    var noDrag = !this.bvCarousel.noTouch && _env.hasTouchSupport;\n    var img = $slots.img;\n\n    if (!img && (this.imgSrc || this.imgBlank)) {\n      img = h(_img.default, {\n        props: {\n          fluidGrow: true,\n          block: true,\n          src: this.imgSrc,\n          blank: this.imgBlank,\n          blankColor: this.imgBlankColor,\n          width: this.computedWidth,\n          height: this.computedHeight,\n          alt: this.imgAlt\n        },\n        // Touch support event handler\n        on: noDrag ? {\n          dragstart: function dragstart(e) {\n            /* istanbul ignore next: difficult to test in JSDOM */\n            e.preventDefault();\n          }\n        } : {}\n      });\n    }\n\n    if (!img) {\n      img = h(false);\n    }\n\n    var content = h(this.contentTag, {\n      staticClass: 'carousel-caption',\n      class: this.contentClasses\n    }, [this.caption || this.captionHtml ? h(this.captionTag, {\n      domProps: (0, _html.htmlOrText)(this.captionHtml, this.caption)\n    }) : h(false), this.text || this.textHtml ? h(this.textTag, {\n      domProps: (0, _html.htmlOrText)(this.textHtml, this.text)\n    }) : h(false), $slots.default]);\n    return h('div', {\n      staticClass: 'carousel-item',\n      style: {\n        background: this.background || this.bvCarousel.background || null\n      },\n      attrs: {\n        id: this.safeId(),\n        role: 'listitem'\n      }\n    }, [img, content]);\n  }\n});\n\nexports.default = _default2;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _observeDom = _interopRequireDefault(require(\"../../utils/observe-dom\"));\n\nvar _keyCodes = _interopRequireDefault(require(\"../../utils/key-codes\"));\n\nvar _noop = _interopRequireDefault(require(\"../../utils/noop\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _env = require(\"../../utils/env\");\n\nvar _id = _interopRequireDefault(require(\"../../mixins/id\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NAME = 'BCarousel'; // Slide directional classes\n\nvar DIRECTION = {\n  next: {\n    dirClass: 'carousel-item-left',\n    overlayClass: 'carousel-item-next'\n  },\n  prev: {\n    dirClass: 'carousel-item-right',\n    overlayClass: 'carousel-item-prev'\n  } // Fallback Transition duration (with a little buffer) in ms\n\n};\nvar TRANS_DURATION = 600 + 50; // Time for mouse compat events to fire after touch\n\nvar TOUCH_EVENT_COMPAT_WAIT = 500; // Number of pixels to consider touch move a swipe\n\nvar SWIPE_THRESHOLD = 40; // PointerEvent pointer types\n\nvar PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen' // Transition Event names\n\n};\nvar TransitionEndEvents = {\n  WebkitTransition: 'webkitTransitionEnd',\n  MozTransition: 'transitionend',\n  OTransition: 'otransitionend oTransitionEnd',\n  transition: 'transitionend'\n};\nvar EventOptions = {\n  passive: true,\n  capture: false // Return the browser specific transitionEnd event name\n\n};\n\nfunction getTransitionEndEvent(el) {\n  for (var name in TransitionEndEvents) {\n    if (el.style[name] !== undefined) {\n      return TransitionEndEvents[name];\n    }\n  } // fallback\n\n  /* istanbul ignore next */\n\n\n  return null;\n} // @vue/component\n\n\nvar _default2 = _vue.default.extend({\n  name: 'BCarousel',\n  mixins: [_id.default],\n  provide: function provide() {\n    return {\n      bvCarousel: this\n    };\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    labelPrev: {\n      type: String,\n      default: function _default() {\n        return String((0, _config.getComponentConfig)(NAME, 'labelPrev'));\n      }\n    },\n    labelNext: {\n      type: String,\n      default: function _default() {\n        return String((0, _config.getComponentConfig)(NAME, 'labelNext'));\n      }\n    },\n    labelGotoSlide: {\n      type: String,\n      default: function _default() {\n        return String((0, _config.getComponentConfig)(NAME, 'labelGotoSlide'));\n      }\n    },\n    labelIndicators: {\n      type: String,\n      default: function _default() {\n        return String((0, _config.getComponentConfig)(NAME, 'labelIndicators'));\n      }\n    },\n    interval: {\n      type: Number,\n      default: 5000\n    },\n    indicators: {\n      type: Boolean,\n      default: false\n    },\n    controls: {\n      type: Boolean,\n      default: false\n    },\n    noAnimation: {\n      // Disable slide/fade animation\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      // Enable cross-fade animation instead of slide animation\n      type: Boolean,\n      default: false\n    },\n    noTouch: {\n      // Sniffed by carousel-slide\n      type: Boolean,\n      default: false\n    },\n    noHoverPause: {\n      // Disable pause on hover\n      type: Boolean,\n      default: false\n    },\n    imgWidth: {\n      // Sniffed by carousel-slide\n      type: [Number, String] // default: undefined\n\n    },\n    imgHeight: {\n      // Sniffed by carousel-slide\n      type: [Number, String] // default: undefined\n\n    },\n    background: {\n      type: String // default: undefined\n\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      index: this.value || 0,\n      isSliding: false,\n      transitionEndEvent: null,\n      slides: [],\n      direction: null,\n      isPaused: !(parseInt(this.interval, 10) > 0),\n      // Touch event handling values\n      touchStartX: 0,\n      touchDeltaX: 0\n    };\n  },\n  watch: {\n    value: function value(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.setSlide(newVal);\n      }\n    },\n    interval: function interval(newVal, oldVal) {\n      if (newVal === oldVal) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (!newVal) {\n        // Pausing slide show\n        this.pause(false);\n      } else {\n        // Restarting or Changing interval\n        this.pause(true);\n        this.start(false);\n      }\n    },\n    isPaused: function isPaused(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$emit(newVal ? 'paused' : 'unpaused');\n      }\n    },\n    index: function index(to, from) {\n      if (to === from || this.isSliding) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.doSlide(to, from);\n    }\n  },\n  created: function created() {\n    // Create private non-reactive props\n    this._intervalId = null;\n    this._animationTimeout = null;\n    this._touchTimeout = null; // Set initial paused state\n\n    this.isPaused = !(parseInt(this.interval, 10) > 0);\n  },\n  mounted: function mounted() {\n    // Cache current browser transitionend event name\n    this.transitionEndEvent = getTransitionEndEvent(this.$el) || null; // Get all slides\n\n    this.updateSlides(); // Observe child changes so we can update slide list\n\n    (0, _observeDom.default)(this.$refs.inner, this.updateSlides.bind(this), {\n      subtree: false,\n      childList: true,\n      attributes: true,\n      attributeFilter: ['id']\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this._animationTimeout);\n    clearTimeout(this._touchTimeout);\n    clearInterval(this._intervalId);\n    this._intervalId = null;\n    this._animationTimeout = null;\n    this._touchTimeout = null;\n  },\n  methods: {\n    // Set slide\n    setSlide: function setSlide(slide) {\n      var _this = this;\n\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      // Don't animate when page is not visible\n\n      /* istanbul ignore if: difficult to test */\n      if (_env.inBrowser && document.visibilityState && document.hidden) {\n        return;\n      }\n\n      var len = this.slides.length; // Don't do anything if nothing to slide to\n\n      if (len === 0) {\n        return;\n      } // Don't change slide while transitioning, wait until transition is done\n\n\n      if (this.isSliding) {\n        // Schedule slide after sliding complete\n        this.$once('sliding-end', function () {\n          return _this.setSlide(slide, direction);\n        });\n        return;\n      }\n\n      this.direction = direction; // Make sure we have an integer (you never know!)\n\n      slide = Math.floor(slide); // Set new slide index. Wrap around if necessary\n\n      this.index = slide >= len ? 0 : slide >= 0 ? slide : len - 1;\n    },\n    // Previous slide\n    prev: function prev() {\n      this.setSlide(this.index - 1, 'prev');\n    },\n    // Next slide\n    next: function next() {\n      this.setSlide(this.index + 1, 'next');\n    },\n    // Pause auto rotation\n    pause: function pause(evt) {\n      if (!evt) {\n        this.isPaused = true;\n      }\n\n      if (this._intervalId) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      }\n    },\n    // Start auto rotate slides\n    start: function start(evt) {\n      if (!evt) {\n        this.isPaused = false;\n      }\n      /* istanbul ignore next: most likely will never happen, but just in case */\n\n\n      if (this._intervalId) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      } // Don't start if no interval, or less than 2 slides\n\n\n      if (this.interval && this.slides.length > 1) {\n        this._intervalId = setInterval(this.next, Math.max(1000, this.interval));\n      }\n    },\n    // Restart auto rotate slides when focus/hover leaves the carousel\n    restart: function restart(evt)\n    /* istanbul ignore next: difficult to test */\n    {\n      if (!this.$el.contains(document.activeElement)) {\n        this.start();\n      }\n    },\n    doSlide: function doSlide(to, from) {\n      var _this2 = this;\n\n      var isCycling = Boolean(this.interval); // Determine sliding direction\n\n      var direction = this.calcDirection(this.direction, from, to);\n      var overlayClass = direction.overlayClass;\n      var dirClass = direction.dirClass; // Determine current and next slides\n\n      var currentSlide = this.slides[from];\n      var nextSlide = this.slides[to]; // Don't do anything if there aren't any slides to slide to\n\n      if (!currentSlide || !nextSlide) {\n        /* istanbul ignore next */\n        return;\n      } // Start animating\n\n\n      this.isSliding = true;\n\n      if (isCycling) {\n        this.pause(false);\n      }\n\n      this.$emit('sliding-start', to); // Update v-model\n\n      this.$emit('input', this.index);\n\n      if (this.noAnimation) {\n        (0, _dom.addClass)(nextSlide, 'active');\n        (0, _dom.removeClass)(currentSlide, 'active');\n        this.isSliding = false; // Notify ourselves that we're done sliding (slid)\n\n        this.$nextTick(function () {\n          return _this2.$emit('sliding-end', to);\n        });\n      } else {\n        (0, _dom.addClass)(nextSlide, overlayClass); // Trigger a reflow of next slide\n\n        (0, _dom.reflow)(nextSlide);\n        (0, _dom.addClass)(currentSlide, dirClass);\n        (0, _dom.addClass)(nextSlide, dirClass); // Transition End handler\n\n        var called = false;\n        /* istanbul ignore next: difficult to test */\n\n        var onceTransEnd = function onceTransEnd(evt) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          /* istanbul ignore if: transition events cant be tested in JSDOM */\n\n          if (_this2.transitionEndEvent) {\n            var events = _this2.transitionEndEvent.split(/\\s+/);\n\n            events.forEach(function (evt) {\n              return (0, _dom.eventOff)(currentSlide, evt, onceTransEnd, EventOptions);\n            });\n          }\n\n          _this2._animationTimeout = null;\n          (0, _dom.removeClass)(nextSlide, dirClass);\n          (0, _dom.removeClass)(nextSlide, overlayClass);\n          (0, _dom.addClass)(nextSlide, 'active');\n          (0, _dom.removeClass)(currentSlide, 'active');\n          (0, _dom.removeClass)(currentSlide, dirClass);\n          (0, _dom.removeClass)(currentSlide, overlayClass);\n          (0, _dom.setAttr)(currentSlide, 'aria-current', 'false');\n          (0, _dom.setAttr)(nextSlide, 'aria-current', 'true');\n          (0, _dom.setAttr)(currentSlide, 'aria-hidden', 'true');\n          (0, _dom.setAttr)(nextSlide, 'aria-hidden', 'false');\n          _this2.isSliding = false;\n          _this2.direction = null; // Notify ourselves that we're done sliding (slid)\n\n          _this2.$nextTick(function () {\n            return _this2.$emit('sliding-end', to);\n          });\n        }; // Set up transitionend handler\n\n        /* istanbul ignore if: transition events cant be tested in JSDOM */\n\n\n        if (this.transitionEndEvent) {\n          var events = this.transitionEndEvent.split(/\\s+/);\n          events.forEach(function (event) {\n            return (0, _dom.eventOn)(currentSlide, event, onceTransEnd, EventOptions);\n          });\n        } // Fallback to setTimeout()\n\n\n        this._animationTimeout = setTimeout(onceTransEnd, TRANS_DURATION);\n      }\n\n      if (isCycling) {\n        this.start(false);\n      }\n    },\n    // Update slide list\n    updateSlides: function updateSlides() {\n      this.pause(true); // Get all slides as DOM elements\n\n      this.slides = (0, _dom.selectAll)('.carousel-item', this.$refs.inner);\n      var numSlides = this.slides.length; // Keep slide number in range\n\n      var index = Math.max(0, Math.min(Math.floor(this.index), numSlides - 1));\n      this.slides.forEach(function (slide, idx) {\n        var n = idx + 1;\n\n        if (idx === index) {\n          (0, _dom.addClass)(slide, 'active');\n          (0, _dom.setAttr)(slide, 'aria-current', 'true');\n        } else {\n          (0, _dom.removeClass)(slide, 'active');\n          (0, _dom.setAttr)(slide, 'aria-current', 'false');\n        }\n\n        (0, _dom.setAttr)(slide, 'aria-posinset', String(n));\n        (0, _dom.setAttr)(slide, 'aria-setsize', String(numSlides));\n      }); // Set slide as active\n\n      this.setSlide(index);\n      this.start(this.isPaused);\n    },\n    calcDirection: function calcDirection() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var curIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var nextIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (!direction) {\n        return nextIndex > curIndex ? DIRECTION.next : DIRECTION.prev;\n      }\n\n      return DIRECTION[direction];\n    },\n    handleClick: function handleClick(evt, fn) {\n      var keyCode = evt.keyCode;\n\n      if (evt.type === 'click' || keyCode === _keyCodes.default.SPACE || keyCode === _keyCodes.default.ENTER) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        fn();\n      }\n    },\n    handleSwipe: function handleSwipe()\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      var absDeltaX = Math.abs(this.touchDeltaX);\n\n      if (absDeltaX <= SWIPE_THRESHOLD) {\n        return;\n      }\n\n      var direction = absDeltaX / this.touchDeltaX;\n\n      if (direction > 0) {\n        // Swipe left\n        this.prev();\n      } else if (direction < 0) {\n        // Swipe right\n        this.next();\n      }\n    },\n    touchStart: function touchStart(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      if (_env.hasPointerEvent && PointerType[evt.pointerType.toUpperCase()]) {\n        this.touchStartX = evt.clientX;\n      } else if (!_env.hasPointerEvent) {\n        this.touchStartX = evt.touches[0].clientX;\n      }\n    },\n    touchMove: function touchMove(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      // Ensure swiping with one touch and not pinching\n      if (evt.touches && evt.touches.length > 1) {\n        this.touchDeltaX = 0;\n      } else {\n        this.touchDeltaX = evt.touches[0].clientX - this.touchStartX;\n      }\n    },\n    touchEnd: function touchEnd(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      if (_env.hasPointerEvent && PointerType[evt.pointerType.toUpperCase()]) {\n        this.touchDeltaX = evt.clientX - this.touchStartX;\n      }\n\n      this.handleSwipe(); // If it's a touch-enabled device, mouseenter/leave are fired as\n      // part of the mouse compatibility events on first tap - the carousel\n      // would stop cycling until user tapped out of it;\n      // here, we listen for touchend, explicitly pause the carousel\n      // (as if it's the second time we tap on it, mouseenter compat event\n      // is NOT fired) and after a timeout (to allow for mouse compatibility\n      // events to fire) we explicitly restart cycling\n\n      this.pause(false);\n\n      if (this._touchTimeout) {\n        clearTimeout(this._touchTimeout);\n      }\n\n      this._touchTimeout = setTimeout(this.start, TOUCH_EVENT_COMPAT_WAIT + Math.max(1000, this.interval));\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    // Wrapper for slides\n    var inner = h('div', {\n      ref: 'inner',\n      class: ['carousel-inner'],\n      attrs: {\n        id: this.safeId('__BV_inner_'),\n        role: 'list'\n      }\n    }, [this.$slots.default]); // Prev and next controls\n\n    var controls = h(false);\n\n    if (this.controls) {\n      controls = [h('a', {\n        class: ['carousel-control-prev'],\n        attrs: {\n          href: '#',\n          role: 'button',\n          'aria-controls': this.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, _this3.prev);\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, _this3.prev);\n          }\n        }\n      }, [h('span', {\n        class: ['carousel-control-prev-icon'],\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      }), h('span', {\n        class: ['sr-only']\n      }, [this.labelPrev])]), h('a', {\n        class: ['carousel-control-next'],\n        attrs: {\n          href: '#',\n          role: 'button',\n          'aria-controls': this.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, _this3.next);\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, _this3.next);\n          }\n        }\n      }, [h('span', {\n        class: ['carousel-control-next-icon'],\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      }), h('span', {\n        class: ['sr-only']\n      }, [this.labelNext])])];\n    } // Indicators\n\n\n    var indicators = h('ol', {\n      class: ['carousel-indicators'],\n      directives: [{\n        name: 'show',\n        rawName: 'v-show',\n        value: this.indicators,\n        expression: 'indicators'\n      }],\n      attrs: {\n        id: this.safeId('__BV_indicators_'),\n        'aria-hidden': this.indicators ? 'false' : 'true',\n        'aria-label': this.labelIndicators,\n        'aria-owns': this.safeId('__BV_inner_')\n      }\n    }, this.slides.map(function (slide, n) {\n      return h('li', {\n        key: \"slide_\".concat(n),\n        class: {\n          active: n === _this3.index\n        },\n        attrs: {\n          role: 'button',\n          id: _this3.safeId(\"__BV_indicator_\".concat(n + 1, \"_\")),\n          tabindex: _this3.indicators ? '0' : '-1',\n          'aria-current': n === _this3.index ? 'true' : 'false',\n          'aria-label': \"\".concat(_this3.labelGotoSlide, \" \").concat(n + 1),\n          'aria-describedby': _this3.slides[n].id || null,\n          'aria-controls': _this3.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, function () {\n              _this3.setSlide(n);\n            });\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, function () {\n              _this3.setSlide(n);\n            });\n          }\n        }\n      });\n    }));\n    var on = {\n      mouseenter: this.noHoverPause ? _noop.default : this.pause,\n      mouseleave: this.noHoverPause ? _noop.default : this.restart,\n      focusin: this.pause,\n      focusout: this.restart,\n      keydown: function keydown(evt) {\n        if (/input|textarea/i.test(evt.target.tagName)) {\n          /* istanbul ignore next */\n          return;\n        }\n\n        var keyCode = evt.keyCode;\n\n        if (keyCode === _keyCodes.default.LEFT || keyCode === _keyCodes.default.RIGHT) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          _this3[keyCode === _keyCodes.default.LEFT ? 'prev' : 'next']();\n        }\n      } // Touch support event handlers for environment\n\n    };\n\n    if (!this.noTouch && _env.hasTouchSupport) {\n      // Attach appropriate listeners (prepend event name with '&' for passive mode)\n\n      /* istanbul ignore next: JSDOM doesn't support touch events */\n      if (_env.hasPointerEvent) {\n        on['&pointerdown'] = this.touchStart;\n        on['&pointerup'] = this.touchEnd;\n      } else {\n        on['&touchstart'] = this.touchStart;\n        on['&touchmove'] = this.touchMove;\n        on['&touchend'] = this.touchEnd;\n      }\n    } // Return the carousel\n\n\n    return h('div', {\n      staticClass: 'carousel',\n      class: {\n        slide: !this.noAnimation,\n        'carousel-fade': !this.noAnimation && this.fade,\n        'pointer-event': !this.noTouch && _env.hasTouchSupport && _env.hasPointerEvent\n      },\n      style: {\n        background: this.background\n      },\n      attrs: {\n        role: 'region',\n        id: this.safeId(),\n        'aria-busy': this.isSliding ? 'true' : 'false'\n      },\n      on: on\n    }, [inner, controls, indicators]);\n  }\n});\n\nexports.default = _default2;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _carousel = _interopRequireDefault(require(\"./carousel\"));\n\nvar _carouselSlide = _interopRequireDefault(require(\"./carousel-slide\"));\n\nvar _plugins = require(\"../../utils/plugins\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar components = {\n  BCarousel: _carousel.default,\n  BCarouselSlide: _carouselSlide.default\n};\nvar _default = {\n  install: (0, _plugins.installFactory)({\n    components: components\n  })\n};\nexports.default = _default;"],"sourceRoot":""}