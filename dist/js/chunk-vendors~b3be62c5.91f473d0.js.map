{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/components/form-input/form-input.js","webpack:///./node_modules/bootstrap-vue/es/components/form-group/index.js","webpack:///./node_modules/bootstrap-vue/es/components/form-input/index.js","webpack:///./node_modules/bootstrap-vue/es/components/form-group/form-group.js"],"names":["exports","__esModule","default","_vue","_interopRequireDefault","__webpack_require__","_id","_form","_formSize","_formState","_formText","_formSelection","_formValidity","_array","_dom","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","TYPES","_default","extend","name","mixins","props","type","String","validator","arrayIncludes","noWheel","Boolean","min","Number","max","step","list","computed","localType","this","watch","newVal","setWheelStopper","mounted","deactivated","activated","beforeDestroy","methods","on","input","$el","eventOn","onWheelFocus","onWheelBlur","eventOff","document","stopWheel","evt","preventDefault","blur","render","h","self","ref","class","computedClass","directives","rawName","localValue","expression","attrs","id","safeId","form","disabled","placeholder","required","autocomplete","readonly","plaintext","aria-required","aria-invalid","computedAriaInvalid","domProps","$listeners","onInput","change","onChange","onBlur","_formGroup","_plugins","components","BFormGroup","BFormFieldset","install","installFactory","_formInput","BFormInput","BInput","_config","_upperFirst","_memoize","_warn","_object","_env","_formRow","_col","_formInvalidFeedback","_formValidFeedback","NAME","SELECTOR","makePropName","breakpoint","undefined","prefix","DEPRECATED_MSG","renderInvalidFeedback","ctx","content","$slots","invalidFeedback","invalidFeedbackId","state","computedState","tooltip","tabindex","role","aria-live","aria-atomic","renderValidFeedback","validFeedback","validFeedbackId","renderHelpText","description","descriptionId","renderLabel","label","labelFor","isLegend","isHorizontal","labelTag","labelSrOnly","labelId","for","labelColProps","click","legendClick","tag","labelSize","labelAlignClasses","labelClass","resolve","reject","BREAKPOINTS","getBreakpointsUp","bpLabelColProps","reduce","create","bpLabelAlignProps","Array","validated","horizontal","deprecated","_this","bp","cols","parseInt","labelCols","propVal","bColPropName","_this2","classes","className","push","hasInvalidFeedback","hasValidFeedback","describedByIds","join","add","remove","setInputDescribedBy","_this3","$nextTick","tagName","test","inputs","selectAll","$refs","isVisible","focus","inBrowser","select","adb","ids","getAttr","split","memo","trim","setAttr","removeAttr","isFieldset","data","staticClass","stateClass","aria-labelledby","aria-describedby"],"mappings":"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","file":"js/chunk-vendors~b3be62c5.91f473d0.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _id = _interopRequireDefault(require(\"../../mixins/id\"));\n\nvar _form = _interopRequireDefault(require(\"../../mixins/form\"));\n\nvar _formSize = _interopRequireDefault(require(\"../../mixins/form-size\"));\n\nvar _formState = _interopRequireDefault(require(\"../../mixins/form-state\"));\n\nvar _formText = _interopRequireDefault(require(\"../../mixins/form-text\"));\n\nvar _formSelection = _interopRequireDefault(require(\"../../mixins/form-selection\"));\n\nvar _formValidity = _interopRequireDefault(require(\"../../mixins/form-validity\"));\n\nvar _array = require(\"../../utils/array\");\n\nvar _dom = require(\"../../utils/dom\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Valid supported input types\nvar TYPES = ['text', 'password', 'email', 'number', 'url', 'tel', 'search', 'range', 'color', 'date', 'time', 'datetime', 'datetime-local', 'month', 'week']; // @vue/component\n\nvar _default = _vue.default.extend({\n  name: 'BFormInput',\n  mixins: [_id.default, _form.default, _formSize.default, _formState.default, _formText.default, _formSelection.default, _formValidity.default],\n  props: {\n    // value prop defined in form-text mixin\n    // value: { },\n    type: {\n      type: String,\n      default: 'text',\n      validator: function validator(type) {\n        return (0, _array.arrayIncludes)(TYPES, type);\n      }\n    },\n    noWheel: {\n      // Disable mousewheel to prevent wheel from changing values (i.e. number/date).\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: [String, Number],\n      default: null\n    },\n    max: {\n      type: [String, Number],\n      default: null\n    },\n    step: {\n      type: [String, Number],\n      default: null\n    },\n    list: {\n      type: String,\n      default: null\n    }\n  },\n  computed: {\n    localType: function localType() {\n      // We only allow certain types\n      return (0, _array.arrayIncludes)(TYPES, this.type) ? this.type : 'text';\n    }\n  },\n  watch: {\n    noWheel: function noWheel(newVal) {\n      this.setWheelStopper(newVal);\n    }\n  },\n  mounted: function mounted() {\n    this.setWheelStopper(this.noWheel);\n  },\n  deactivated: function deactivated() {\n    // Turn off listeners when keep-alive component deactivated\n\n    /* istanbul ignore next */\n    this.setWheelStopper(false);\n  },\n  activated: function activated() {\n    // Turn on listeners (if no-wheel) when keep-alive component activated\n\n    /* istanbul ignore next */\n    this.setWheelStopper(this.noWheel);\n  },\n  beforeDestroy: function beforeDestroy() {\n    /* istanbul ignore next */\n    this.setWheelStopper(false);\n  },\n  methods: {\n    setWheelStopper: function setWheelStopper(on) {\n      var input = this.$el; // We use native events, so that we don't interfere with propgation\n\n      if (on) {\n        (0, _dom.eventOn)(input, 'focus', this.onWheelFocus);\n        (0, _dom.eventOn)(input, 'blur', this.onWheelBlur);\n      } else {\n        (0, _dom.eventOff)(input, 'focus', this.onWheelFocus);\n        (0, _dom.eventOff)(input, 'blur', this.onWheelBlur);\n        (0, _dom.eventOff)(document, 'wheel', this.stopWheel);\n      }\n    },\n    onWheelFocus: function onWheelFocus(evt) {\n      (0, _dom.eventOn)(document, 'wheel', this.stopWheel);\n    },\n    onWheelBlur: function onWheelBlur(evt) {\n      (0, _dom.eventOff)(document, 'wheel', this.stopWheel);\n    },\n    stopWheel: function stopWheel(evt) {\n      evt.preventDefault();\n      this.$el.blur();\n    }\n  },\n  render: function render(h) {\n    var self = this;\n    return h('input', {\n      ref: 'input',\n      class: self.computedClass,\n      directives: [{\n        name: 'model',\n        rawName: 'v-model',\n        value: self.localValue,\n        expression: 'localValue'\n      }],\n      attrs: {\n        id: self.safeId(),\n        name: self.name,\n        form: self.form || null,\n        type: self.localType,\n        disabled: self.disabled,\n        placeholder: self.placeholder,\n        required: self.required,\n        autocomplete: self.autocomplete || null,\n        readonly: self.readonly || self.plaintext,\n        min: self.min,\n        max: self.max,\n        step: self.step,\n        list: self.localType !== 'password' ? self.list : null,\n        'aria-required': self.required ? 'true' : null,\n        'aria-invalid': self.computedAriaInvalid\n      },\n      domProps: {\n        value: self.localValue\n      },\n      on: _objectSpread({}, self.$listeners, {\n        input: self.onInput,\n        change: self.onChange,\n        blur: self.onBlur\n      })\n    });\n  }\n});\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _formGroup = _interopRequireDefault(require(\"./form-group\"));\n\nvar _plugins = require(\"../../utils/plugins\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar components = {\n  BFormGroup: _formGroup.default,\n  BFormFieldset: _formGroup.default\n};\nvar _default = {\n  install: (0, _plugins.installFactory)({\n    components: components\n  })\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _formInput = _interopRequireDefault(require(\"./form-input\"));\n\nvar _plugins = require(\"../../utils/plugins\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar components = {\n  BFormInput: _formInput.default,\n  BInput: _formInput.default\n};\nvar _default = {\n  install: (0, _plugins.installFactory)({\n    components: components\n  })\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _id = _interopRequireDefault(require(\"../../mixins/id\"));\n\nvar _formState = _interopRequireDefault(require(\"../../mixins/form-state\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _upperFirst = _interopRequireDefault(require(\"../../utils/upper-first\"));\n\nvar _memoize = _interopRequireDefault(require(\"../../utils/memoize\"));\n\nvar _warn = _interopRequireDefault(require(\"../../utils/warn\"));\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _array = require(\"../../utils/array\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _env = require(\"../../utils/env\");\n\nvar _formRow = _interopRequireDefault(require(\"../layout/form-row\"));\n\nvar _col = _interopRequireDefault(require(\"../layout/col\"));\n\nvar _formText = _interopRequireDefault(require(\"../form/form-text\"));\n\nvar _formInvalidFeedback = _interopRequireDefault(require(\"../form/form-invalid-feedback\"));\n\nvar _formValidFeedback = _interopRequireDefault(require(\"../form/form-valid-feedback\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Component name\nvar NAME = 'BFormGroup'; // Selector for finding first input in the form-group\n\nvar SELECTOR = 'input:not([disabled]),textarea:not([disabled]),select:not([disabled])'; // Memoize this function to return cached values to\n// save time in computed functions\n\nvar makePropName = (0, _memoize.default)(function () {\n  var breakpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var prefix = arguments.length > 1 ? arguments[1] : undefined;\n  return \"\".concat(prefix).concat((0, _upperFirst.default)(breakpoint));\n});\nvar DEPRECATED_MSG = 'Props \"horizontal\" and \"breakpoint\" are deprecated. Use \"label-cols(-{breakpoint})\" props instead.'; // Render helper functions (here rather than polluting the instance with more methods)\n\nvar renderInvalidFeedback = function renderInvalidFeedback(h, ctx) {\n  var content = ctx.$slots['invalid-feedback'] || ctx.invalidFeedback;\n  var invalidFeedback = h(false);\n\n  if (content) {\n    invalidFeedback = h(_formInvalidFeedback.default, {\n      props: {\n        id: ctx.invalidFeedbackId,\n        // If state is explicitly false, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip\n      },\n      attrs: {\n        tabindex: content ? '-1' : null,\n        role: 'alert',\n        'aria-live': 'assertive',\n        'aria-atomic': 'true'\n      }\n    }, [content]);\n  }\n\n  return invalidFeedback;\n};\n\nvar renderValidFeedback = function renderValidFeedback(h, ctx) {\n  var content = ctx.$slots['valid-feedback'] || ctx.validFeedback;\n  var validFeedback = h(false);\n\n  if (content) {\n    validFeedback = h(_formValidFeedback.default, {\n      props: {\n        id: ctx.validFeedbackId,\n        // If state is explicitly true, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip\n      },\n      attrs: {\n        tabindex: '-1',\n        role: 'alert',\n        'aria-live': 'assertive',\n        'aria-atomic': 'true'\n      }\n    }, [content]);\n  }\n\n  return validFeedback;\n};\n\nvar renderHelpText = function renderHelpText(h, ctx) {\n  // Form help text (description)\n  var content = ctx.$slots['description'] || ctx.description;\n  var description = h(false);\n\n  if (content) {\n    description = h(_formText.default, {\n      attrs: {\n        id: ctx.descriptionId,\n        tabindex: '-1'\n      }\n    }, [content]);\n  }\n\n  return description;\n};\n\nvar renderLabel = function renderLabel(h, ctx) {\n  // Render label/legend inside b-col if necessary\n  var content = ctx.$slots['label'] || ctx.label;\n  var labelFor = ctx.labelFor;\n  var isLegend = !labelFor;\n  var isHorizontal = ctx.isHorizontal;\n  var labelTag = isLegend ? 'legend' : 'label';\n\n  if (!content && !isHorizontal) {\n    return h(false);\n  } else if (ctx.labelSrOnly) {\n    var label = h(false);\n\n    if (content) {\n      label = h(labelTag, {\n        class: 'sr-only',\n        attrs: {\n          id: ctx.labelId,\n          for: labelFor || null\n        }\n      }, [content]);\n    }\n\n    return h(isHorizontal ? _col.default : 'div', {\n      props: isHorizontal ? ctx.labelColProps : {}\n    }, [label]);\n  } else {\n    return h(isHorizontal ? _col.default : labelTag, {\n      on: isLegend ? {\n        click: ctx.legendClick\n      } : {},\n      props: isHorizontal ? _objectSpread({\n        tag: labelTag\n      }, ctx.labelColProps) : {},\n      attrs: {\n        id: ctx.labelId,\n        for: labelFor || null,\n        // We add a tab index to legend so that screen readers\n        // will properly read the aria-labelledby in IE.\n        tabindex: isLegend ? '-1' : null\n      },\n      class: [// When horizontal or if a legend is rendered, add col-form-label\n      // for correct sizing as Bootstrap has inconsistent font styling\n      // for legend in non-horizontal form-groups.\n      // See: https://github.com/twbs/bootstrap/issues/27805\n      isHorizontal || isLegend ? 'col-form-label' : '', // Emulate label padding top of 0 on legend when not horizontal\n      !isHorizontal && isLegend ? 'pt-0' : '', // If not horizontal and not a legend, we add d-block to label\n      // so that label-align works\n      !isHorizontal && !isLegend ? 'd-block' : '', ctx.labelSize ? \"col-form-label-\".concat(ctx.labelSize) : '', ctx.labelAlignClasses, ctx.labelClass]\n    }, [content]);\n  }\n}; // Async (lazy) component for BFormGroup\n// Needed so that the breakpoint specific props can be computed\n// once the config is created\n\n\nvar _default = function _default(resolve, reject) {\n  // Grab the current config for breakpoints\n  var BREAKPOINTS = (0, _config.getBreakpointsUp)(); // Generate the labelCol breakpoint props\n\n  var bpLabelColProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // i.e. label-cols, label-cols-sm, label-cols-md, ...\n    props[makePropName(breakpoint, 'labelCols')] = {\n      type: [Number, String, Boolean],\n      default: breakpoint ? false : null\n    };\n    return props;\n  }, (0, _object.create)(null)); // Generate the labelAlign breakpoint props\n\n  var bpLabelAlignProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // label-align, label-align-sm, label-align-md, ...\n    props[makePropName(breakpoint, 'labelAlign')] = {\n      type: String,\n      // left, right, center\n      default: null\n    };\n    return props;\n  }, (0, _object.create)(null)); // @vue/component\n\n  var BFormGroup = _vue.default.extend({\n    name: NAME,\n    mixins: [_id.default, _formState.default],\n    props: _objectSpread({\n      label: {\n        type: String,\n        default: null\n      },\n      labelFor: {\n        type: String,\n        default: null\n      },\n      labelSize: {\n        type: String,\n        default: null\n      },\n      labelSrOnly: {\n        type: Boolean,\n        default: false\n      }\n    }, bpLabelColProps, bpLabelAlignProps, {\n      labelClass: {\n        type: [String, Array, Object],\n        default: null\n      },\n      description: {\n        type: String,\n        default: null\n      },\n      invalidFeedback: {\n        type: String,\n        default: null\n      },\n      validFeedback: {\n        type: String,\n        default: null\n      },\n      tooltip: {\n        // Enable tooltip style feedback\n        type: Boolean,\n        default: false\n      },\n      validated: {\n        type: Boolean,\n        default: false\n      },\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n      horizontal: {\n        // Deprecated\n        type: Boolean,\n        default: false,\n        deprecated: DEPRECATED_MSG\n      },\n      breakpoint: {\n        // Deprecated (ignored if horizontal is not true)\n        type: String,\n        default: null,\n        // legacy value 'sm',\n        deprecated: DEPRECATED_MSG\n      }\n    }),\n    computed: {\n      labelColProps: function labelColProps() {\n        var _this = this;\n\n        var props = {};\n        /* istanbul ignore next: deprecated */\n\n        if (this.horizontal) {\n          // Deprecated setting of horizontal/breakpoint props\n\n          /* istanbul ignore next */\n          (0, _warn.default)(\"b-form-group: \".concat(DEPRECATED_MSG)); // Legacy default is breakpoint sm and cols 3\n\n          var bp = this.breakpoint || BREAKPOINTS[1]; // 'sm'\n\n          var cols = parseInt(this.labelCols, 10) || 3;\n          props[bp] = cols > 0 ? cols : 3; // We then return the single breakpoint prop for legacy compatibility\n\n          return props;\n        }\n\n        BREAKPOINTS.forEach(function (breakpoint) {\n          // Grab the value if the label column breakpoint prop\n          var propVal = _this[makePropName(breakpoint, 'labelCols')]; // Handle case where the prop's value is an empty string,\n          // which represents true\n\n\n          propVal = propVal === '' ? true : propVal || false;\n\n          if (typeof propVal !== 'boolean') {\n            // Convert to column size to number\n            propVal = parseInt(propVal, 10) || 0; // Ensure column size is greater than 0\n\n            propVal = propVal > 0 ? propVal : false;\n          }\n\n          if (propVal) {\n            // Add the prop to the list of props to give to b-col\n            // If breakpoint is '' (labelCols=true), then we use the\n            // col prop to make equal width at xs\n            var bColPropName = breakpoint || (typeof propVal === 'boolean' ? 'col' : 'cols'); // Add it to the props\n\n            props[bColPropName] = propVal;\n          }\n        });\n        return props;\n      },\n      labelAlignClasses: function labelAlignClasses() {\n        var _this2 = this;\n\n        var classes = [];\n        BREAKPOINTS.forEach(function (breakpoint) {\n          // Assemble the label column breakpoint align classes\n          var propVal = _this2[makePropName(breakpoint, 'labelAlign')] || null;\n\n          if (propVal) {\n            var className = breakpoint ? \"text-\".concat(breakpoint, \"-\").concat(propVal) : \"text-\".concat(propVal);\n            classes.push(className);\n          }\n        });\n        return classes;\n      },\n      isHorizontal: function isHorizontal() {\n        // Determine if the resultant form-group will be rendered\n        // horizontal (meaning it has label-col breakpoints)\n        return (0, _object.keys)(this.labelColProps).length > 0;\n      },\n      labelId: function labelId() {\n        return this.$slots['label'] || this.label ? this.safeId('_BV_label_') : null;\n      },\n      descriptionId: function descriptionId() {\n        return this.$slots['description'] || this.description ? this.safeId('_BV_description_') : null;\n      },\n      hasInvalidFeedback: function hasInvalidFeedback() {\n        // Used for computing aria-describedby\n        var $slots = this.$slots;\n        return this.computedState === false && ($slots['invalid-feedback'] || this.invalidFeedback);\n      },\n      invalidFeedbackId: function invalidFeedbackId() {\n        return this.hasInvalidFeedback ? this.safeId('_BV_feedback_invalid_') : null;\n      },\n      hasValidFeedback: function hasValidFeedback() {\n        // Used for computing aria-describedby\n        return this.computedState === true && (this.$slots['valid-feedback'] || this.validFeedback);\n      },\n      validFeedbackId: function validFeedbackId() {\n        return this.hasValidFeedback ? this.safeId('_BV_feedback_valid_') : null;\n      },\n      describedByIds: function describedByIds() {\n        // Screen readers will read out any content linked to by aria-describedby\n        // even if the content is hidden with `display: none;`, hence we only include\n        // feedback IDs if the form-group's state is explicitly valid or invalid.\n        return [this.descriptionId, this.invalidFeedbackId, this.validFeedbackId].filter(Boolean).join(' ') || null;\n      }\n    },\n    watch: {\n      describedByIds: function describedByIds(add, remove) {\n        if (add !== remove) {\n          this.setInputDescribedBy(add, remove);\n        }\n      }\n    },\n    mounted: function mounted() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        // Set the aria-describedby IDs on the input specified by label-for\n        // We do this in a nextTick to ensure the children have finished rendering\n        _this3.setInputDescribedBy(_this3.describedByIds);\n      });\n    },\n    methods: {\n      legendClick: function legendClick(evt) {\n        if (this.labelFor) {\n          // Don't do anything if labelFor is set\n\n          /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n          return;\n        }\n\n        var tagName = evt.target ? evt.target.tagName : '';\n\n        if (/^(input|select|textarea|label|button|a)$/i.test(tagName)) {\n          // If clicked an interactive element inside legend,\n          // we just let the default happen\n\n          /* istanbul ignore next */\n          return;\n        }\n\n        var inputs = (0, _dom.selectAll)(SELECTOR, this.$refs.content).filter(_dom.isVisible);\n\n        if (inputs && inputs.length === 1 && inputs[0].focus) {\n          // if only a single input, focus it, emulating label behaviour\n          inputs[0].focus();\n        }\n      },\n      setInputDescribedBy: function setInputDescribedBy(add, remove) {\n        // Sets the `aria-describedby` attribute on the input if label-for is set.\n        // Optionally accepts a string of IDs to remove as the second parameter.\n        // Preserves any aria-describedby value(s) user may have on input.\n        if (this.labelFor && _env.inBrowser) {\n          var input = (0, _dom.select)(\"#\".concat(this.labelFor), this.$refs.content);\n\n          if (input) {\n            var adb = 'aria-describedby';\n            var ids = ((0, _dom.getAttr)(input, adb) || '').split(/\\s+/);\n            add = (add || '').split(/\\s+/);\n            remove = (remove || '').split(/\\s+/); // Update ID list, preserving any original IDs\n            // and ensuring the ID's are unique\n\n            ids = ids.filter(function (id) {\n              return !(0, _array.arrayIncludes)(remove, id);\n            }).concat(add).filter(Boolean);\n            ids = (0, _object.keys)(ids.reduce(function (memo, id) {\n              return _objectSpread({}, memo, _defineProperty({}, id, true));\n            }, {})).join(' ').trim();\n\n            if (ids) {\n              (0, _dom.setAttr)(input, adb, ids);\n            } else {\n              // No IDs, so remove the attribute\n              (0, _dom.removeAttr)(input, adb);\n            }\n          }\n        }\n      }\n    },\n    render: function render(h) {\n      var isFieldset = !this.labelFor;\n      var isHorizontal = this.isHorizontal; // Generate the label\n\n      var label = renderLabel(h, this); // Generate the content\n\n      var content = h(isHorizontal ? _col.default : 'div', {\n        ref: 'content',\n        attrs: {\n          tabindex: isFieldset ? '-1' : null,\n          role: isFieldset ? 'group' : null\n        }\n      }, [this.$slots['default'] || h(false), renderInvalidFeedback(h, this), renderValidFeedback(h, this), renderHelpText(h, this)]); // Create the form-group\n\n      var data = {\n        staticClass: 'form-group',\n        class: [this.validated ? 'was-validated' : null, this.stateClass],\n        attrs: {\n          id: this.safeId(),\n          disabled: isFieldset ? this.disabled : null,\n          role: isFieldset ? null : 'group',\n          'aria-invalid': this.computedState === false ? 'true' : null,\n          // Only apply aria-labelledby if we are a horizontal fieldset\n          // as the legend is no longer a direct child of fieldset\n          'aria-labelledby': isFieldset && isHorizontal ? this.labelId : null,\n          // Only apply aria-describedby IDs if we are a fieldset\n          // as the input will have the IDs when not a fieldset\n          'aria-describedby': isFieldset ? this.describedByIds : null\n        } // Return it wrapped in a form-group\n        // Note: Fieldsets do not support adding `row` or `form-row` directly\n        // to them due to browser specific render issues, so we move the `form-row`\n        // to an inner wrapper div when horizontal and using a fieldset\n\n      };\n      return h(isFieldset ? 'fieldset' : isHorizontal ? _formRow.default : 'div', data, isHorizontal && isFieldset ? [h(_formRow.default, {}, [label, content])] : [label, content]);\n    }\n  }); // Return the component options reference\n\n\n  resolve(BFormGroup);\n};\n\nexports.default = _default;"],"sourceRoot":""}