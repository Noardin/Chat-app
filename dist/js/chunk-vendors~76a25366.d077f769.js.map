{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-thead.js","webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-top-row.js"],"names":["exports","__esModule","default","_startcase","_interopRequireDefault","__webpack_require__","_keyCodes","_html","_filterEvent","_textSelectionActive","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","_default","props","headVariant","type","String","theadClass","Array","theadTrClass","computed","headClasses","this","methods","fieldClasses","field","variant","class","thClass","headClicked","evt","isFoot","stopIfBusy","$el","stopPropagation","preventDefault","$emit","renderThead","_this","undefined","h","$createElement","isStacked","fields","computedFields","makeCell","colIndex","ariaLabel","label","trim","headerTitle","hasHeadClickListener","$listeners","isSortable","handlers","click","keydown","keyCode","ENTER","SPACE","data","sortTheadThClasses","style","thStyle","attrs","tabindex","abbr","headerAbbr","title","role","scope","aria-colindex","aria-label","sortTheadThAttrs","on","fieldScope","column","slot","hasNormalizedSlot","normalizeSlot","domProps","htmlOrText","labelHtml","$cells","map","th","$trs","push","tfootTrClass","columns","footClasses","renderTopRow","staticClass","tbodyTrClass"],"mappings":"0HAEAA,EAAAC,YAAA,EACAD,EAAAE,aAAA,EAEA,IAAAC,EAAAC,EAAwCC,EAAQ,SAEhDC,EAAAF,EAAuCC,EAAQ,SAE/CE,EAAYF,EAAQ,QAEpBG,EAAAJ,EAA0CC,EAAQ,SAElDI,EAAAL,EAAkDC,EAAQ,SAE1D,SAAAD,EAAAM,GAAsC,OAAAA,KAAAT,WAAAS,EAAA,CAAuCR,QAAAQ,GAE7E,SAAAC,EAAAC,GAAgC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAA,MAAAF,UAAAD,GAAAC,UAAAD,GAAA,GAAuDI,EAAAC,OAAAC,KAAAH,GAAmC,oBAAAE,OAAAE,wBAA0DH,IAAAI,OAAAH,OAAAE,sBAAAJ,GAAAM,OAAA,SAAAC,GAAsF,OAAAL,OAAAM,yBAAAR,EAAAO,GAAAE,eAAuER,EAAAS,QAAA,SAAAC,GAAiCC,EAAAhB,EAAAe,EAAAX,EAAAW,MAAiD,OAAAf,EAEhd,SAAAgB,EAAAlB,EAAAiB,EAAAE,GAAmM,OAAxJF,KAAAjB,EAAkBQ,OAAAY,eAAApB,EAAAiB,EAAA,CAAkCE,QAAAJ,YAAA,EAAAM,cAAA,EAAAC,UAAA,IAAgFtB,EAAAiB,GAAAE,EAAoBnB,EAEnM,IAAAuB,EAAA,CACAC,MAAA,CACAC,YAAA,CACAC,KAAAC,OACAnC,QAAA,IAEAoC,WAAA,CACAF,KAAA,CAAAC,OAAAE,MAAArB,QACAhB,QAAA,MAEAsC,aAAA,CACAJ,KAAA,CAAAC,OAAAE,MAAArB,QACAhB,QAAA,OAGAuC,SAAA,CACAC,YAAA,WACA,OAAAC,KAAAR,YAAA,SAAAQ,KAAAR,YAAA,GAAAQ,KAAAL,cAGAM,QAAA,CACAC,aAAA,SAAAC,GAEA,OAAAA,EAAAC,QAAA,SAAAD,EAAAC,QAAA,GAAAD,EAAAE,MAAAF,EAAAE,MAAA,GAAAF,EAAAG,QAAAH,EAAAG,QAAA,KAEAC,YAAA,SAAAC,EAAAL,EAAAM,GACAT,KAAAU,WAAAF,KAGO,EAAA3C,EAAAN,SAAAiD,KAGA,EAAA1C,EAAAP,SAAAyC,KAAAW,OAOPH,EAAAI,kBACAJ,EAAAK,iBACAb,KAAAc,MAAA,eAAAX,EAAAnB,IAAAmB,EAAAK,EAAAC,KAEAM,YAAA,WACA,IAAAC,EAAAhB,KAEAS,EAAAtC,UAAAC,OAAA,QAAA6C,IAAA9C,UAAA,IAAAA,UAAA,GACA+C,EAAAlB,KAAAmB,eAEA,QAAAnB,KAAAoB,UAEA,OAAAF,GAAA,GAGA,IAAAG,EAAArB,KAAAsB,gBAAA,GAEAC,EAAA,SAAApB,EAAAqB,GACA,IAAAC,EAAA,KAEAtB,EAAAuB,MAAAC,QAAAxB,EAAAyB,cAKAH,GAAA,EAAAjE,EAAAD,SAAA4C,EAAAnB,MAGA,IAAA6C,EAAAb,EAAAc,WAAA,iBAAAd,EAAAe,WACAC,EAAA,GAEAH,IACAG,EAAAC,MAAA,SAAAzB,GACAQ,EAAAT,YAAAC,EAAAL,EAAAM,IAGAuB,EAAAE,QAAA,SAAA1B,GACA,IAAA2B,EAAA3B,EAAA2B,QAEAA,IAAAxE,EAAAJ,QAAA6E,OAAAD,IAAAxE,EAAAJ,QAAA8E,OACArB,EAAAT,YAAAC,EAAAL,EAAAM,KAKA,IAAA6B,EAAA,CACAtD,IAAAmB,EAAAnB,IACAqB,MAAA,CAAAW,EAAAd,aAAAC,GAAAa,EAAAuB,mBAAApC,EAAAnB,IAAAmB,EAAAM,IACA+B,MAAArC,EAAAsC,SAAA,GACAC,MAAA1E,EAAA,CAEA2E,SAAAd,EAAA,SACAe,KAAAzC,EAAA0C,YAAA,KACAC,MAAA3C,EAAAyB,aAAA,KACAmB,KAAA,eACAC,MAAA,MACAC,gBAAAvD,OAAA8B,EAAA,GACA0B,aAAAzB,GACWT,EAAAmC,iBAAAhD,EAAAnB,IAAAmB,EAAAM,IACX2C,GAAApB,GAEAqB,EAAA,CACA3B,MAAAvB,EAAAuB,MACA4B,OAAAnD,EAAAnB,IACAmB,SAEAoD,EAAA9C,GAAAO,EAAAwC,kBAAA,QAAA9E,OAAAyB,EAAAnB,MAAAgC,EAAAyC,cAAA,QAAA/E,OAAAyB,EAAAnB,KAAAqE,GAAArC,EAAAyC,cAAA,QAAA/E,OAAAyB,EAAAnB,KAAAqE,GAQA,OANAE,EACAA,EAAA,CAAAA,GAEAjB,EAAAoB,UAAA,EAAA9F,EAAA+F,YAAAxD,EAAAyD,WAGA1C,EAAA,KAAAoB,EAAAiB,GAAApD,EAAAuB,QAIAmC,EAAAxC,EAAAyC,IAAAvC,GAAA5C,OAAA,SAAAoF,GACA,OAAAA,IAGAC,EAAA,GAEA,GAAAvD,EACAuD,EAAAC,KAAA/C,EAAA,MACAb,MAAAL,KAAAkE,aACAxB,MAAA,CACAK,KAAA,QAESc,QACF,CACP,IAAAb,EAAA,CACAmB,QAAA9C,EAAAjD,OACAiD,UAEA2C,EAAAC,KAAAjE,KAAAyD,cAAA,YAAAT,IAAA9B,GAAA,IACA8C,EAAAC,KAAA/C,EAAA,MACAb,MAAAL,KAAAH,aACA6C,MAAA,CACAK,KAAA,QAESc,IAGT,OAAA3C,EAAAT,EAAA,iBACAzB,IAAAyB,EAAA,gBACAJ,MAAAI,EAAAT,KAAAoE,YAAApE,KAAAD,YACA2C,MAAA,CACAK,KAAA,aAEOiB,MAIP3G,EAAAE,QAAA+B,uCC7KAjC,EAAAC,YAAA,EACAD,EAAAE,aAAA,EACA,IAAA+B,EAAA,CACAW,QAAA,CACAoE,aAAA,WACA,IAAAnD,EAAAlB,KAAAmB,eAGA,IAAAnB,KAAAwD,kBAAA,iBAAAxD,KAAAoB,UACA,OAAAF,GAAA,GAGA,IAAAG,EAAArB,KAAAsB,eACA,OAAAJ,EAAA,MACAlC,IAAA,UACAsF,YAAA,kBACAjE,MAAA,qBAAAL,KAAAuE,aAAAvE,KAAAuE,aAAA,gBAAAvE,KAAAuE,cACA7B,MAAA,CACAK,KAAA,QAEO,CAAA/C,KAAAyD,cAAA,WACPU,QAAA9C,EAAAjD,OACAiD,gBAKAhE,EAAAE,QAAA+B","file":"js/chunk-vendors~76a25366.d077f769.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _startcase = _interopRequireDefault(require(\"../../../utils/startcase\"));\n\nvar _keyCodes = _interopRequireDefault(require(\"../../../utils/key-codes\"));\n\nvar _html = require(\"../../../utils/html\");\n\nvar _filterEvent = _interopRequireDefault(require(\"./filter-event\"));\n\nvar _textSelectionActive = _interopRequireDefault(require(\"./text-selection-active\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _default = {\n  props: {\n    headVariant: {\n      type: String,\n      default: ''\n    },\n    theadClass: {\n      type: [String, Array, Object],\n      default: null\n    },\n    theadTrClass: {\n      type: [String, Array, Object],\n      default: null\n    }\n  },\n  computed: {\n    headClasses: function headClasses() {\n      return [this.headVariant ? 'thead-' + this.headVariant : '', this.theadClass];\n    }\n  },\n  methods: {\n    fieldClasses: function fieldClasses(field) {\n      // header field (th) classes\n      return [field.variant ? 'table-' + field.variant : '', field.class ? field.class : '', field.thClass ? field.thClass : ''];\n    },\n    headClicked: function headClicked(evt, field, isFoot) {\n      if (this.stopIfBusy(evt)) {\n        // If table is busy (via provider) then don't propagate\n        return;\n      } else if ((0, _filterEvent.default)(evt)) {\n        // clicked on a non-disabled control so ignore\n        return;\n      } else if ((0, _textSelectionActive.default)(this.$el)) {\n        // User is selecting text, so ignore\n\n        /* istanbul ignore next: JSDOM doesn't support getSelection() */\n        return;\n      }\n\n      evt.stopPropagation();\n      evt.preventDefault();\n      this.$emit('head-clicked', field.key, field, evt, isFoot);\n    },\n    renderThead: function renderThead() {\n      var _this = this;\n\n      var isFoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var h = this.$createElement;\n\n      if (this.isStacked === true) {\n        // In always stacked mode, we don't bother rendering the head/foot\n        return h(false);\n      }\n\n      var fields = this.computedFields || []; // Helper function to generate a field TH cell\n\n      var makeCell = function makeCell(field, colIndex) {\n        var ariaLabel = null;\n\n        if (!field.label.trim() && !field.headerTitle) {\n          // In case field's label and title are empty/blank\n          // We need to add a hint about what the column is about for non-sighted users\n\n          /* istanbul ignore next */\n          ariaLabel = (0, _startcase.default)(field.key);\n        }\n\n        var hasHeadClickListener = _this.$listeners['head-clicked'] || _this.isSortable;\n        var handlers = {};\n\n        if (hasHeadClickListener) {\n          handlers.click = function (evt) {\n            _this.headClicked(evt, field, isFoot);\n          };\n\n          handlers.keydown = function (evt) {\n            var keyCode = evt.keyCode;\n\n            if (keyCode === _keyCodes.default.ENTER || keyCode === _keyCodes.default.SPACE) {\n              _this.headClicked(evt, field, isFoot);\n            }\n          };\n        }\n\n        var data = {\n          key: field.key,\n          class: [_this.fieldClasses(field), _this.sortTheadThClasses(field.key, field, isFoot)],\n          style: field.thStyle || {},\n          attrs: _objectSpread({\n            // We only add a tabindex of 0 if there is a head-clicked listener\n            tabindex: hasHeadClickListener ? '0' : null,\n            abbr: field.headerAbbr || null,\n            title: field.headerTitle || null,\n            role: 'columnheader',\n            scope: 'col',\n            'aria-colindex': String(colIndex + 1),\n            'aria-label': ariaLabel\n          }, _this.sortTheadThAttrs(field.key, field, isFoot)),\n          on: handlers\n        };\n        var fieldScope = {\n          label: field.label,\n          column: field.key,\n          field: field\n        };\n        var slot = isFoot && _this.hasNormalizedSlot(\"FOOT_\".concat(field.key)) ? _this.normalizeSlot(\"FOOT_\".concat(field.key), fieldScope) : _this.normalizeSlot(\"HEAD_\".concat(field.key), fieldScope);\n\n        if (slot) {\n          slot = [slot];\n        } else {\n          data.domProps = (0, _html.htmlOrText)(field.labelHtml);\n        }\n\n        return h('th', data, slot || field.label);\n      }; // Generate the array of TH cells\n\n\n      var $cells = fields.map(makeCell).filter(function (th) {\n        return th;\n      }); // Genrate the row(s)\n\n      var $trs = [];\n\n      if (isFoot) {\n        $trs.push(h('tr', {\n          class: this.tfootTrClass,\n          attrs: {\n            role: 'row'\n          }\n        }, $cells));\n      } else {\n        var scope = {\n          columns: fields.length,\n          fields: fields\n        };\n        $trs.push(this.normalizeSlot('thead-top', scope) || h(false));\n        $trs.push(h('tr', {\n          class: this.theadTrClass,\n          attrs: {\n            role: 'row'\n          }\n        }, $cells));\n      }\n\n      return h(isFoot ? 'tfoot' : 'thead', {\n        key: isFoot ? 'tfoot' : 'thead',\n        class: isFoot ? this.footClasses : this.headClasses,\n        attrs: {\n          role: 'rowgroup'\n        }\n      }, $trs);\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _default = {\n  methods: {\n    renderTopRow: function renderTopRow() {\n      var h = this.$createElement; // Add static Top Row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in always stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot('top-row') || this.isStacked === true) {\n        return h(false);\n      }\n\n      var fields = this.computedFields;\n      return h('tr', {\n        key: 'top-row',\n        staticClass: 'b-table-top-row',\n        class: [typeof this.tbodyTrClass === 'function' ? this.tbodyTrClass(null, 'row-top') : this.tbodyTrClass],\n        attrs: {\n          role: 'row'\n        }\n      }, [this.normalizeSlot('top-row', {\n        columns: fields.length,\n        fields: fields\n      })]);\n    }\n  }\n};\nexports.default = _default;"],"sourceRoot":""}