{"version":3,"sources":["webpack:///./src/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./src/node_modules/backo2/index.js","webpack:///./src/node_modules/arraybuffer.slice/index.js","webpack:///./src/node_modules/after/index.js"],"names":["chars","lookup","Uint8Array","i","length","charCodeAt","exports","encode","arraybuffer","bytes","len","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","ArrayBuffer","Backoff","opts","this","ms","min","max","factor","jitter","attempts","module","prototype","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","start","end","byteLength","slice","abv","result","ii","buffer","after","count","callback","err_cb","bail","noop","proxy","err","Error"],"mappings":"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","file":"js/chunk-vendors~3393e5ed.ba92d646.js","sourcesContent":["/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n"],"sourceRoot":""}