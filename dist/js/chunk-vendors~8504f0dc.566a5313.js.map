{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/components/modal/modal.js"],"names":["exports","__esModule","default","props","_vue","_interopRequireDefault","__webpack_require__","_modalManager","_bvModalEvent","_button","_buttonClose","_id","_listenOnRoot","_observeDom","_keyCodes","_env","_config","_html","_dom","obj","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","NAME","OBSERVER_CONFIG","subtree","childList","characterData","attributes","attributeFilter","EVT_OPTIONS","passive","capture","title","type","String","titleHtml","titleTag","size","centered","Boolean","scrollable","buttonSize","noStacking","noFade","noCloseOnBackdrop","noCloseOnEsc","noEnforceFocus","headerBgVariant","headerBorderVariant","headerTextVariant","headerCloseVariant","headerClass","Array","bodyBgVariant","bodyTextVariant","modalClass","dialogClass","contentClass","bodyClass","footerBgVariant","footerBorderVariant","footerTextVariant","footerClass","hideHeader","hideFooter","hideHeaderClose","hideBackdrop","okOnly","okDisabled","cancelDisabled","visible","returnFocus","headerCloseLabel","getComponentConfig","cancelTitle","cancelTitleHtml","okTitle","okTitleHtml","cancelVariant","okVariant","lazy","busy","_default2","extend","name","mixins","model","prop","event","data","is_hidden","this","is_visible","is_transitioning","is_show","is_block","is_opening","is_closing","ignoreBackdropClick","isModalOverflowing","return_focus","scrollbarWidth","zIndex","getBaseZIndex","isTop","isBodyOverflowing","computed","modalClasses","fade","show","d-block","modalStyles","sbWidth","concat","paddingLeft","paddingRight","dialogClasses","_ref","backdropClasses","headerClasses","_ref2","bodyClasses","_ref3","footerClasses","_ref4","modalOuterStyle","position","watch","newVal","oldVal","created","_observer","mounted","listenOnRoot","showHandler","hideHandler","toggleHandler","modalListener","beforeDestroy","disconnect","setEnforceFocus","setResizeEvent","methods","$once","inBrowser","document","activeElement","focus","showEvt","cancelable","vueTarget","target","$refs","modal","relatedTarget","modalId","safeId","emitEvent","defaultPrevented","doShow","hide","trigger","hideEvt","$emit","toggle","triggerEl","_this","modalsAreOpen","listenOnRootOnce","$nextTick","content","checkModalOverflow","bind","onBeforeEnter","registerModal","onEnter","onAfterEnter","_this2","shownEvt","focusFirst","onBeforeLeave","onLeave","onAfterLeave","_this3","returnFocusTo","hiddenEvt","unregisterModal","bvEvt","emitOnRoot","onDialogMousedown","evt","_this4","onceModalMouseup","eventOff","eventOn","onClickOut","contains","onEsc","keyCode","ESC","focusHandler","preventScroll","on","method","window","id","scrollTop","el","select","$el","isVisible","scrollHeight","documentElement","clientHeight","render","h","_this5","$slots","header","modalHeader","closeButton","disabled","ariaLabel","textVariant","click","class","stripTags","ref","staticClass","attrs","body","footer","modalFooter","cancelButton","variant","okButton","modalContent","role","aria-labelledby","aria-describedby","modalDialog","mousedown","style","directives","rawName","expression","tabindex","aria-hidden","aria-modal","keydown","enterClass","enterToClass","enterActiveClass","leaveClass","leaveActiveClass","leaveToClass","before-enter","enter","after-enter","before-leave","leave","after-leave","backdrop","tabTrap","outer"],"mappings":"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","file":"js/chunk-vendors~8504f0dc.566a5313.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.props = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _modalManager = _interopRequireDefault(require(\"./helpers/modal-manager\"));\n\nvar _bvModalEvent = _interopRequireDefault(require(\"./helpers/bv-modal-event.class\"));\n\nvar _button = _interopRequireDefault(require(\"../button/button\"));\n\nvar _buttonClose = _interopRequireDefault(require(\"../button/button-close\"));\n\nvar _id = _interopRequireDefault(require(\"../../mixins/id\"));\n\nvar _listenOnRoot = _interopRequireDefault(require(\"../../mixins/listen-on-root\"));\n\nvar _observeDom = _interopRequireDefault(require(\"../../utils/observe-dom\"));\n\nvar _keyCodes = _interopRequireDefault(require(\"../../utils/key-codes\"));\n\nvar _env = require(\"../../utils/env\");\n\nvar _config = require(\"../../utils/config\");\n\nvar _html = require(\"../../utils/html\");\n\nvar _dom = require(\"../../utils/dom\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NAME = 'BModal'; // ObserveDom config to detect changes in modal content\n// so that we can adjust the modal padding if needed\n\nvar OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  attributes: true,\n  attributeFilter: ['style', 'class'] // Options for DOM event listeners\n\n};\nvar EVT_OPTIONS = {\n  passive: true,\n  capture: false\n};\nvar props = {\n  title: {\n    type: String,\n    default: ''\n  },\n  titleHtml: {\n    type: String\n  },\n  titleTag: {\n    type: String,\n    default: 'h5'\n  },\n  size: {\n    type: String,\n    default: 'md'\n  },\n  centered: {\n    type: Boolean,\n    default: false\n  },\n  scrollable: {\n    type: Boolean,\n    default: false\n  },\n  buttonSize: {\n    type: String,\n    default: ''\n  },\n  noStacking: {\n    type: Boolean,\n    default: false\n  },\n  noFade: {\n    type: Boolean,\n    default: false\n  },\n  noCloseOnBackdrop: {\n    type: Boolean,\n    default: false\n  },\n  noCloseOnEsc: {\n    type: Boolean,\n    default: false\n  },\n  noEnforceFocus: {\n    type: Boolean,\n    default: false\n  },\n  headerBgVariant: {\n    type: String,\n    default: null\n  },\n  headerBorderVariant: {\n    type: String,\n    default: null\n  },\n  headerTextVariant: {\n    type: String,\n    default: null\n  },\n  headerCloseVariant: {\n    type: String,\n    default: null\n  },\n  headerClass: {\n    type: [String, Array],\n    default: null\n  },\n  bodyBgVariant: {\n    type: String,\n    default: null\n  },\n  bodyTextVariant: {\n    type: String,\n    default: null\n  },\n  modalClass: {\n    type: [String, Array],\n    default: null\n  },\n  dialogClass: {\n    type: [String, Array],\n    default: null\n  },\n  contentClass: {\n    type: [String, Array],\n    default: null\n  },\n  bodyClass: {\n    type: [String, Array],\n    default: null\n  },\n  footerBgVariant: {\n    type: String,\n    default: null\n  },\n  footerBorderVariant: {\n    type: String,\n    default: null\n  },\n  footerTextVariant: {\n    type: String,\n    default: null\n  },\n  footerClass: {\n    type: [String, Array],\n    default: null\n  },\n  hideHeader: {\n    type: Boolean,\n    default: false\n  },\n  hideFooter: {\n    type: Boolean,\n    default: false\n  },\n  hideHeaderClose: {\n    type: Boolean,\n    default: false\n  },\n  hideBackdrop: {\n    type: Boolean,\n    default: false\n  },\n  okOnly: {\n    type: Boolean,\n    default: false\n  },\n  okDisabled: {\n    type: Boolean,\n    default: false\n  },\n  cancelDisabled: {\n    type: Boolean,\n    default: false\n  },\n  visible: {\n    type: Boolean,\n    default: false\n  },\n  returnFocus: {\n    // type: Object,\n    default: null\n  },\n  headerCloseLabel: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'headerCloseLabel') || '');\n    }\n  },\n  cancelTitle: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'cancelTitle') || '');\n    }\n  },\n  cancelTitleHtml: {\n    type: String\n  },\n  okTitle: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'okTitle') || '');\n    }\n  },\n  okTitleHtml: {\n    type: String\n  },\n  cancelVariant: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'cancelVariant') || '');\n    }\n  },\n  okVariant: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'okVariant') || '');\n    }\n  },\n  lazy: {\n    type: Boolean,\n    default: false\n  },\n  busy: {\n    type: Boolean,\n    default: false\n  } // @vue/component\n\n};\nexports.props = props;\n\nvar _default2 = _vue.default.extend({\n  name: NAME,\n  mixins: [_id.default, _listenOnRoot.default],\n  model: {\n    prop: 'visible',\n    event: 'change'\n  },\n  props: props,\n  data: function data() {\n    return {\n      is_hidden: this.lazy || false,\n      // For lazy modals\n      is_visible: false,\n      // Controls modal visible state\n      is_transitioning: false,\n      // Used for style control\n      is_show: false,\n      // Used for style control\n      is_block: false,\n      // Used for style control\n      is_opening: false,\n      // To sginal that modal is in the process of opening\n      is_closing: false,\n      // To signal that the modal is in the process of closing\n      ignoreBackdropClick: false,\n      // Used to signify if click out listener should ignore the click\n      isModalOverflowing: false,\n      return_focus: this.returnFocus || null,\n      // The following items are controlled by the modalManager instance\n      scrollbarWidth: 0,\n      zIndex: _modalManager.default.getBaseZIndex(),\n      isTop: true,\n      isBodyOverflowing: false\n    };\n  },\n  computed: {\n    modalClasses: function modalClasses() {\n      return [{\n        fade: !this.noFade,\n        show: this.is_show,\n        'd-block': this.is_block\n      }, this.modalClass];\n    },\n    modalStyles: function modalStyles() {\n      var sbWidth = \"\".concat(this.scrollbarWidth, \"px\");\n      return {\n        paddingLeft: !this.isBodyOverflowing && this.isModalOverflowing ? sbWidth : '',\n        paddingRight: this.isBodyOverflowing && !this.isModalOverflowing ? sbWidth : ''\n      };\n    },\n    dialogClasses: function dialogClasses() {\n      var _ref;\n\n      return [(_ref = {}, _defineProperty(_ref, \"modal-\".concat(this.size), Boolean(this.size)), _defineProperty(_ref, 'modal-dialog-centered', this.centered), _defineProperty(_ref, 'modal-dialog-scrollable', this.scrollable), _ref), this.dialogClass];\n    },\n    backdropClasses: function backdropClasses() {\n      return {\n        fade: !this.noFade,\n        show: this.is_show || this.noFade\n      };\n    },\n    headerClasses: function headerClasses() {\n      var _ref2;\n\n      return [(_ref2 = {}, _defineProperty(_ref2, \"bg-\".concat(this.headerBgVariant), Boolean(this.headerBgVariant)), _defineProperty(_ref2, \"text-\".concat(this.headerTextVariant), Boolean(this.headerTextVariant)), _defineProperty(_ref2, \"border-\".concat(this.headerBorderVariant), Boolean(this.headerBorderVariant)), _ref2), this.headerClass];\n    },\n    bodyClasses: function bodyClasses() {\n      var _ref3;\n\n      return [(_ref3 = {}, _defineProperty(_ref3, \"bg-\".concat(this.bodyBgVariant), Boolean(this.bodyBgVariant)), _defineProperty(_ref3, \"text-\".concat(this.bodyTextVariant), Boolean(this.bodyTextVariant)), _ref3), this.bodyClass];\n    },\n    footerClasses: function footerClasses() {\n      var _ref4;\n\n      return [(_ref4 = {}, _defineProperty(_ref4, \"bg-\".concat(this.footerBgVariant), Boolean(this.footerBgVariant)), _defineProperty(_ref4, \"text-\".concat(this.footerTextVariant), Boolean(this.footerTextVariant)), _defineProperty(_ref4, \"border-\".concat(this.footerBorderVariant), Boolean(this.footerBorderVariant)), _ref4), this.footerClass];\n    },\n    modalOuterStyle: function modalOuterStyle() {\n      // Styles needed for proper stacking of modals\n      return {\n        position: 'absolute',\n        zIndex: this.zIndex\n      };\n    }\n  },\n  watch: {\n    visible: function visible(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this[newVal ? 'show' : 'hide']();\n      }\n    }\n  },\n  created: function created() {\n    // Define non-reactive properties\n    this._observer = null;\n  },\n  mounted: function mounted() {\n    // Set initial z-index as queried from the DOM\n    this.zIndex = _modalManager.default.getBaseZIndex(); // Listen for events from others to either open or close ourselves\n    // and listen to all modals to enable/disable enforce focus\n\n    this.listenOnRoot('bv::show::modal', this.showHandler);\n    this.listenOnRoot('bv::hide::modal', this.hideHandler);\n    this.listenOnRoot('bv::toggle::modal', this.toggleHandler); // Listen for `bv:modal::show events`, and close ourselves if the\n    // opening modal not us\n\n    this.listenOnRoot('bv::modal::show', this.modalListener); // Initially show modal?\n\n    if (this.visible === true) {\n      this.show();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Ensure everything is back to normal\n    if (this._observer) {\n      this._observer.disconnect();\n\n      this._observer = null;\n    }\n\n    this.setEnforceFocus(false);\n    this.setResizeEvent(false);\n\n    if (this.is_visible) {\n      this.is_visible = false;\n      this.is_show = false;\n      this.is_transitioning = false;\n    }\n  },\n  methods: {\n    // Public Methods\n    show: function show() {\n      if (this.is_visible || this.is_opening) {\n        // If already open, on in the process of opening, do nothing\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (this.is_closing) {\n        // If we are in the process of closing, wait until hidden before re-opening\n\n        /* istanbul ignore next: very difficult to test */\n        this.$once('hidden', this.show);\n        /* istanbul ignore next */\n\n        return;\n      }\n\n      this.is_opening = true;\n\n      if (_env.inBrowser && document.activeElement.focus) {\n        // Preset the fallback return focus value if it is not set.\n        // document.activeElement should be the trigger element that was clicked or\n        // in the case of using the v-model, which ever element has current focus.\n        // Will be overridden by some commands such as toggle, etc.\n        this.return_focus = this.return_focus || document.activeElement;\n      }\n\n      var showEvt = new _bvModalEvent.default('show', {\n        cancelable: true,\n        vueTarget: this,\n        target: this.$refs.modal,\n        relatedTarget: null,\n        modalId: this.safeId()\n      });\n      this.emitEvent(showEvt); // Don't show if canceled\n\n      if (showEvt.defaultPrevented || this.is_visible) {\n        this.is_opening = false;\n        return;\n      } // Show the modal\n\n\n      this.doShow();\n    },\n    hide: function hide(trigger) {\n      if (!this.is_visible || this.is_closing) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.is_closing = true;\n      var hideEvt = new _bvModalEvent.default('hide', {\n        cancelable: true,\n        vueTarget: this,\n        target: this.$refs.modal,\n        relatedTarget: null,\n        modalId: this.safeId(),\n        trigger: trigger || null\n      }); // We emit specific event for one of the three built-in buttons\n\n      if (trigger === 'ok') {\n        this.$emit('ok', hideEvt);\n      } else if (trigger === 'cancel') {\n        this.$emit('cancel', hideEvt);\n      } else if (trigger === 'headerclose') {\n        this.$emit('close', hideEvt);\n      }\n\n      this.emitEvent(hideEvt); // Hide if not canceled\n\n      if (hideEvt.defaultPrevented || !this.is_visible) {\n        this.is_closing = false;\n        return;\n      } // Stop observing for content changes\n\n\n      if (this._observer) {\n        this._observer.disconnect();\n\n        this._observer = null;\n      }\n\n      this.is_visible = false; // Update the v-model\n\n      this.$emit('change', false);\n    },\n    // Public method to toggle modal visibility\n    toggle: function toggle(triggerEl) {\n      if (triggerEl) {\n        this.return_focus = triggerEl;\n      }\n\n      if (this.is_visible) {\n        this.hide('toggle');\n      } else {\n        this.show();\n      }\n    },\n    // Private method to finish showing modal\n    doShow: function doShow() {\n      var _this = this;\n\n      /* istanbul ignore next: commenting out for now until we can test stacking */\n      if (_modalManager.default.modalsAreOpen && this.noStacking) {\n        // If another modal(s) is already open, wait for it(them) to close\n        this.listenOnRootOnce('bv::modal::hidden', this.doShow);\n        return;\n      } // Place modal in DOM if lazy\n\n\n      this.is_hidden = false;\n      this.$nextTick(function () {\n        // We do this in `$nextTick()` to ensure the modal is in DOM first\n        // before we show it\n        _this.is_visible = true;\n        _this.is_opening = false; // Update the v-model\n\n        _this.$emit('change', true); // Observe changes in modal content and adjust if necessary\n\n\n        _this._observer = (0, _observeDom.default)(_this.$refs.content, _this.checkModalOverflow.bind(_this), OBSERVER_CONFIG);\n      });\n    },\n    // Transition handlers\n    onBeforeEnter: function onBeforeEnter() {\n      this.is_transitioning = true;\n\n      _modalManager.default.registerModal(this);\n\n      this.checkModalOverflow();\n      this.setResizeEvent(true);\n    },\n    onEnter: function onEnter() {\n      this.is_block = true;\n    },\n    onAfterEnter: function onAfterEnter() {\n      var _this2 = this;\n\n      this.is_show = true;\n      this.is_transitioning = false;\n      this.$nextTick(function () {\n        var shownEvt = new _bvModalEvent.default('shown', {\n          cancelable: false,\n          vueTarget: _this2,\n          target: _this2.$refs.modal,\n          relatedTarget: null,\n          modalId: _this2.safeId()\n        });\n\n        _this2.emitEvent(shownEvt);\n\n        _this2.focusFirst();\n\n        _this2.setEnforceFocus(true);\n      });\n    },\n    onBeforeLeave: function onBeforeLeave() {\n      this.is_transitioning = true;\n      this.setResizeEvent(false);\n    },\n    onLeave: function onLeave() {\n      // Remove the 'show' class\n      this.is_show = false;\n    },\n    onAfterLeave: function onAfterLeave() {\n      var _this3 = this;\n\n      this.is_block = false;\n      this.is_transitioning = false;\n      this.setEnforceFocus(false);\n      this.isModalOverflowing = false;\n      this.$nextTick(function () {\n        _this3.returnFocusTo();\n\n        _this3.is_closing = false;\n        var hiddenEvt = new _bvModalEvent.default('hidden', {\n          cancelable: false,\n          vueTarget: _this3,\n          target: _this3.lazy ? null : _this3.$refs.modal,\n          relatedTarget: null,\n          modalId: _this3.safeId()\n        });\n\n        _this3.emitEvent(hiddenEvt);\n\n        _modalManager.default.unregisterModal(_this3);\n      });\n    },\n    // Event emitter\n    emitEvent: function emitEvent(bvEvt) {\n      var type = bvEvt.type;\n      this.$emit(type, bvEvt);\n      this.emitOnRoot(\"bv::modal::\".concat(type), bvEvt, bvEvt.modalId);\n    },\n    // UI event handlers\n    onDialogMousedown: function onDialogMousedown(evt) {\n      var _this4 = this;\n\n      // Watch to see if the matching mouseup event occurs outside the dialog\n      // And if it does, cancel the clickout handler\n      var modal = this.$refs.modal;\n\n      var onceModalMouseup = function onceModalMouseup(evt) {\n        (0, _dom.eventOff)(modal, 'mouseup', onceModalMouseup, EVT_OPTIONS);\n\n        if (evt.target === modal) {\n          _this4.ignoreBackdropClick = true;\n        }\n      };\n\n      (0, _dom.eventOn)(modal, 'mouseup', onceModalMouseup, EVT_OPTIONS);\n    },\n    onClickOut: function onClickOut(evt) {\n      // Do nothing if not visible, backdrop click disabled, or element\n      // that generated click event is no longer in document\n      if (!this.is_visible || this.noCloseOnBackdrop || !(0, _dom.contains)(document, evt.target)) {\n        return;\n      }\n\n      if (this.ignoreBackdropClick) {\n        // Click was initiated inside the modal content, but finished outside\n        // Set by the above onDialogMousedown handler\n        this.ignoreBackdropClick = false;\n        return;\n      } // If backdrop clicked, hide modal\n\n\n      if (!(0, _dom.contains)(this.$refs.content, evt.target)) {\n        this.hide('backdrop');\n      }\n    },\n    onEsc: function onEsc(evt) {\n      // If ESC pressed, hide modal\n      if (evt.keyCode === _keyCodes.default.ESC && this.is_visible && !this.noCloseOnEsc) {\n        this.hide('esc');\n      }\n    },\n    // Document focusin listener\n    focusHandler: function focusHandler(evt) {\n      // If focus leaves modal, bring it back\n      var modal = this.$refs.modal;\n\n      if (!this.noEnforceFocus && this.isTop && this.is_visible && modal && document !== evt.target && !(0, _dom.contains)(modal, evt.target)) {\n        modal.focus({\n          preventScroll: true\n        });\n      }\n    },\n    // Turn on/off focusin listener\n    setEnforceFocus: function setEnforceFocus(on) {\n      var method = on ? _dom.eventOn : _dom.eventOff;\n      method(document, 'focusin', this.focusHandler, EVT_OPTIONS);\n    },\n    // Resize listener\n    setResizeEvent: function setResizeEvent(on) {\n      var method = on ? _dom.eventOn : _dom.eventOff; // These events should probably also check if body is overflowing\n\n      method(window, 'resize', this.checkModalOverflow, EVT_OPTIONS);\n      method(window, 'orientationchange', this.checkModalOverflow, EVT_OPTIONS);\n    },\n    // Root listener handlers\n    showHandler: function showHandler(id, triggerEl) {\n      if (id === this.id) {\n        this.return_focus = triggerEl || document.activeElement || null;\n        this.show();\n      }\n    },\n    hideHandler: function hideHandler(id) {\n      if (id === this.id) {\n        this.hide('event');\n      }\n    },\n    toggleHandler: function toggleHandler(id, triggerEl) {\n      if (id === this.id) {\n        this.toggle(triggerEl);\n      }\n    },\n    modalListener: function modalListener(bvEvt) {\n      // If another modal opens, close this one if stacking not permitted\n      if (this.noStacking && bvEvt.vueTarget !== this) {\n        this.hide();\n      }\n    },\n    // Focus control handlers\n    focusFirst: function focusFirst() {\n      // TODO:\n      //   Add support for finding input element with 'autofocus' attribute set\n      //   and focus that element\n      // Don't try and focus if we are SSR\n      if (_env.inBrowser) {\n        var modal = this.$refs.modal;\n        var activeElement = document.activeElement; // If the modal contains the activeElement, we don't do anything\n\n        if (modal && !(activeElement && (0, _dom.contains)(modal, activeElement))) {\n          // Make sure top of modal is showing (if longer than the viewport)\n          // and focus the modal content wrapper\n          this.$nextTick(function () {\n            modal.scrollTop = 0;\n            modal.focus();\n          });\n        }\n      }\n    },\n    returnFocusTo: function returnFocusTo() {\n      // Prefer `returnFocus` prop over event specified `return_focus` value\n      var el = this.returnFocus || this.return_focus || document.activeElement || null; // Is el a string CSS Selector?\n\n      el = typeof el === 'string' ? (0, _dom.select)(el) : el;\n\n      if (el) {\n        // Possibly could be a component reference\n        el = el.$el || el;\n\n        if ((0, _dom.isVisible)(el) && el.focus) {\n          el.focus();\n        }\n      }\n    },\n    checkModalOverflow: function checkModalOverflow() {\n      if (this.is_visible) {\n        var modal = this.$refs.modal;\n        this.isModalOverflowing = modal.scrollHeight > document.documentElement.clientHeight;\n      }\n    }\n  },\n  render: function render(h) {\n    var _this5 = this;\n\n    var $slots = this.$slots; // Modal header\n\n    var header = h(false);\n\n    if (!this.hideHeader) {\n      var modalHeader = $slots['modal-header'];\n\n      if (!modalHeader) {\n        var closeButton = h(false);\n\n        if (!this.hideHeaderClose) {\n          closeButton = h(_buttonClose.default, {\n            props: {\n              disabled: this.is_transitioning,\n              ariaLabel: this.headerCloseLabel,\n              textVariant: this.headerCloseVariant || this.headerTextVariant\n            },\n            on: {\n              click: function click(evt) {\n                _this5.hide('headerclose');\n              }\n            }\n          }, [$slots['modal-header-close']]);\n        }\n\n        modalHeader = [h(this.titleTag, {\n          class: ['modal-title']\n        }, [$slots['modal-title'] || this.titleHtml || (0, _html.stripTags)(this.title)]), closeButton];\n      }\n\n      header = h('header', {\n        ref: 'header',\n        staticClass: 'modal-header',\n        class: this.headerClasses,\n        attrs: {\n          id: this.safeId('__BV_modal_header_')\n        }\n      }, [modalHeader]);\n    } // Modal body\n\n\n    var body = h('div', {\n      ref: 'body',\n      staticClass: 'modal-body',\n      class: this.bodyClasses,\n      attrs: {\n        id: this.safeId('__BV_modal_body_')\n      }\n    }, [$slots.default]); // Modal Footer\n\n    var footer = h(false);\n\n    if (!this.hideFooter) {\n      var modalFooter = $slots['modal-footer'];\n\n      if (!modalFooter) {\n        var cancelButton = h(false);\n\n        if (!this.okOnly) {\n          cancelButton = h(_button.default, {\n            props: {\n              variant: this.cancelVariant,\n              size: this.buttonSize,\n              disabled: this.cancelDisabled || this.busy || this.is_transitioning\n            },\n            on: {\n              click: function click(evt) {\n                _this5.hide('cancel');\n              }\n            }\n          }, [$slots['modal-cancel'] || this.cancelTitleHtml || (0, _html.stripTags)(this.cancelTitle)]);\n        }\n\n        var okButton = h(_button.default, {\n          props: {\n            variant: this.okVariant,\n            size: this.buttonSize,\n            disabled: this.okDisabled || this.busy || this.is_transitioning\n          },\n          on: {\n            click: function click(evt) {\n              _this5.hide('ok');\n            }\n          }\n        }, [$slots['modal-ok'] || this.okTitleHtml || (0, _html.stripTags)(this.okTitle)]);\n        modalFooter = [cancelButton, okButton];\n      }\n\n      footer = h('footer', {\n        ref: 'footer',\n        staticClass: 'modal-footer',\n        class: this.footerClasses,\n        attrs: {\n          id: this.safeId('__BV_modal_footer_')\n        }\n      }, [modalFooter]);\n    } // Assemble modal content\n\n\n    var modalContent = h('div', {\n      ref: 'content',\n      staticClass: 'modal-content',\n      class: this.contentClass,\n      attrs: {\n        role: 'document',\n        id: this.safeId('__BV_modal_content_'),\n        'aria-labelledby': this.hideHeader ? null : this.safeId('__BV_modal_header_'),\n        'aria-describedby': this.safeId('__BV_modal_body_')\n      }\n    }, [header, body, footer]); // Modal dialog wrapper\n\n    var modalDialog = h('div', {\n      staticClass: 'modal-dialog',\n      class: this.dialogClasses,\n      on: {\n        mousedown: this.onDialogMousedown\n      }\n    }, [modalContent]); // Modal\n\n    var modal = h('div', {\n      ref: 'modal',\n      staticClass: 'modal',\n      class: this.modalClasses,\n      style: this.modalStyles,\n      directives: [{\n        name: 'show',\n        rawName: 'v-show',\n        value: this.is_visible,\n        expression: 'is_visible'\n      }],\n      attrs: {\n        id: this.safeId(),\n        role: 'dialog',\n        tabindex: '-1',\n        'aria-hidden': this.is_visible ? null : 'true',\n        'aria-modal': this.is_visible ? 'true' : null\n      },\n      on: {\n        keydown: this.onEsc,\n        click: this.onClickOut\n      }\n    }, [modalDialog]); // Wrap modal in transition\n\n    modal = h('transition', {\n      props: {\n        enterClass: '',\n        enterToClass: '',\n        enterActiveClass: '',\n        leaveClass: '',\n        leaveActiveClass: '',\n        leaveToClass: ''\n      },\n      on: {\n        'before-enter': this.onBeforeEnter,\n        enter: this.onEnter,\n        'after-enter': this.onAfterEnter,\n        'before-leave': this.onBeforeLeave,\n        leave: this.onLeave,\n        'after-leave': this.onAfterLeave\n      }\n    }, [modal]); // Modal Backdrop\n\n    var backdrop = h(false);\n\n    if (!this.hideBackdrop && (this.is_visible || this.is_transitioning || this.is_block)) {\n      backdrop = h('div', {\n        staticClass: 'modal-backdrop',\n        class: this.backdropClasses,\n        attrs: {\n          id: this.safeId('__BV_modal_backdrop_')\n        }\n      }, [$slots['modal-backdrop']]);\n    } // Tab trap to prevent page from scrolling to next element in tab index\n    // during enforce focus tab cycle\n\n\n    var tabTrap = h(false);\n\n    if (this.is_visible && this.isTop && !this.noEnforceFocus) {\n      tabTrap = h('div', {\n        attrs: {\n          tabindex: '0'\n        }\n      });\n    } // Assemble modal and backdrop in an outer div needed for lazy modals\n\n\n    var outer = h(false);\n\n    if (!this.is_hidden) {\n      outer = h('div', {\n        key: 'modal-outer',\n        style: this.modalOuterStyle,\n        attrs: {\n          id: this.safeId('__BV_modal_outer_')\n        }\n      }, [modal, tabTrap, backdrop]);\n    } // Wrap in DIV to maintain `this.$el` reference for hide/show method access\n\n\n    return h('div', {}, [outer]);\n  }\n});\n\nexports.default = _default2;"],"sourceRoot":""}