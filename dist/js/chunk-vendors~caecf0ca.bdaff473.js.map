{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/mixins/focus-in.js","webpack:///./node_modules/bootstrap-vue/es/mixins/card-mixin.js","webpack:///./node_modules/bootstrap-vue/es/mixins/click-out.js","webpack:///./node_modules/bootstrap-vue/es/mixins/dropdown.js"],"names":["exports","__esModule","default","_dom","__webpack_require__","_default","data","listenForFocusIn","watch","newValue","oldValue","eventOff","this","focusInElement","_focusInHandler","eventOn","beforeCreate","mounted","document","beforeDestroy","methods","evt","focusInHandler","props","tag","type","String","bgVariant","borderVariant","textVariant","listenForClickOut","clickOutElement","clickOutEventName","_clickOutHandler","documentElement","isClickOut","contains","$el","target","clickOutHandler","_popper","_interopRequireDefault","_clickOut","_focusIn","_keyCodes","_bvEvent","_warn","obj","_objectSpread","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","filterVisible","els","isVisible","Selector","FORM_CHILD","NAVBAR_NAV","ITEM_SELECTOR","AttachmentMap","TOP","TOPEND","BOTTOM","BOTTOMEND","RIGHT","RIGHTEND","LEFT","LEFTEND","_default2","mixins","provide","bvDropdown","disabled","Boolean","text","html","dropup","dropright","dropleft","right","offset","Number","noFlip","popperOpts","visible","inNavbar","visibleChangePrevented","computed","toggler","toggle","$refs","evtName","bvEvt","cancelable","vueTarget","menu","relatedTarget","emitEvent","defaultPrevented","$off","focusToggler","showMenu","hideMenu","created","deactivated","whileOpenListen","removePopper","$emit","$root","_this","isNav","closest","element","split","createPopper","$nextTick","focusMenu","getPopperConfig","destroy","placement","popperConfig","modifiers","flip","enabled","boundary","preventOverflow","boundariesElement","open","$on","rootCloseListener","vm","show","hide","refocus","undefined","$once","keyCode","ENTER","SPACE","DOWN","preventDefault","stopPropagation","click","onKeydown","ESC","onEsc","TAB","onTab","focusNext","UP","onMouseOver","up","_this2","items","getItems","index","indexOf","focusItem","idx","el","find","getAttr","focus","selectAll"],"mappings":"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","file":"js/chunk-vendors~caecf0ca.bdaff473.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _dom = require(\"../utils/dom\");\n\n// @vue/component\nvar _default = {\n  data: function data() {\n    return {\n      listenForFocusIn: false\n    };\n  },\n  watch: {\n    listenForFocusIn: function listenForFocusIn(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        (0, _dom.eventOff)(this.focusInElement, 'focusin', this._focusInHandler, false);\n\n        if (newValue) {\n          (0, _dom.eventOn)(this.focusInElement, 'focusin', this._focusInHandler, false);\n        }\n      }\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive properties\n    this.focusInElement = null;\n  },\n  mounted: function mounted() {\n    if (!this.focusInElement) {\n      this.focusInElement = document;\n    }\n\n    if (this.listenForFocusIn) {\n      (0, _dom.eventOn)(this.focusInElement, 'focusin', this._focusInHandler, false);\n    }\n  },\n  beforeDestroy: function beforeDestroy()\n  /* istanbul ignore next */\n  {\n    (0, _dom.eventOff)(this.focusInElement, 'focusin', this._focusInHandler, false);\n  },\n  methods: {\n    _focusInHandler: function _focusInHandler(evt) {\n      if (this.focusInHandler) {\n        this.focusInHandler(evt);\n      }\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n// @vue/component\nvar _default = {\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    bgVariant: {\n      type: String,\n      default: null\n    },\n    borderVariant: {\n      type: String,\n      default: null\n    },\n    textVariant: {\n      type: String,\n      default: null\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _dom = require(\"../utils/dom\");\n\n// @vue/component\nvar _default = {\n  data: function data() {\n    return {\n      listenForClickOut: false\n    };\n  },\n  watch: {\n    listenForClickOut: function listenForClickOut(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        (0, _dom.eventOff)(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n\n        if (newValue) {\n          (0, _dom.eventOn)(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n        }\n      }\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive properties\n    this.clickOutElement = null;\n    this.clickOutEventName = null;\n  },\n  mounted: function mounted() {\n    if (!this.clickOutElement) {\n      this.clickOutElement = document;\n    }\n\n    if (!this.clickOutEventName) {\n      this.clickOutEventName = 'ontouchstart' in document.documentElement ? 'touchstart' : 'click';\n    }\n\n    if (this.listenForClickOut) {\n      (0, _dom.eventOn)(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n    }\n  },\n  beforeDestroy: function beforeDestroy()\n  /* istanbul ignore next */\n  {\n    (0, _dom.eventOff)(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n  },\n  methods: {\n    isClickOut: function isClickOut(evt) {\n      return !(0, _dom.contains)(this.$el, evt.target);\n    },\n    _clickOutHandler: function _clickOutHandler(evt) {\n      if (this.clickOutHandler && this.isClickOut(evt)) {\n        this.clickOutHandler(evt);\n      }\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _clickOut = _interopRequireDefault(require(\"./click-out\"));\n\nvar _focusIn = _interopRequireDefault(require(\"./focus-in\"));\n\nvar _keyCodes = _interopRequireDefault(require(\"../utils/key-codes\"));\n\nvar _bvEvent = _interopRequireDefault(require(\"../utils/bv-event.class\"));\n\nvar _warn = _interopRequireDefault(require(\"../utils/warn\"));\n\nvar _dom = require(\"../utils/dom\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n  return (els || []).filter(_dom.isVisible);\n} // Dropdown item CSS selectors\n// TODO: .dropdown-form handling\n\n\nvar Selector = {\n  FORM_CHILD: '.dropdown form',\n  NAVBAR_NAV: '.navbar-nav',\n  ITEM_SELECTOR: '.dropdown-item:not(.disabled):not([disabled])' // Popper attachment positions\n\n};\nvar AttachmentMap = {\n  // Dropup left align\n  TOP: 'top-start',\n  // Dropup right align\n  TOPEND: 'top-end',\n  // Dropdown left align\n  BOTTOM: 'bottom-start',\n  // Dropdown right align\n  BOTTOMEND: 'bottom-end',\n  // Dropright left align\n  RIGHT: 'right-start',\n  // Dropright right align\n  RIGHTEND: 'right-end',\n  // Dropleft left align\n  LEFT: 'left-start',\n  // Dropleft right align\n  LEFTEND: 'left-end' // @vue/component\n\n};\nvar _default2 = {\n  mixins: [_clickOut.default, _focusIn.default],\n  provide: function provide() {\n    return {\n      bvDropdown: this\n    };\n  },\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    text: {\n      // Button label\n      type: String,\n      default: ''\n    },\n    html: {\n      // Button label\n      type: String\n    },\n    dropup: {\n      // place on top if possible\n      type: Boolean,\n      default: false\n    },\n    dropright: {\n      // place right if possible\n      type: Boolean,\n      default: false\n    },\n    dropleft: {\n      // place left if possible\n      type: Boolean,\n      default: false\n    },\n    right: {\n      // Right align menu (default is left align)\n      type: Boolean,\n      default: false\n    },\n    offset: {\n      // Number of pixels to offset menu, or a CSS unit value (i.e. 1px, 1rem, etc)\n      type: [Number, String],\n      default: 0\n    },\n    noFlip: {\n      // Disable auto-flipping of menu from bottom<=>top\n      type: Boolean,\n      default: false\n    },\n    popperOpts: {\n      // type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      inNavbar: null,\n      visibleChangePrevented: false\n    };\n  },\n  computed: {\n    toggler: function toggler() {\n      var toggle = this.$refs.toggle;\n      return toggle ? toggle.$el || toggle : null;\n    }\n  },\n  watch: {\n    visible: function visible(newValue, oldValue) {\n      if (this.visibleChangePrevented) {\n        this.visibleChangePrevented = false;\n        return;\n      }\n\n      if (newValue !== oldValue) {\n        var evtName = newValue ? 'show' : 'hide';\n        var bvEvt = new _bvEvent.default(evtName, {\n          cancelable: true,\n          vueTarget: this,\n          target: this.$refs.menu,\n          relatedTarget: null\n        });\n        this.emitEvent(bvEvt);\n\n        if (bvEvt.defaultPrevented) {\n          // Reset value and exit if canceled\n          this.visibleChangePrevented = true;\n          this.visible = oldValue; // Just in case a child element triggereded this.hide(true)\n\n          this.$off('hidden', this.focusToggler);\n          return;\n        }\n\n        if (evtName === 'show') {\n          this.showMenu();\n        } else {\n          this.hideMenu();\n        }\n      }\n    },\n    disabled: function disabled(newValue, oldValue) {\n      if (newValue !== oldValue && newValue && this.visible) {\n        // Hide dropdown if disabled changes to true\n        this.visible = false;\n      }\n    }\n  },\n  created: function created() {\n    // Create non-reactive property\n    this._popper = null;\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next: not easy to test */\n  {\n    // In case we are inside a `<keep-alive>`\n    this.visible = false;\n    this.whileOpenListen(false);\n    this.removePopper();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.visible = false;\n    this.whileOpenListen(false);\n    this.removePopper();\n  },\n  methods: {\n    // Event emitter\n    emitEvent: function emitEvent(bvEvt) {\n      var type = bvEvt.type;\n      this.$emit(type, bvEvt);\n      this.$root.$emit(\"bv::dropdown::\".concat(type), bvEvt);\n    },\n    showMenu: function showMenu() {\n      var _this = this;\n\n      if (this.disabled) {\n        /* istanbul ignore next */\n        return;\n      } // Ensure other menus are closed\n\n\n      this.$root.$emit('bv::dropdown::shown', this); // Are we in a navbar ?\n\n      if (this.inNavbar === null && this.isNav) {\n        /* istanbul ignore next */\n        this.inNavbar = Boolean((0, _dom.closest)('.navbar', this.$el));\n      } // Disable totally Popper.js for Dropdown in Navbar\n\n\n      if (!this.inNavbar) {\n        if (typeof _popper.default === 'undefined') {\n          /* istanbul ignore next */\n          (0, _warn.default)('b-dropdown: Popper.js not found. Falling back to CSS positioning.');\n        } else {\n          // for dropup with alignment we use the parent element as popper container\n          var element = this.dropup && this.right || this.split ? this.$el : this.$refs.toggle; // Make sure we have a reference to an element, not a component!\n\n          element = element.$el || element; // Instantiate popper.js\n\n          this.createPopper(element);\n        }\n      }\n\n      this.whileOpenListen(true); // Wrap in nextTick to ensure menu is fully rendered/shown\n\n      this.$nextTick(function () {\n        // Focus on the menu container on show\n        _this.focusMenu(); // Emit the shown event\n\n\n        _this.$emit('shown');\n      });\n    },\n    hideMenu: function hideMenu() {\n      this.whileOpenListen(false);\n      this.$root.$emit('bv::dropdown::hidden', this);\n      this.$emit('hidden');\n      this.removePopper();\n    },\n    createPopper: function createPopper(element) {\n      this.removePopper();\n      this._popper = new _popper.default(element, this.$refs.menu, this.getPopperConfig());\n    },\n    removePopper: function removePopper() {\n      if (this._popper) {\n        // Ensure popper event listeners are removed cleanly\n        this._popper.destroy();\n      }\n\n      this._popper = null;\n    },\n    getPopperConfig: function getPopperConfig() {\n      var placement = AttachmentMap.BOTTOM;\n\n      if (this.dropup) {\n        placement = this.right ? AttachmentMap.TOPEND : AttachmentMap.TOP;\n      } else if (this.dropright) {\n        placement = AttachmentMap.RIGHT;\n      } else if (this.dropleft) {\n        placement = AttachmentMap.LEFT;\n      } else if (this.right) {\n        placement = AttachmentMap.BOTTOMEND;\n      }\n\n      var popperConfig = {\n        placement: placement,\n        modifiers: {\n          offset: {\n            offset: this.offset || 0\n          },\n          flip: {\n            enabled: !this.noFlip\n          }\n        }\n      };\n\n      if (this.boundary) {\n        popperConfig.modifiers.preventOverflow = {\n          boundariesElement: this.boundary\n        };\n      }\n\n      return _objectSpread({}, popperConfig, this.popperOpts || {});\n    },\n    whileOpenListen: function whileOpenListen(open) {\n      // turn listeners on/off while open\n      if (open) {\n        // If another dropdown is opened\n        this.$root.$on('bv::dropdown::shown', this.rootCloseListener); // Hide the dropdown when clicked outside\n\n        this.listenForClickOut = true; // Hide the dropdown when it loses focus\n\n        this.listenForFocusIn = true;\n      } else {\n        this.$root.$off('bv::dropdown::shown', this.rootCloseListener);\n        this.listenForClickOut = false;\n        this.listenForFocusIn = false;\n      }\n    },\n    rootCloseListener: function rootCloseListener(vm) {\n      if (vm !== this) {\n        this.visible = false;\n      }\n    },\n    show: function show() {\n      // Public method to show dropdown\n      if (this.disabled) {\n        return;\n      }\n\n      this.visible = true;\n    },\n    hide: function hide() {\n      var refocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      // Public method to hide dropdown\n      if (this.disabled) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.visible = false;\n\n      if (refocus) {\n        // Child element is closing the dropdown on click\n        this.$once('hidden', this.focusToggler);\n      }\n    },\n    toggle: function toggle(evt) {\n      // Called only by a button that toggles the menu\n      evt = evt || {};\n      var type = evt.type;\n      var key = evt.keyCode;\n\n      if (type !== 'click' && !(type === 'keydown' && (key === _keyCodes.default.ENTER || key === _keyCodes.default.SPACE || key === _keyCodes.default.DOWN))) {\n        // We only toggle on Click, Enter, Space, and Arrow Down\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (this.disabled) {\n        /* istanbul ignore next */\n        this.visible = false;\n        /* istanbul ignore next */\n\n        return;\n      }\n\n      this.$emit('toggle', evt);\n\n      if (evt.defaultPrevented) {\n        // Exit if canceled\n        return;\n      }\n\n      evt.preventDefault();\n      evt.stopPropagation(); // Toggle visibility\n\n      this.visible = !this.visible;\n    },\n    click: function click(evt) {\n      // Called only in split button mode, for the split button\n      if (this.disabled) {\n        /* istanbul ignore next */\n        this.visible = false;\n        /* istanbul ignore next */\n\n        return;\n      }\n\n      this.$emit('click', evt);\n    },\n    onKeydown: function onKeydown(evt) {\n      // Called from dropdown menu context\n      var key = evt.keyCode;\n\n      if (key === _keyCodes.default.ESC) {\n        // Close on ESC\n        this.onEsc(evt);\n      } else if (key === _keyCodes.default.TAB) {\n        // Close on tab out\n\n        /* istanbul ignore next: not used and should be removed */\n        this.onTab(evt);\n      } else if (key === _keyCodes.default.DOWN) {\n        // Down Arrow\n        this.focusNext(evt, false);\n      } else if (key === _keyCodes.default.UP) {\n        // Up Arrow\n        this.focusNext(evt, true);\n      }\n    },\n    onEsc: function onEsc(evt) {\n      if (this.visible) {\n        this.visible = false;\n        evt.preventDefault();\n        evt.stopPropagation(); // Return focus to original trigger button\n\n        this.$once('hidden', this.focusToggler);\n      }\n    },\n    onTab: function onTab(evt)\n    /* istanbul ignore next: not easy to test */\n    {// TODO: Need special handler for dealing with form inputs\n      // Tab, if in a text-like input, we should just focus next item in the dropdown\n      // Note: Inputs are in a special .dropdown-form container\n    },\n    onMouseOver: function onMouseOver(evt)\n    /* istanbul ignore next: not easy to test */\n    {// Removed mouseover focus handler\n    },\n    // Document click out listener\n    clickOutHandler: function clickOutHandler() {\n      if (this.visible) {\n        this.visible = false;\n      }\n    },\n    // Document focusin listener\n    focusInHandler: function focusInHandler(evt) {\n      // If focus leaves dropdown, hide it\n      if (this.visible && !(0, _dom.contains)(this.$refs.menu, evt.target) && !(0, _dom.contains)(this.$refs.toggle, evt.target)) {\n        this.visible = false;\n      }\n    },\n    // Keyboard nav\n    focusNext: function focusNext(evt, up) {\n      var _this2 = this;\n\n      if (!this.visible) {\n        /* istanbul ignore next: should never happen */\n        return;\n      }\n\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.$nextTick(function () {\n        var items = _this2.getItems();\n\n        if (items.length < 1) {\n          /* istanbul ignore next: should never happen */\n          return;\n        }\n\n        var index = items.indexOf(evt.target);\n\n        if (up && index > 0) {\n          index--;\n        } else if (!up && index < items.length - 1) {\n          index++;\n        }\n\n        if (index < 0) {\n          /* istanbul ignore next: should never happen */\n          index = 0;\n        }\n\n        _this2.focusItem(index, items);\n      });\n    },\n    focusItem: function focusItem(idx, items) {\n      var el = items.find(function (el, i) {\n        return i === idx;\n      });\n\n      if (el && (0, _dom.getAttr)(el, 'tabindex') !== '-1') {\n        el.focus();\n      }\n    },\n    getItems: function getItems() {\n      // Get all items\n      return filterVisible((0, _dom.selectAll)(Selector.ITEM_SELECTOR, this.$refs.menu));\n    },\n    focusMenu: function focusMenu() {\n      this.$refs.menu.focus && this.$refs.menu.focus();\n    },\n    focusToggler: function focusToggler() {\n      var toggler = this.toggler;\n\n      if (toggler && toggler.focus) {\n        toggler.focus();\n      }\n    }\n  }\n};\nexports.default = _default2;"],"sourceRoot":""}