{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/mixins/pagination.js"],"names":["exports","__esModule","default","_warn","_interopRequireDefault","__webpack_require__","_range","_keyCodes","_dom","_toString","_normalizeSlot","_link","obj","ELLIPSIS_THRESHOLD","DEFAULT_LIMIT","makePageArray","startNum","numPages","map","value","index","number","classes","sanitizeLimit","limit","parseInt","sanitizeCurPage","page","onSpaceKey","evt","keyCode","SPACE","preventDefault","stopImmediatePropagation","stopPropagation","currentTarget","click","props","disabled","type","Boolean","Number","String","validator","num","isNaN","size","align","hideGotoEndButtons","ariaLabel","labelFirstPage","firstText","labelPrevPage","prevText","labelNextPage","nextText","labelLastPage","lastText","labelPage","Function","hideEllipsis","ellipsisText","_default","mixins","model","prop","event","data","curr","this","currentPage","localNumPages","localLimit","computed","btnSize","concat","alignment","computedCurrentPage","paginationParams","curPage","showFirstDots","showLastDots","numLinks","Math","floor","pageList","_this$paginationParam","currPage","pages","length","idx","i","_i","_i2","_i3","watch","newValue","oldValue","$emit","created","_this","$nextTick","methods","getButtons","selectAll","$el","filter","btn","isVisible","setBtnFocus","focus","focusCurrent","_this2","find","el","getAttr","focusFirst","_this3","isDisabled","document","activeElement","focusLast","_this4","reverse","focusPrev","_this5","buttons","indexOf","focusNext","_this6","cnt","render","h","_this7","numberOfPages","_this$paginationParam2","fill","isActivePage","pageNum","noCurrPage","makeEndBtn","linkTo","btnSlot","btnText","pageTest","key","scope","btnContent","normalizeSlot","inner","staticClass","linkProps","attrs","role","tabindex","aria-label","aria-controls","ariaControls","aria-disabled","on","onClick","keydown","class","flex-fill","aria-hidden","makeEllipsis","isLast","push","forEach","active","tabIndex","aria-checked","aria-posinset","aria-setsize","makePage","content","pagination","ref","shift","shiftKey","LEFT","RIGHT","isNav"],"mappings":"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","file":"js/chunk-vendors~07bd030b.8b480b3b.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _warn = _interopRequireDefault(require(\"../utils/warn\"));\n\nvar _range = _interopRequireDefault(require(\"../utils/range\"));\n\nvar _keyCodes = _interopRequireDefault(require(\"../utils/key-codes\"));\n\nvar _dom = require(\"../utils/dom\");\n\nvar _toString = _interopRequireDefault(require(\"../utils/to-string\"));\n\nvar _normalizeSlot = _interopRequireDefault(require(\"../mixins/normalize-slot\"));\n\nvar _link = _interopRequireDefault(require(\"../components/link/link\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Comon props, computed, data, render function, and methods for b-pagination and b-pagination-nav\n */\n// Threshold of limit size when we start/stop showing ellipsis\nvar ELLIPSIS_THRESHOLD = 3; // Default # of buttons limit\n\nvar DEFAULT_LIMIT = 5; // Make an array of N to N+X\n\nfunction makePageArray(startNum, numPages) {\n  return (0, _range.default)(numPages).map(function (value, index) {\n    return {\n      number: index + startNum,\n      classes: null\n    };\n  });\n} // Sanitize the provided Limit value (converting to a number)\n\n\nfunction sanitizeLimit(value) {\n  var limit = parseInt(value, 10) || 1;\n  return limit < 1 ? DEFAULT_LIMIT : limit;\n} // Sanitize the provided current page number (converting to a number)\n\n\nfunction sanitizeCurPage(value, numPages) {\n  var page = parseInt(value, 10) || 1;\n  return page > numPages ? numPages : page < 1 ? 1 : page;\n} // Links don't normally respond to SPACE, so we add that functionality via this handler\n\n\nfunction onSpaceKey(evt) {\n  if (evt.keyCode === _keyCodes.default.SPACE) {\n    evt.preventDefault(); // Stop page from scrolling\n\n    evt.stopImmediatePropagation();\n    evt.stopPropagation(); // Trigger the click event on the link\n\n    evt.currentTarget.click();\n    return false;\n  }\n} // Props object\n\n\nvar props = {\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  value: {\n    type: [Number, String],\n    default: null,\n    validator: function validator(value) {\n      var num = parseInt(value, 10);\n      /* istanbul ignore if */\n\n      if (value !== null && (isNaN(num) || num < 1)) {\n        (0, _warn.default)('pagination: v-model value must be a number greater than 0');\n        return false;\n      }\n\n      return true;\n    }\n  },\n  limit: {\n    type: [Number, String],\n    default: DEFAULT_LIMIT,\n    validator: function validator(value) {\n      var num = parseInt(value, 10);\n      /* istanbul ignore if */\n\n      if (isNaN(num) || num < 1) {\n        (0, _warn.default)('pagination: prop \"limit\" must be a number greater than 0');\n        return false;\n      }\n\n      return true;\n    }\n  },\n  size: {\n    type: String,\n    default: 'md'\n  },\n  align: {\n    type: String,\n    default: 'left'\n  },\n  hideGotoEndButtons: {\n    type: Boolean,\n    default: false\n  },\n  ariaLabel: {\n    type: String,\n    default: 'Pagination'\n  },\n  labelFirstPage: {\n    type: String,\n    default: 'Go to first page'\n  },\n  firstText: {\n    type: String,\n    default: '«'\n  },\n  labelPrevPage: {\n    type: String,\n    default: 'Go to previous page'\n  },\n  prevText: {\n    type: String,\n    default: '‹'\n  },\n  labelNextPage: {\n    type: String,\n    default: 'Go to next page'\n  },\n  nextText: {\n    type: String,\n    default: '›'\n  },\n  labelLastPage: {\n    type: String,\n    default: 'Go to last page'\n  },\n  lastText: {\n    type: String,\n    default: '»'\n  },\n  labelPage: {\n    type: [String, Function],\n    default: 'Go to page'\n  },\n  hideEllipsis: {\n    type: Boolean,\n    default: false\n  },\n  ellipsisText: {\n    type: String,\n    default: '…'\n  } // @vue/component\n\n};\nvar _default = {\n  mixins: [_normalizeSlot.default],\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: props,\n  data: function data() {\n    var curr = parseInt(this.value, 10);\n    return {\n      // -1 signifies no page initially selected\n      currentPage: curr > 0 ? curr : -1,\n      localNumPages: 1,\n      localLimit: DEFAULT_LIMIT\n    };\n  },\n  computed: {\n    btnSize: function btnSize() {\n      return this.size ? \"pagination-\".concat(this.size) : '';\n    },\n    alignment: function alignment() {\n      var align = this.align;\n\n      if (align === 'center') {\n        return 'justify-content-center';\n      } else if (align === 'end' || align === 'right') {\n        return 'justify-content-end';\n      } else if (align === 'fill') {\n        // The page-items will also have 'flex-fill' added.\n        // We ad text centering to make the button appearance better in fill mode.\n        return 'text-center';\n      }\n\n      return '';\n    },\n    computedCurrentPage: function computedCurrentPage() {\n      return sanitizeCurPage(this.currentPage, this.localNumPages);\n    },\n    paginationParams: function paginationParams() {\n      // Determine if we should show the the ellipsis\n      var limit = this.limit;\n      var numPages = this.localNumPages;\n      var curPage = this.computedCurrentPage;\n      var hideEllipsis = this.hideEllipsis;\n      var showFirstDots = false;\n      var showLastDots = false;\n      var numLinks = limit;\n      var startNum = 1;\n\n      if (numPages <= limit) {\n        // Special Case: Less pages available than the limit of displayed pages\n        numLinks = numPages;\n      } else if (curPage < limit - 1 && limit > ELLIPSIS_THRESHOLD) {\n        // We are near the beginning of the page list\n        if (!hideEllipsis) {\n          showLastDots = true;\n          numLinks = limit - 1;\n        }\n      } else if (numPages - curPage + 2 < limit && limit > ELLIPSIS_THRESHOLD) {\n        // We are near the end of the list\n        if (!hideEllipsis) {\n          numLinks = limit - 1;\n          showFirstDots = true;\n        }\n\n        startNum = numPages - numLinks + 1;\n      } else {\n        // We are somewhere in the middle of the page list\n        if (limit > ELLIPSIS_THRESHOLD && !hideEllipsis) {\n          numLinks = limit - 2;\n          showFirstDots = showLastDots = true;\n        }\n\n        startNum = curPage - Math.floor(numLinks / 2);\n      } // Sanity checks\n\n\n      if (startNum < 1) {\n        /* istanbul ignore next */\n        startNum = 1;\n      } else if (startNum > numPages - numLinks) {\n        startNum = numPages - numLinks + 1;\n      }\n\n      return {\n        showFirstDots: showFirstDots,\n        showLastDots: showLastDots,\n        numLinks: numLinks,\n        startNum: startNum\n      };\n    },\n    pageList: function pageList() {\n      // Generates the pageList array\n      var _this$paginationParam = this.paginationParams,\n          numLinks = _this$paginationParam.numLinks,\n          startNum = _this$paginationParam.startNum;\n      var currPage = this.computedCurrentPage; // Generate list of page numbers\n\n      var pages = makePageArray(startNum, numLinks); // We limit to a total of 3 page buttons on XS screens\n      // So add classes to page links to hide them for XS breakpoint\n      // Note: Ellipsis will also be hidden on XS screens\n      // TODO: Make this visual limit configurable based on breakpoint(s)\n\n      if (pages.length > 3) {\n        var idx = currPage - startNum; // THe following is a bootstrap-vue custom utility class\n\n        var classes = 'bv-d-xs-down-none';\n\n        if (idx === 0) {\n          // Keep leftmost 3 buttons visible when current page is first page\n          for (var i = 3; i < pages.length; i++) {\n            pages[i].classes = classes;\n          }\n        } else if (idx === pages.length - 1) {\n          // Keep rightmost 3 buttons visible when current page is last page\n          for (var _i = 0; _i < pages.length - 3; _i++) {\n            pages[_i].classes = classes;\n          }\n        } else {\n          // Hide all except current page, current page - 1 and current page + 1\n          for (var _i2 = 0; _i2 < idx - 1; _i2++) {\n            // hide some left button(s)\n            pages[_i2].classes = classes;\n          }\n\n          for (var _i3 = pages.length - 1; _i3 > idx + 1; _i3--) {\n            // hide some right button(s)\n            pages[_i3].classes = classes;\n          }\n        }\n      }\n\n      return pages;\n    }\n  },\n  watch: {\n    value: function value(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.currentPage = sanitizeCurPage(newValue, this.localNumPages);\n      }\n    },\n    currentPage: function currentPage(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        // Emit null if no page selected\n        this.$emit('input', newValue > 0 ? newValue : null);\n      }\n    },\n    limit: function limit(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.localLimit = sanitizeLimit(newValue);\n      }\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    // Set our default values in data\n    this.localLimit = sanitizeLimit(this.limit);\n    this.$nextTick(function () {\n      // Sanity check\n      _this.currentPage = _this.currentPage > _this.localNumPages ? _this.localNumPages : _this.currentPage;\n    });\n  },\n  methods: {\n    getButtons: function getButtons() {\n      // Return only buttons that are visible\n      return (0, _dom.selectAll)('a.page-link', this.$el).filter(function (btn) {\n        return (0, _dom.isVisible)(btn);\n      });\n    },\n    setBtnFocus: function setBtnFocus(btn) {\n      btn.focus();\n    },\n    focusCurrent: function focusCurrent() {\n      var _this2 = this;\n\n      // We do this in next tick to ensure buttons have finished rendering\n      this.$nextTick(function () {\n        var btn = _this2.getButtons().find(function (el) {\n          return parseInt((0, _dom.getAttr)(el, 'aria-posinset'), 10) === _this2.computedCurrentPage;\n        });\n\n        if (btn && btn.focus) {\n          _this2.setBtnFocus(btn);\n        } else {\n          // Fallback if current page is not in button list\n          _this2.focusFirst();\n        }\n      });\n    },\n    focusFirst: function focusFirst() {\n      var _this3 = this;\n\n      // We do this in next tick to ensure buttons have finished rendering\n      this.$nextTick(function () {\n        var btn = _this3.getButtons().find(function (el) {\n          return !(0, _dom.isDisabled)(el);\n        });\n\n        if (btn && btn.focus && btn !== document.activeElement) {\n          _this3.setBtnFocus(btn);\n        }\n      });\n    },\n    focusLast: function focusLast() {\n      var _this4 = this;\n\n      // We do this in next tick to ensure buttons have finished rendering\n      this.$nextTick(function () {\n        var btn = _this4.getButtons().reverse().find(function (el) {\n          return !(0, _dom.isDisabled)(el);\n        });\n\n        if (btn && btn.focus && btn !== document.activeElement) {\n          _this4.setBtnFocus(btn);\n        }\n      });\n    },\n    focusPrev: function focusPrev() {\n      var _this5 = this;\n\n      // We do this in next tick to ensure buttons have finished rendering\n      this.$nextTick(function () {\n        var buttons = _this5.getButtons();\n\n        var idx = buttons.indexOf(document.activeElement);\n\n        if (idx > 0 && !(0, _dom.isDisabled)(buttons[idx - 1]) && buttons[idx - 1].focus) {\n          _this5.setBtnFocus(buttons[idx - 1]);\n        }\n      });\n    },\n    focusNext: function focusNext() {\n      var _this6 = this;\n\n      // We do this in next tick to ensure buttons have finished rendering\n      this.$nextTick(function () {\n        var buttons = _this6.getButtons();\n\n        var idx = buttons.indexOf(document.activeElement);\n        var cnt = buttons.length - 1;\n\n        if (idx < cnt && !(0, _dom.isDisabled)(buttons[idx + 1]) && buttons[idx + 1].focus) {\n          _this6.setBtnFocus(buttons[idx + 1]);\n        }\n      });\n    }\n  },\n  render: function render(h) {\n    var _this7 = this;\n\n    var buttons = [];\n    var numberOfPages = this.localNumPages;\n    var disabled = this.disabled;\n    var _this$paginationParam2 = this.paginationParams,\n        showFirstDots = _this$paginationParam2.showFirstDots,\n        showLastDots = _this$paginationParam2.showLastDots;\n    var currPage = this.computedCurrentPage;\n    var fill = this.align === 'fill'; // Helper function and flag\n\n    var isActivePage = function isActivePage(pageNum) {\n      return pageNum === currPage;\n    };\n\n    var noCurrPage = this.currentPage < 1; // Factory function for prev/next/first/last buttons\n\n    var makeEndBtn = function makeEndBtn(linkTo, ariaLabel, btnSlot, btnText, pageTest, key) {\n      var isDisabled = disabled || isActivePage(pageTest) || noCurrPage || linkTo < 1 || linkTo > numberOfPages;\n      var pageNum = linkTo < 1 ? 1 : linkTo > numberOfPages ? numberOfPages : linkTo;\n      var scope = {\n        disabled: isDisabled,\n        page: pageNum,\n        index: pageNum - 1\n      };\n      var btnContent = _this7.normalizeSlot(btnSlot, scope) || (0, _toString.default)(btnText) || h(false);\n      var inner = h(isDisabled ? 'span' : _link.default, {\n        staticClass: 'page-link',\n        props: isDisabled ? {} : _this7.linkProps(linkTo),\n        attrs: {\n          role: 'menuitem',\n          tabindex: isDisabled ? null : '-1',\n          'aria-label': ariaLabel,\n          'aria-controls': _this7.ariaControls || null,\n          'aria-disabled': isDisabled ? 'true' : null\n        },\n        on: isDisabled ? {} : {\n          click: function click(evt) {\n            _this7.onClick(linkTo, evt);\n          },\n          keydown: onSpaceKey\n        }\n      }, [btnContent]);\n      return h('li', {\n        key: key,\n        staticClass: 'page-item',\n        class: {\n          disabled: isDisabled,\n          'flex-fill': fill\n        },\n        attrs: {\n          role: 'none presentation',\n          'aria-hidden': isDisabled ? 'true' : null\n        }\n      }, [inner]);\n    }; // Ellipsis factory\n\n\n    var makeEllipsis = function makeEllipsis(isLast) {\n      return h('li', {\n        key: \"elipsis-\".concat(isLast ? 'last' : 'first'),\n        staticClass: 'page-item',\n        class: ['disabled', 'bv-d-xs-down-none', fill ? 'flex-fill' : ''],\n        attrs: {\n          role: 'separator'\n        }\n      }, [h('span', {\n        staticClass: 'page-link'\n      }, [_this7.normalizeSlot('ellipsis-text', {}) || (0, _toString.default)(_this7.ellipsisText) || h(false)])]);\n    }; // Goto First Page button bookend\n\n\n    buttons.push(this.hideGotoEndButtons ? h(false) : makeEndBtn(1, this.labelFirstPage, 'first-text', this.firstText, 1, 'bookend-goto-first')); // Goto Previous page button bookend\n\n    buttons.push(makeEndBtn(currPage - 1, this.labelPrevPage, 'prev-text', this.prevText, 1, 'bookend-goto-prev')); // First Ellipsis Bookend\n\n    buttons.push(showFirstDots ? makeEllipsis(false) : h(false)); // Individual Page links\n\n    this.pageList.forEach(function (page, idx) {\n      var active = isActivePage(page.number) && !noCurrPage; // Active page will have tabindex of 0, or if no current page and first page button\n\n      var tabIndex = disabled ? null : active || noCurrPage && idx === 0 ? '0' : '-1';\n      var attrs = {\n        role: 'menuitemradio',\n        'aria-disabled': disabled ? 'true' : null,\n        'aria-controls': _this7.ariaControls || null,\n        'aria-label': typeof _this7.labelPage === 'function' ? _this7.labelPage(page.number) : \"\".concat(_this7.labelPage, \" \").concat(page.number),\n        'aria-checked': active ? 'true' : 'false',\n        'aria-posinset': page.number,\n        'aria-setsize': numberOfPages,\n        // ARIA \"roving tabindex\" method\n        tabindex: tabIndex\n      };\n      var btnContent = (0, _toString.default)(_this7.makePage(page.number));\n      var scope = {\n        page: page.number,\n        index: page.number - 1,\n        content: btnContent,\n        active: active,\n        disabled: disabled\n      };\n      var inner = h(disabled ? 'span' : _link.default, {\n        props: disabled ? {} : _this7.linkProps(page.number),\n        staticClass: 'page-link',\n        attrs: attrs,\n        on: disabled ? {} : {\n          click: function click(evt) {\n            _this7.onClick(page.number, evt);\n          },\n          keydown: onSpaceKey\n        }\n      }, [_this7.normalizeSlot('page', scope) || btnContent]);\n      buttons.push(h('li', {\n        key: \"page-\".concat(page.number),\n        staticClass: 'page-item',\n        class: [{\n          disabled: disabled,\n          active: active,\n          'flex-fill': fill\n        }, page.classes],\n        attrs: {\n          role: 'none presentation'\n        }\n      }, [inner]));\n    }); // Last Ellipsis Bookend\n\n    buttons.push(showLastDots ? makeEllipsis(true) : h(false)); // Goto Next page button bookend\n\n    buttons.push(makeEndBtn(currPage + 1, this.labelNextPage, 'next-text', this.nextText, numberOfPages, 'bookend-goto-next')); // Goto Last Page button bookend\n\n    buttons.push(this.hideGotoEndButtons ? h(false) : makeEndBtn(numberOfPages, this.labelLastPage, 'last-text', this.lastText, numberOfPages, 'bookend-goto-last')); // Assemble the paginatiom buttons\n\n    var pagination = h('ul', {\n      ref: 'ul',\n      staticClass: 'pagination',\n      class: ['b-pagination', this.btnSize, this.alignment],\n      attrs: {\n        role: 'menubar',\n        'aria-disabled': disabled ? 'true' : 'false',\n        'aria-label': this.ariaLabel || null\n      },\n      on: {\n        keydown: function keydown(evt) {\n          var keyCode = evt.keyCode;\n          var shift = evt.shiftKey;\n\n          if (keyCode === _keyCodes.default.LEFT) {\n            evt.preventDefault();\n            shift ? _this7.focusFirst() : _this7.focusPrev();\n          } else if (keyCode === _keyCodes.default.RIGHT) {\n            evt.preventDefault();\n            shift ? _this7.focusLast() : _this7.focusNext();\n          }\n        }\n      }\n    }, buttons); // if we are pagination-nav, wrap in '<nav>' wrapper\n\n    if (this.isNav) {\n      return h('nav', {\n        attrs: {\n          'aria-disabled': disabled ? 'true' : null,\n          'aria-hidden': disabled ? 'true' : 'false'\n        }\n      }, [pagination]);\n    } else {\n      return pagination;\n    }\n  }\n};\nexports.default = _default;"],"sourceRoot":""}