{"version":3,"sources":["webpack:///./node_modules/croppie/croppie.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","call","exports","__webpack_require__","module","undefined","self","Promise","a","b","apply","arguments","c","this","TypeError","_state","_value","_deferreds","i","e","f","d","push","k","onFulfilled","onRejected","reject","resolve","then","g","length","h","j","setTimeout","setImmediate","l","Array","isArray","Object","prototype","toString","all","slice","constructor","race","_setImmediateFn","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","Event","HTMLCanvasElement","toBlob","defineProperty","value","callback","type","quality","binStr","atob","toDataURL","split","len","arr","Uint8Array","charCodeAt","Blob","CSS_TRANS_ORG","CSS_TRANSFORM","CSS_USERSELECT","cssPrefixes","emptyStyles","createElement","style","EXIF_NORM","EXIF_FLIP","vendorPrefix","prop","capProp","toUpperCase","getExifOffset","ornt","rotate","indexOf","index","offset","deepExtend","destination","source","property","clone","object","debounce","func","wait","immediate","timeout","context","args","later","callNow","clearTimeout","dispatchChange","element","initEvent","dispatchEvent","fireEvent","css","el","styles","val","tmp","addClass","classList","add","className","removeClass","remove","replace","setAttributes","attrs","key","setAttribute","num","v","parseInt","loadImage","src","doExif","img","Image","opacity","_resolve","removeAttribute","match","onload","EXIF","getData","onerror","ev","naturalImageDimensions","w","naturalWidth","naturalHeight","orient","getExifOrientation","x","width","height","TRANSLATE_OPTS","translate3d","suffix","translate","Transform","y","scale","parseFloat","parse","fromMatrix","fromString","vals","substring","values","Croppie","globals","TransformOrigin","exifdata","Orientation","drawCanvas","canvas","orientation","ctx","getContext","save","Math","PI","drawImage","restore","_create","boundary","viewport","overlay","bw","bh","contClass","customViewportClass","options","useCanvas","enableOrientation","_hasExif","data","elements","preview","isNaN","alt","aria-grabbed","appendChild","customClass","_initDraggable","enableZoom","_initializeZoom","enableResize","_initializeResize","enableExif","direction","originalX","originalY","maxWidth","maxHeight","vr","hr","wrap","isDragging","minSize","mouseDown","button","preventDefault","overlayRect","getBoundingClientRect","pageX","pageY","currentTarget","touches","addEventListener","mouseMove","mouseUp","body","deltaX","deltaY","newHeight","newWidth","_updateOverlay","_updateZoomLimits","_updateCenterPoint","_triggerUpdate","removeEventListener","resizeControls","_setZoomerVal","z","zoomer","fix","max","min","zoomerWrap","change","_onZoom","origin","viewportRect","transform","scroll","delta","targetZoom","mouseWheelZoom","ctrlKey","wheelDelta","_currentZoom","step","display","showZoomer","ui","vpRect","applyCss","transCss","enforceBoundary","boundaries","_getVirtualBoundaries","transBoundaries","oBoundaries","maxX","minX","maxY","minY","_debouncedOverlay","vpWidth","vpHeight","centerFromBoundaryX","clientWidth","centerFromBoundaryY","clientHeight","imgRect","curImgWidth","curImgHeight","halfWidth","halfHeight","originMinX","originMaxX","originMinY","originMaxY","vpData","pc","top","left","center","adj","cx","cy","tx","ty","newCss","originalDistance","assignTransformCoordinates","bottom","right","toggleGrabState","keyDown","zoom","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","shiftKey","keyCode","enableKeyMovement","movement","parseKeyDown","keyMove","setZoom","touch1","touch2","dist","sqrt","boundRect","imgData","get","_isVisible","update","$","Prototype","trigger","offsetHeight","offsetWidth","_updatePropertiesFromImage","initialZoom","cssReset","transformReset","originReset","isVisible","bound","_originalImageWidth","_originalImageHeight","points","_bindPoints","_centerImage","initial","defaultInitialZoom","minW","minH","minZoom","maxZoom","boundaryData","boundZoom","pointsWidth","vpOffset","originTop","originLeft","transformTop","transformLeft","imgDim","vpDim","boundDim","vpLeft","vpTop","_transferImageToCanvas","customOrientation","clearRect","_getCanvas","circle","canvasWidth","outputWidth","canvasHeight","outputHeight","backgroundColor","fillStyle","fillRect","sx","sy","sWidth","sHeight","dx","dy","dWidth","dHeight","abs","globalCompositeOperation","beginPath","arc","closePath","fill","_getHtmlResult","div","url","_getBase64Result","format","_getBlobResult","blob","_replaceImage","parentNode","forEach","replaceChild","_bind","cb","hasExif","relative","natDim","rect","aspectRatio","imgAspectRatio","x0","y0","x1","y1","map","p","decimalPoints","toFixed","_get","widthDiff","heightDiff","x2","y2","Infinity","Number","NEGATIVE_INFINITY","RESULT_DEFAULTS","RESULT_FORMATS","_result","prom","opts","resultType","size","ratio","toLowerCase","_refresh","_rotate","deg","_destroy","removeChild","jQuery","fn","croppie","ot","singleInst","result","bind","each","method","isFunction","removeData","Error","defaults","tagName","origImage","aria-hidden","replacementDiv","bindOpts","orientationControls","enabled","leftClass","rightClass","refresh","destroy"],"mappings":"6GAAA,IAAAA,EAAAC,GAMA,SAAAC,EAAAC,GAGQH,EAAA,EAAcC,EAAA,oBAAAD,IAAAI,KAAAC,EAAAC,EAAAD,EAAAE,GAAAP,OAAAQ,IAAAP,IAAAM,EAAAF,QAAAJ,IAHtB,CAWC,qBAAAQ,WAAA,WAGD,oBAAAC,SAEA,SAAAC,GAAqB,SAAAC,EAAAD,EAAAC,GAAgB,kBAAkBD,EAAAE,MAAAD,EAAAE,YAAsB,SAAAC,EAAAJ,GAAc,qBAAAK,KAAA,UAAAC,UAAA,wCAAsF,uBAAAN,EAAA,UAAAM,UAAA,kBAA+DD,KAAAE,OAAA,KAAAF,KAAAG,OAAA,KAAAH,KAAAI,WAAA,GAAAC,EAAAV,EAAAC,EAAAU,EAAAN,MAAAJ,EAAAW,EAAAP,OAA8E,SAAAQ,EAAAb,GAAc,IAAAC,EAAAI,KAAW,cAAAA,KAAAE,YAAAF,KAAAI,WAAAK,KAAAd,QAAAe,EAAA,WAAyE,IAAAX,EAAAH,EAAAM,OAAAP,EAAAgB,YAAAhB,EAAAiB,WAA0C,UAAAb,EAAA,CAA+D,IAAAS,EAAM,IAAIA,EAAAT,EAAAH,EAAAO,QAAc,MAAAG,GAAS,YAAAX,EAAAkB,OAAAP,GAAwBX,EAAAmB,QAAAN,QAAxHZ,EAAAM,OAAAP,EAAAmB,QAAAnB,EAAAkB,QAAAjB,EAAAO,UAAuI,SAAAG,EAAAX,GAAc,IAAI,GAAAA,IAAAK,KAAA,UAAAC,UAAA,6CAA6E,GAAAN,IAAA,kBAAAA,GAAA,oBAAAA,GAAA,CAAoD,IAAAI,EAAAJ,EAAAoB,KAAa,uBAAAhB,EAAA,YAAAM,EAAAT,EAAAG,EAAAJ,GAAAC,EAAAU,EAAAN,MAAAJ,EAAAW,EAAAP,OAAmEA,KAAAE,QAAA,EAAAF,KAAAG,OAAAR,EAAAqB,EAAA5B,KAAAY,MAA0C,MAAAQ,GAASD,EAAAnB,KAAAY,KAAAQ,IAAgB,SAAAD,EAAAZ,GAAcK,KAAAE,QAAA,EAAAF,KAAAG,OAAAR,EAAAqB,EAAA5B,KAAAY,MAA0C,SAAAgB,IAAa,QAAArB,EAAA,EAAAC,EAAAI,KAAAI,WAAAa,OAAqCrB,EAAAD,EAAIA,IAAAa,EAAApB,KAAAY,UAAAI,WAAAT,IAAoCK,KAAAI,WAAA,KAAqB,SAAAc,EAAAvB,EAAAC,EAAAG,EAAAS,GAAoBR,KAAAW,YAAA,oBAAAhB,IAAA,KAAAK,KAAAY,WAAA,oBAAAhB,IAAA,KAAAI,KAAAc,QAAAf,EAAAC,KAAAa,OAAAL,EAAwH,SAAAH,EAAAV,EAAAC,EAAAG,GAAkB,IAAAS,GAAA,EAAS,IAAIb,EAAA,SAAAA,GAAca,OAAA,EAAAZ,EAAAD,KAAe,SAAAA,GAAaa,OAAA,EAAAT,EAAAJ,MAAiB,MAAAW,GAAS,GAAAE,EAAA,OAAYA,GAAA,EAAAT,EAAAO,IAAW,IAAAa,EAAAC,WAAAV,EAAA,oBAAAW,4BAAA,SAAA1B,GAA+EwB,EAAAxB,EAAA,IAAO2B,EAAAC,MAAAC,SAAA,SAAA7B,GAA8B,yBAAA8B,OAAAC,UAAAC,SAAAvC,KAAAO,IAA4DI,EAAA2B,UAAA,kBAAA/B,GAAiC,OAAAK,KAAAe,KAAA,KAAApB,IAAyBI,EAAA2B,UAAAX,KAAA,SAAApB,EAAAC,GAAgC,IAAAU,EAAAN,KAAW,WAAAD,EAAA,SAAAA,EAAAQ,GAA2BC,EAAApB,KAAAkB,EAAA,IAAAY,EAAAvB,EAAAC,EAAAG,EAAAQ,OAA2BR,EAAA6B,IAAA,WAAkB,IAAAjC,EAAA4B,MAAAG,UAAAG,MAAAzC,KAAA,IAAAU,UAAAmB,QAAAK,EAAAxB,UAAA,IAAAA,UAAA,GAAAA,WAA+F,WAAAC,EAAA,SAAAH,EAAAG,GAA2B,SAAAS,EAAAD,EAAAS,GAAgB,IAAI,GAAAA,IAAA,kBAAAA,GAAA,oBAAAA,GAAA,CAAoD,IAAAE,EAAAF,EAAAD,KAAa,uBAAAG,EAAA,YAAAA,EAAA9B,KAAA4B,EAAA,SAAArB,GAA0Da,EAAAD,EAAAZ,IAAOI,GAAIJ,EAAAY,GAAAS,EAAA,MAAAV,GAAAV,EAAAD,GAAqB,MAAAU,GAASN,EAAAM,IAAM,OAAAV,EAAAsB,OAAA,OAAArB,EAAA,IAA6B,QAAAU,EAAAX,EAAAsB,OAAAV,EAAA,EAAuBA,EAAAZ,EAAAsB,OAAWV,IAAAC,EAAAD,EAAAZ,EAAAY,OAAgBR,EAAAe,QAAA,SAAAnB,GAAuB,OAAAA,GAAA,kBAAAA,KAAAmC,cAAA/B,EAAAJ,EAAA,IAAAI,EAAA,SAAAH,GAAqEA,EAAAD,MAAOI,EAAAc,OAAA,SAAAlB,GAAsB,WAAAI,EAAA,SAAAH,EAAAG,GAA2BA,EAAAJ,MAAOI,EAAAgC,KAAA,SAAApC,GAAoB,WAAAI,EAAA,SAAAH,EAAAG,GAA2B,QAAAS,EAAA,EAAAF,EAAAX,EAAAsB,OAAuBX,EAAAE,EAAIA,IAAAb,EAAAa,GAAAO,KAAAnB,EAAAG,MAAqBA,EAAAiC,gBAAA,SAAArC,GAA+Be,EAAAf,GAAgCJ,EAAAF,QAAAE,EAAAF,QAAAU,EAAAJ,EAAAD,UAAAC,EAAAD,QAAAK,GAAj0E,CAA43EC,MAG53E,oBAAAiC,OAAAC,aACA,WACA,SAAAA,EAAAC,EAAAC,GACAA,KAAA,CAAoCC,SAAA,EAAAC,YAAA,EAAAC,YAAA/C,GACpC,IAAAgD,EAAAC,SAAAC,YAAA,eAEA,OADAF,EAAAG,gBAAAR,EAAAC,EAAAC,QAAAD,EAAAE,WAAAF,EAAAG,QACAC,EAEAN,EAAAR,UAAAO,OAAAW,MAAAlB,UACAO,OAAAC,cARA,GAYAW,kBAAAnB,UAAAoB,QACArB,OAAAsB,eAAAF,kBAAAnB,UAAA,UACAsB,MAAA,SAAAC,EAAAC,EAAAC,GAKA,IAJA,IAAAC,EAAAC,KAAArD,KAAAsD,UAAAJ,EAAAC,GAAAI,MAAA,SACAC,EAAAJ,EAAAnC,OACAwC,EAAA,IAAAC,WAAAF,GAEAnD,EAAA,EAA6BA,EAAAmD,EAAOnD,IACpCoD,EAAApD,GAAA+C,EAAAO,WAAAtD,GAGA4C,EAAA,IAAAW,KAAA,CAAAH,GAAA,CAA4CP,QAAA,kBAM5C,IAIAW,EACAC,EACAC,EANAC,EAAA,sBACAC,EAAAxB,SAAAyB,cAAA,OAAAC,MACAC,EAAA,UACAC,EAAA,UAKA,SAAAC,EAAAC,GACA,GAAAA,KAAAN,EACA,OAAAM,EAGA,IAAAC,EAAAD,EAAA,GAAAE,cAAAF,EAAA1C,MAAA,GACAxB,EAAA2D,EAAA/C,OAEA,MAAAZ,IAEA,GADAkE,EAAAP,EAAA3D,GAAAmE,EACAD,KAAAN,EACA,OAAAM,EASA,SAAAG,EAAAC,EAAAC,GACA,IAAAnB,EAAAW,EAAAS,QAAAF,IAAA,EAAAP,EAAAC,EACAS,EAAArB,EAAAoB,QAAAF,GACAI,EAAAH,EAAA,GAAAnB,EAAAxC,OAEA,OAAAwC,KAAAxC,OAAA6D,EAAAC,EAAAtB,EAAAxC,QAAAwC,EAAAxC,QAIA,SAAA+D,EAAAC,EAAAC,GAEA,QAAAC,KADAF,KAAA,GACAC,EACAA,EAAAC,IAAAD,EAAAC,GAAArD,aAAAoD,EAAAC,GAAArD,cAAAL,QACAwD,EAAAE,GAAAF,EAAAE,IAAA,GACAH,EAAAC,EAAAE,GAAAD,EAAAC,KAEAF,EAAAE,GAAAD,EAAAC,GAGA,OAAAF,EAGA,SAAAG,EAAAC,GACA,OAAAL,EAAA,GAA4BK,GAG5B,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EACA,kBACA,IAAAC,EAAA3F,KAAA4F,EAAA9F,UACA+F,EAAA,WACAH,EAAA,KACAD,GAAAF,EAAA1F,MAAA8F,EAAAC,IAEAE,EAAAL,IAAAC,EACAK,aAAAL,GACAA,EAAAtE,WAAAyE,EAAAL,GACAM,GAAAP,EAAA1F,MAAA8F,EAAAC,IAIA,SAAAI,EAAAC,GACA,mBAAAxD,SAAA,CACA,IAAAD,EAAAC,SAAAC,YAAA,cACAF,EAAA0D,UAAA,gBACAD,EAAAE,cAAA3D,QAGAyD,EAAAG,UAAA,YAKA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,wBACA,IAAAC,EAAAF,EACAA,EAAA,GACAA,EAAAE,GAAAD,EAGA,QAAAjC,KAAAgC,EACAD,EAAAnC,MAAAI,GAAAgC,EAAAhC,GAIA,SAAAmC,EAAAJ,EAAAvG,GACAuG,EAAAK,UACAL,EAAAK,UAAAC,IAAA7G,GAGAuG,EAAAO,WAAA,IAAA9G,EAIA,SAAA+G,EAAAR,EAAAvG,GACAuG,EAAAK,UACAL,EAAAK,UAAAI,OAAAhH,GAGAuG,EAAAO,UAAAP,EAAAO,UAAAG,QAAAjH,EAAA,IAIA,SAAAkH,EAAAX,EAAAY,GACA,QAAAC,KAAAD,EACAZ,EAAAc,aAAAD,EAAAD,EAAAC,IAIA,SAAAE,EAAAC,GACA,OAAAC,SAAAD,EAAA,IAIA,SAAAE,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAEA,OADAD,EAAAxD,MAAA0D,QAAA,IACA,IAAAnI,QAAA,SAAAoB,EAAAD,GACA,SAAAiH,IACAH,EAAAxD,MAAA0D,QAAA,IACAzG,WAAA,WACAN,EAAA6G,IACiB,GAGjBA,EAAAI,gBAAA,eACAN,EAAAO,MAAA,uBACAL,EAAAP,aAAA,2BAGAO,EAAAM,OAAA,WACAP,EACAQ,KAAAC,QAAAR,EAAA,WACAG,MAIAA,KAGAH,EAAAS,QAAA,SAAAC,GACAV,EAAAxD,MAAA0D,QAAA,EACAzG,WAAA,WACAP,EAAAwH,IACiB,IAEjBV,EAAAF,QAIA,SAAAa,EAAAX,EAAAhD,GACA,IAAA4D,EAAAZ,EAAAa,aACAtH,EAAAyG,EAAAc,cACAC,EAAA/D,GAAAgE,EAAAhB,GACA,GAAAe,MAAA,GACA,IAAAE,EAAAL,EACAA,EAAArH,EACAA,EAAA0H,EAEA,OAAgBC,MAAAN,EAAAO,OAAA5H,GA/IhB4C,EAAAQ,EAAA,aACAT,EAAAS,EAAA,mBACAP,EAAAO,EAAA,cAiJA,IAAAyE,EAAA,CACAC,YAAA,CACAC,OAAA,SAEAC,UAAA,CACAD,OAAA,KAGAE,EAAA,SAAAP,EAAAQ,EAAAC,GACArJ,KAAA4I,EAAAU,WAAAV,GACA5I,KAAAoJ,EAAAE,WAAAF,GACApJ,KAAAqJ,MAAAC,WAAAD,IAGAF,EAAAI,MAAA,SAAAjC,GACA,OAAAA,EAAAnD,MACAgF,EAAAI,MAAAjC,EAAAnD,MAAAL,IAEAwD,EAAAzC,QAAA,cAAAyC,EAAAzC,QAAA,WACAsE,EAAAK,WAAAlC,GAGA6B,EAAAM,WAAAnC,IAIA6B,EAAAK,WAAA,SAAAlC,GACA,IAAAoC,EAAApC,EAAAqC,UAAA,GAAApG,MAAA,KAKA,OAJAmG,EAAAzI,QAAA,SAAAqG,IACAoC,EAAA,eAGA,IAAAP,EAAA9B,EAAAqC,EAAA,IAAArC,EAAAqC,EAAA,IAAAJ,WAAAI,EAAA,MAGAP,EAAAM,WAAA,SAAAnC,GACA,IAAAsC,EAAAtC,EAAA/D,MAAA,MACA2F,EAAAU,EAAA,GAAAD,UAAAE,GAAAC,QAAAZ,UAAAjI,OAAA,GAAAsC,MAAA,KACA8F,EAAAO,EAAA3I,OAAA,EAAA2I,EAAA,GAAAD,UAAA,KACAf,EAAAM,EAAAjI,OAAA,EAAAiI,EAAA,KACAE,EAAAF,EAAAjI,OAAA,EAAAiI,EAAA,KAEA,WAAAC,EAAAP,EAAAQ,EAAAC,IAGAF,EAAAzH,UAAAC,SAAA,WACA,IAAAsH,EAAAF,EAAAc,GAAAC,QAAAZ,WAAAD,QAAA,GACA,OAAAY,GAAAC,QAAAZ,UAAA,IAAAlJ,KAAA4I,EAAA,OAAA5I,KAAAoJ,EAAA,KAAAH,EAAA,WAAAjJ,KAAAqJ,MAAA,KAGA,IAAAU,EAAA,SAAAzD,GACA,IAAAA,MAAAnC,MAAAN,GAGA,OAFA7D,KAAA4I,EAAA,OACA5I,KAAAoJ,EAAA,GAGA,IAAA/C,EAAAC,EAAAnC,MAAAN,GAAAN,MAAA,KACAvD,KAAA4I,EAAAU,WAAAjD,EAAA,IACArG,KAAAoJ,EAAAE,WAAAjD,EAAA,KAOA,SAAAsC,EAAAhB,GACA,OAAAA,EAAAqC,UAAArC,EAAAqC,SAAAC,YAAA5C,EAAAM,EAAAqC,SAAAC,aAAA,EAGA,SAAAC,EAAAC,EAAAxC,EAAAyC,GACA,IAAAvB,EAAAlB,EAAAkB,MACAC,EAAAnB,EAAAmB,OACAuB,EAAAF,EAAAG,WAAA,MAMA,OAJAH,EAAAtB,MAAAlB,EAAAkB,MACAsB,EAAArB,OAAAnB,EAAAmB,OAEAuB,EAAAE,OACAH,GACA,OACAC,EAAAnB,UAAAL,EAAA,GACAwB,EAAAhB,OAAA,KACA,MAEA,OACAgB,EAAAnB,UAAAL,EAAAC,GACAuB,EAAAzF,OAAA,IAAA4F,KAAAC,GAAA,KACA,MAEA,OACAJ,EAAAnB,UAAA,EAAAJ,GACAuB,EAAAhB,MAAA,MACA,MAEA,OACAc,EAAAtB,MAAAC,EACAqB,EAAArB,OAAAD,EACAwB,EAAAzF,OAAA,GAAA4F,KAAAC,GAAA,KACAJ,EAAAhB,MAAA,MACA,MAEA,OACAc,EAAAtB,MAAAC,EACAqB,EAAArB,OAAAD,EACAwB,EAAAzF,OAAA,GAAA4F,KAAAC,GAAA,KACAJ,EAAAnB,UAAA,GAAAJ,GACA,MAEA,OACAqB,EAAAtB,MAAAC,EACAqB,EAAArB,OAAAD,EACAwB,EAAAzF,QAAA,GAAA4F,KAAAC,GAAA,KACAJ,EAAAnB,WAAAL,EAAAC,GACAuB,EAAAhB,MAAA,MACA,MAEA,OACAc,EAAAtB,MAAAC,EACAqB,EAAArB,OAAAD,EACAwB,EAAAnB,UAAA,EAAAL,GACAwB,EAAAzF,QAAA,GAAA4F,KAAAC,GAAA,KACA,MAEAJ,EAAAK,UAAA/C,EAAA,IAAAkB,EAAAC,GACAuB,EAAAM,UAIA,SAAAC,IACA,IAGAC,EAAAlD,EAAAmD,EAAAC,EAAAC,EAAAC,EAHAxL,EAAAO,KACAkL,EAAA,oBACAC,EAAA1L,EAAA2L,QAAAN,SAAA5H,KAAA,SAAAzD,EAAA2L,QAAAN,SAAA5H,KAAA,KAGAzD,EAAA2L,QAAAC,UAAA5L,EAAA2L,QAAAE,mBAAAC,EAAAnM,KAAAK,GAEAA,EAAA+L,KAAA,GACA/L,EAAAgM,SAAA,GAEAZ,EAAApL,EAAAgM,SAAAZ,SAAApI,SAAAyB,cAAA,OACA4G,EAAArL,EAAAgM,SAAAX,SAAArI,SAAAyB,cAAA,OACAyD,EAAAlI,EAAAgM,SAAA9D,IAAAlF,SAAAyB,cAAA,OACA6G,EAAAtL,EAAAgM,SAAAV,QAAAtI,SAAAyB,cAAA,OAEAzE,EAAA2L,QAAAC,WACA5L,EAAAgM,SAAAtB,OAAA1H,SAAAyB,cAAA,UACAzE,EAAAgM,SAAAC,QAAAjM,EAAAgM,SAAAtB,QAGA1K,EAAAgM,SAAAC,QAAA/D,EAGAjB,EAAAmE,EAAA,eACAA,EAAAzD,aAAA,0BACA4D,EAAAvL,EAAA2L,QAAAP,SAAAhC,MACAoC,EAAAxL,EAAA2L,QAAAP,SAAA/B,OACAzC,EAAAwE,EAAA,CACAhC,MAAAmC,GAAAW,MAAAX,GAAA,SACAlC,OAAAmC,GAAAU,MAAAV,GAAA,WAGAvE,EAAAoE,EAAA,eACAK,GACAzE,EAAAoE,EAAAK,GAEA9E,EAAAyE,EAAA,CACAjC,MAAApJ,EAAA2L,QAAAN,SAAAjC,MAAA,KACAC,OAAArJ,EAAA2L,QAAAN,SAAAhC,OAAA,OAEAgC,EAAA1D,aAAA,cAEAV,EAAAjH,EAAAgM,SAAAC,QAAA,YACAzE,EAAAxH,EAAAgM,SAAAC,QAAA,CAA8CE,IAAA,UAAAC,eAAA,UAC9CnF,EAAAqE,EAAA,cAEAtL,EAAAwG,QAAA6F,YAAAjB,GACAA,EAAAiB,YAAArM,EAAAgM,SAAAC,SACAb,EAAAiB,YAAAhB,GACAD,EAAAiB,YAAAf,GAEArE,EAAAjH,EAAAwG,QAAAiF,GACAzL,EAAA2L,QAAAW,aACArF,EAAAjH,EAAAwG,QAAAxG,EAAA2L,QAAAW,aAGAC,EAAA5M,KAAAY,MAEAP,EAAA2L,QAAAa,YACAC,EAAA9M,KAAAK,GAOAA,EAAA2L,QAAAe,cACAC,EAAAhN,KAAAK,GAkCA,SAAA8L,IACA,OAAAvL,KAAAoL,QAAAiB,YAAApK,OAAAiG,KAGA,SAAAkE,IACA,IAGAE,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAVAnN,EAAAO,KACA6M,EAAApK,SAAAyB,cAAA,OACA4I,GAAA,EAIAC,EAAA,GAwBA,SAAAC,EAAA3E,GACA,SAAA7I,IAAA6I,EAAA4E,QAAA,IAAA5E,EAAA4E,UAEA5E,EAAA6E,kBACAJ,GAAA,CAIA,IAAAK,EAAA1N,EAAAgM,SAAAV,QAAAqC,wBASA,GAPAN,GAAA,EACAP,EAAAlE,EAAAgF,MACAb,EAAAnE,EAAAiF,MACAhB,GAAA,IAAAjE,EAAAkF,cAAA1G,UAAAhC,QAAA,oBACA4H,EAAAU,EAAAtE,MACA6D,EAAAS,EAAArE,OAEAT,EAAAmF,QAAA,CACA,IAAAA,EAAAnF,EAAAmF,QAAA,GACAjB,EAAAiB,EAAAH,MACAb,EAAAgB,EAAAF,MAGArL,OAAAwL,iBAAA,YAAAC,GACAzL,OAAAwL,iBAAA,YAAAC,GACAzL,OAAAwL,iBAAA,UAAAE,GACA1L,OAAAwL,iBAAA,WAAAE,GACAlL,SAAAmL,KAAAzJ,MAAAJ,GAAA,QAGA,SAAA2J,EAAArF,GACA,IAAAgF,EAAAhF,EAAAgF,MACAC,EAAAjF,EAAAiF,MAIA,GAFAjF,EAAA6E,iBAEA7E,EAAAmF,QAAA,CACA,IAAAA,EAAAnF,EAAAmF,QAAA,GACAH,EAAAG,EAAAH,MACAC,EAAAE,EAAAF,MAGA,IAAAO,EAAAR,EAAAd,EACAuB,EAAAR,EAAAd,EACAuB,EAAAtO,EAAA2L,QAAAN,SAAAhC,OAAAgF,EACAE,EAAAvO,EAAA2L,QAAAN,SAAAjC,MAAAgF,EAEA,MAAAvB,GAAAyB,GAAAhB,GAAAgB,GAAArB,GACArG,EAAAwG,EAAA,CACA/D,OAAAiF,EAAA,OAGAtO,EAAA2L,QAAAP,SAAA/B,QAAAgF,EACAzH,EAAA5G,EAAAgM,SAAAZ,SAAA,CACA/B,OAAArJ,EAAA2L,QAAAP,SAAA/B,OAAA,OAGArJ,EAAA2L,QAAAN,SAAAhC,QAAAgF,EACAzH,EAAA5G,EAAAgM,SAAAX,SAAA,CACAhC,OAAArJ,EAAA2L,QAAAN,SAAAhC,OAAA,QAGA,MAAAwD,GAAA0B,GAAAjB,GAAAiB,GAAAvB,IACApG,EAAAwG,EAAA,CACAhE,MAAAmF,EAAA,OAGAvO,EAAA2L,QAAAP,SAAAhC,OAAAgF,EACAxH,EAAA5G,EAAAgM,SAAAZ,SAAA,CACAhC,MAAApJ,EAAA2L,QAAAP,SAAAhC,MAAA,OAGApJ,EAAA2L,QAAAN,SAAAjC,OAAAgF,EACAxH,EAAA5G,EAAAgM,SAAAX,SAAA,CACAjC,MAAApJ,EAAA2L,QAAAN,SAAAjC,MAAA,QAIAoF,EAAA7O,KAAAK,GACAyO,EAAA9O,KAAAK,GACA0O,EAAA/O,KAAAK,GACA2O,EAAAhP,KAAAK,GACA+M,EAAAc,EACAf,EAAAc,EAGA,SAAAM,IACAb,GAAA,EACA7K,OAAAoM,oBAAA,YAAAX,GACAzL,OAAAoM,oBAAA,YAAAX,GACAzL,OAAAoM,oBAAA,UAAAV,GACA1L,OAAAoM,oBAAA,WAAAV,GACAlL,SAAAmL,KAAAzJ,MAAAJ,GAAA,GA9GA2C,EAAAmG,EAAA,cACAxG,EAAAwG,EAAA,CACAhE,MAAA7I,KAAAoL,QAAAN,SAAAjC,MAAA,KACAC,OAAA9I,KAAAoL,QAAAN,SAAAhC,OAAA,OAGA9I,KAAAoL,QAAAkD,eAAAxF,SACA6D,EAAAlK,SAAAyB,cAAA,OACAwC,EAAAiG,EAAA,uBACAE,EAAAf,YAAAa,IAGA3M,KAAAoL,QAAAkD,eAAAzF,QACA+D,EAAAnK,SAAAyB,cAAA,OACAwC,EAAAkG,EAAA,yBACAC,EAAAf,YAAAc,IAkGAD,IACAA,EAAAc,iBAAA,YAAAT,GACAL,EAAAc,iBAAA,aAAAT,IAGAJ,IACAA,EAAAa,iBAAA,YAAAT,GACAJ,EAAAa,iBAAA,aAAAT,IAGAhN,KAAAyL,SAAAZ,SAAAiB,YAAAe,GAGA,SAAA0B,EAAAjH,GACA,GAAAtH,KAAAoL,QAAAa,WAAA,CACA,IAAAuC,EAAAxO,KAAAyL,SAAAgD,OACAjI,EAAAkI,EAAApH,EAAA,GAEAkH,EAAAxL,MAAAwH,KAAAmE,IAAArF,WAAAkF,EAAAI,KAAApE,KAAAoE,IAAAtF,WAAAkF,EAAAG,KAAAnI,IAAA7E,YAIA,SAAAuK,IACA,IAAAzM,EAAAO,KACA6M,EAAApN,EAAAgM,SAAAoD,WAAApM,SAAAyB,cAAA,OACAuK,EAAAhP,EAAAgM,SAAAgD,OAAAhM,SAAAyB,cAAA,SAeA,SAAA4K,IACAC,EAAA3P,KAAAK,EAAA,CACAuD,MAAAsG,WAAAmF,EAAAzL,OACAgM,OAAA,IAAAjF,EAAAtK,EAAAgM,SAAAC,SACAuD,aAAAxP,EAAAgM,SAAAX,SAAAsC,wBACA8B,UAAA/F,EAAAI,MAAA9J,EAAAgM,SAAAC,WAIA,SAAAyD,EAAA9G,GACA,IAAA+G,EAAAC,EAEA,YAAA5P,EAAA2L,QAAAkE,iBAAA,IAAAjH,EAAAkH,QACA,SAEAH,EADa/G,EAAAmH,WACbnH,EAAAmH,WAAA,KACanH,EAAAyF,OACbzF,EAAAyF,OAAA,KACazF,EAAA9F,OACb8F,EAAA9F,QAAA,GAEA,EAGA8M,EAAA5P,EAAAgQ,aAAAL,EAAA3P,EAAAgQ,aAEApH,EAAA6E,iBACAqB,EAAAnP,KAAAK,EAAA4P,GACAP,EAAA1P,KAAAK,GAzCAiH,EAAAmG,EAAA,kBACAnG,EAAA+H,EAAA,aACAA,EAAAvL,KAAA,QACAuL,EAAAiB,KAAA,SACAjB,EAAAzL,MAAA,IACAyL,EAAAtK,MAAAwL,QAAAlQ,EAAA2L,QAAAwE,WAAA,UACAnB,EAAArH,aAAA,qBAEA3H,EAAAwG,QAAA6F,YAAAe,GACAA,EAAAf,YAAA2C,GAEAhP,EAAAgQ,aAAA,EAiCAhQ,EAAAgM,SAAAgD,OAAAhB,iBAAA,QAAAqB,GACArP,EAAAgM,SAAAgD,OAAAhB,iBAAA,SAAAqB,GAEArP,EAAA2L,QAAAkE,iBACA7P,EAAAgM,SAAAZ,SAAA4C,iBAAA,aAAA0B,GACA1P,EAAAgM,SAAAZ,SAAA4C,iBAAA,iBAAA0B,IAIA,SAAAJ,EAAAc,GACA,IAAApQ,EAAAO,KACAkP,EAAAW,IAAAX,UAAA/F,EAAAI,MAAA9J,EAAAgM,SAAAC,SACAoE,EAAAD,IAAAZ,aAAAxP,EAAAgM,SAAAX,SAAAsC,wBACA4B,EAAAa,IAAAb,OAAA,IAAAjF,EAAAtK,EAAAgM,SAAAC,SAEA,SAAAqE,IACA,IAAAC,EAAA,GACAA,EAAAlM,GAAAoL,EAAAvN,WACAqO,EAAAnM,GAAAmL,EAAArN,WACA0E,EAAA5G,EAAAgM,SAAAC,QAAAsE,GAQA,GALAvQ,EAAAgQ,aAAAI,IAAA7M,MAAAvD,EAAAgQ,aACAP,EAAA7F,MAAA5J,EAAAgQ,aACAhQ,EAAAgM,SAAAgD,OAAArH,aAAA,gBAAA3H,EAAAgQ,cACAM,IAEAtQ,EAAA2L,QAAA6E,gBAAA,CACA,IAAAC,EAAAC,EAAA/Q,KAAAK,EAAAqQ,GACAM,EAAAF,EAAAhH,UACAmH,EAAAH,EAAAlB,OAEAE,EAAAtG,GAAAwH,EAAAE,OACAtB,EAAApG,EAAAyH,EAAAE,KACArB,EAAAtG,EAAAwH,EAAAE,MAGApB,EAAAtG,GAAAwH,EAAAG,OACAvB,EAAApG,EAAAyH,EAAAC,KACApB,EAAAtG,EAAAwH,EAAAG,MAGArB,EAAA9F,GAAAgH,EAAAI,OACAxB,EAAA5F,EAAAiH,EAAAI,KACAvB,EAAA9F,EAAAgH,EAAAI,MAGAtB,EAAA9F,GAAAgH,EAAAK,OACAzB,EAAA5F,EAAAiH,EAAAG,KACAtB,EAAA9F,EAAAgH,EAAAK,MAGAV,IACAW,EAAAtR,KAAAK,GACA2O,EAAAhP,KAAAK,GAGA,SAAA0Q,EAAArF,GACA,IAAArL,EAAAO,KACAqJ,EAAA5J,EAAAgQ,aACAkB,EAAA7F,EAAAjC,MACA+H,EAAA9F,EAAAhC,OACA+H,EAAApR,EAAAgM,SAAAZ,SAAAiG,YAAA,EACAC,EAAAtR,EAAAgM,SAAAZ,SAAAmG,aAAA,EACAC,EAAAxR,EAAAgM,SAAAC,QAAA0B,wBACA8D,EAAAD,EAAApI,MACAsI,EAAAF,EAAAnI,OACAsI,EAAAT,EAAA,EACAU,EAAAT,EAAA,EAEAN,GAAA,GAAAc,EAAA/H,EAAAwH,GACAN,EAAAD,GAAAY,GAAA,EAAA7H,GAAAsH,GAAA,EAAAtH,IAEAmH,GAAA,GAAAa,EAAAhI,EAAA0H,GACAN,EAAAD,GAAAW,GAAA,EAAA9H,GAAAuH,GAAA,EAAAvH,IAEAiI,EAAA,EAAAjI,EAAA+H,EACAG,EAAAL,GAAA,EAAA7H,GAAAiI,EAEAE,EAAA,EAAAnI,EAAAgI,EACAI,EAAAN,GAAA,EAAA9H,GAAAmI,EAEA,OACAtI,UAAA,CACAoH,OACAC,OACAC,OACAC,QAEAzB,OAAA,CACAsB,KAAAiB,EACAhB,KAAAe,EACAd,KAAAiB,EACAhB,KAAAe,IAKA,SAAArD,EAAAvJ,GACA,IAAAnF,EAAAO,KACAqJ,EAAA5J,EAAAgQ,aACAjE,EAAA/L,EAAAgM,SAAAC,QAAA0B,wBACAsE,EAAAjS,EAAAgM,SAAAX,SAAAsC,wBACA8B,EAAA/F,EAAAI,MAAA9J,EAAAgM,SAAAC,QAAAvH,MAAAL,IACA6N,EAAA,IAAA5H,EAAAtK,EAAAgM,SAAAC,SACAkG,EAAAF,EAAAE,IAAApG,EAAAoG,IAAAF,EAAA5I,OAAA,EACA+I,EAAAH,EAAAG,KAAArG,EAAAqG,KAAAH,EAAA7I,MAAA,EACAiJ,EAAA,GACAC,EAAA,GAEA,GAAAnN,EAAA,CACA,IAAAoN,EAAAL,EAAA/I,EACAqJ,EAAAN,EAAAvI,EACA8I,EAAAhD,EAAAtG,EACAuJ,EAAAjD,EAAA9F,EAEA0I,EAAA1I,EAAA4I,EACAF,EAAAlJ,EAAAqJ,EACA/C,EAAA9F,EAAA8I,EACAhD,EAAAtG,EAAAuJ,OAGAL,EAAA1I,EAAAwI,EAAAvI,EACAyI,EAAAlJ,EAAAiJ,EAAAxI,EAEA0I,EAAA3I,GAAA0I,EAAA1I,EAAAuI,EAAAvI,IAAA,EAAAC,GACA0I,EAAAnJ,GAAAkJ,EAAAlJ,EAAA+I,EAAA/I,IAAA,EAAAS,GAEA6F,EAAAtG,GAAAmJ,EAAAnJ,EACAsG,EAAA9F,GAAA2I,EAAA3I,EAGA,IAAAgJ,EAAA,GACAA,EAAAvO,GAAAiO,EAAAlJ,EAAA,MAAAkJ,EAAA1I,EAAA,KACAgJ,EAAAtO,GAAAoL,EAAAvN,WACA0E,EAAA5G,EAAAgM,SAAAC,QAAA0G,GAGA,SAAApG,IACA,IAEAO,EACAC,EACA6F,EACAvC,EACAZ,EANAzP,EAAAO,KACA8M,GAAA,EAOA,SAAAwF,EAAAzE,EAAAC,GACA,IAAAmD,EAAAxR,EAAAgM,SAAAC,QAAA0B,wBACAwE,EAAA1C,EAAA9F,EAAA0E,EACA+D,EAAA3C,EAAAtG,EAAAiF,EAEApO,EAAA2L,QAAA6E,iBACAH,EAAA8B,IAAAX,EAAAW,IAAA9D,GAAAgC,EAAAyC,OAAAtB,EAAAsB,OAAAzE,IACAoB,EAAA9F,EAAAwI,GAGA9B,EAAA+B,KAAAZ,EAAAY,KAAAhE,GAAAiC,EAAA0C,MAAAvB,EAAAuB,MAAA3E,IACAqB,EAAAtG,EAAAiJ,KAIA3C,EAAA9F,EAAAwI,EACA1C,EAAAtG,EAAAiJ,GAIA,SAAAY,EAAA3F,GACArN,EAAAgM,SAAAC,QAAAtE,aAAA,eAAA0F,GACArN,EAAAgM,SAAAZ,SAAAzD,aAAA,kBAAA0F,EAAA,eAGA,SAAA4F,EAAArK,GACA,IAMAsK,EANAC,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEA,IAAA1K,EAAA2K,UAAA3K,EAAA4K,UAAAJ,GAAAxK,EAAA4K,UAAAF,GAUA,GAAAtT,EAAA2L,QAAA8H,mBAAA7K,EAAA4K,SAAA,IAAA5K,EAAA4K,SAAA,IACA5K,EAAA6E,iBACA,IAAAiG,EAAAC,EAAA/K,EAAA4K,SAEA/D,EAAA/F,EAAAI,MAAA9J,EAAAgM,SAAAC,SACAjJ,SAAAmL,KAAAzJ,MAAAJ,GAAA,OACA+L,EAAArQ,EAAAgM,SAAAX,SAAAsC,wBACAiG,EAAAF,SAdAR,EADAtK,EAAA4K,UAAAJ,EACAvJ,WAAA7J,EAAAgM,SAAAgD,OAAAzL,OAAAsG,WAAA7J,EAAAgM,SAAAgD,OAAAiB,MAGApG,WAAA7J,EAAAgM,SAAAgD,OAAAzL,OAAAsG,WAAA7J,EAAAgM,SAAAgD,OAAAiB,MAEAjQ,EAAA6T,QAAAX,GAYA,SAAAS,EAAAjM,GACA,OAAAA,GACA,KAAAyL,EACA,YACA,KAAAC,EACA,YACA,KAAAC,EACA,aACA,KAAAC,EACA,eAKA,SAAAM,EAAAF,GACA,IAAAtF,EAAAsF,EAAA,GACArF,EAAAqF,EAAA,GACAf,EAAA,GAEAE,EAAAzE,EAAAC,GAEAsE,EAAAtO,GAAAoL,EAAAvN,WACA0E,EAAA5G,EAAAgM,SAAAC,QAAA0G,GACAnE,EAAA7O,KAAAK,GACAgD,SAAAmL,KAAAzJ,MAAAJ,GAAA,GACAoK,EAAA/O,KAAAK,GACA2O,EAAAhP,KAAAK,GACA4S,EAAA,EAGA,SAAArF,EAAA3E,GACA,SAAA7I,IAAA6I,EAAA4E,QAAA,IAAA5E,EAAA4E,UAEA5E,EAAA6E,kBACAJ,GAAA,CAKA,GAJAA,GAAA,EACAP,EAAAlE,EAAAgF,MACAb,EAAAnE,EAAAiF,MAEAjF,EAAAmF,QAAA,CACA,IAAAA,EAAAnF,EAAAmF,QAAA,GACAjB,EAAAiB,EAAAH,MACAb,EAAAgB,EAAAF,MAEAmF,EAAA3F,GACAoC,EAAA/F,EAAAI,MAAA9J,EAAAgM,SAAAC,SACAzJ,OAAAwL,iBAAA,YAAAC,GACAzL,OAAAwL,iBAAA,YAAAC,GACAzL,OAAAwL,iBAAA,UAAAE,GACA1L,OAAAwL,iBAAA,WAAAE,GACAlL,SAAAmL,KAAAzJ,MAAAJ,GAAA,OACA+L,EAAArQ,EAAAgM,SAAAX,SAAAsC,yBAGA,SAAAM,EAAArF,GACAA,EAAA6E,iBACA,IAAAG,EAAAhF,EAAAgF,MACAC,EAAAjF,EAAAiF,MAEA,GAAAjF,EAAAmF,QAAA,CACA,IAAAA,EAAAnF,EAAAmF,QAAA,GACAH,EAAAG,EAAAH,MACAC,EAAAE,EAAAF,MAGA,IAAAO,EAAAR,EAAAd,EACAuB,EAAAR,EAAAd,EACA4F,EAAA,GAEA,iBAAA/J,EAAAnF,MACAmF,EAAAmF,QAAAvM,OAAA,GACA,IAAAsS,EAAAlL,EAAAmF,QAAA,GACAgG,EAAAnL,EAAAmF,QAAA,GACAiG,EAAAjJ,KAAAkJ,MAAAH,EAAAlG,MAAAmG,EAAAnG,QAAAkG,EAAAlG,MAAAmG,EAAAnG,QAAAkG,EAAAjG,MAAAkG,EAAAlG,QAAAiG,EAAAjG,MAAAkG,EAAAlG,QAEA+E,IACAA,EAAAoB,EAAAhU,EAAAgQ,cAGA,IAAApG,EAAAoK,EAAApB,EAIA,OAFA9D,EAAAnP,KAAAK,EAAA4J,QACArD,EAAAvG,EAAAgM,SAAAgD,QAKA6D,EAAAzE,EAAAC,GAEAsE,EAAAtO,GAAAoL,EAAAvN,WACA0E,EAAA5G,EAAAgM,SAAAC,QAAA0G,GACAnE,EAAA7O,KAAAK,GACA+M,EAAAc,EACAf,EAAAc,EAGA,SAAAM,IACAb,GAAA,EACA2F,EAAA3F,GACA7K,OAAAoM,oBAAA,YAAAX,GACAzL,OAAAoM,oBAAA,YAAAX,GACAzL,OAAAoM,oBAAA,UAAAV,GACA1L,OAAAoM,oBAAA,WAAAV,GACAlL,SAAAmL,KAAAzJ,MAAAJ,GAAA,GACAoK,EAAA/O,KAAAK,GACA2O,EAAAhP,KAAAK,GACA4S,EAAA,EAGA5S,EAAAgM,SAAAV,QAAA0C,iBAAA,YAAAT,GACAvN,EAAAgM,SAAAX,SAAA2C,iBAAA,UAAAiF,GACAjT,EAAAgM,SAAAV,QAAA0C,iBAAA,aAAAT,GAGA,SAAAiB,IACA,GAAAjO,KAAAyL,SAAA,CACA,IAAAhM,EAAAO,KACA2T,EAAAlU,EAAAgM,SAAAZ,SAAAuC,wBACAwG,EAAAnU,EAAAgM,SAAAC,QAAA0B,wBAEA/G,EAAA5G,EAAAgM,SAAAV,QAAA,CACAlC,MAAA+K,EAAA/K,MAAA,KACAC,OAAA8K,EAAA9K,OAAA,KACA8I,IAAAgC,EAAAhC,IAAA+B,EAAA/B,IAAA,KACAC,KAAA+B,EAAA/B,KAAA8B,EAAA9B,KAAA,QAprBA9H,EAAArI,UAAAC,SAAA,WACA,OAAA3B,KAAA4I,EAAA,MAAA5I,KAAAoJ,EAAA,MAsrBA,IAAAsH,EAAApL,EAAA2I,EAAA,KAEA,SAAAG,IACA,IAYA/F,EAZA5I,EAAAO,KACAwL,EAAA/L,EAAAoU,MAEAC,EAAA1U,KAAAK,KAIAA,EAAA2L,QAAA2I,OAAA3U,KAAAK,EAAA+L,GACA/L,EAAAuU,GAAA,qBAAAC,UACAxU,EAAAuU,EAAAvU,EAAAwG,SAAAiO,QAAA,iBAAA1I,IAIAvJ,OAAAC,YACAmG,EAAA,IAAAnG,YAAA,UAAgDK,OAAAiJ,KAEhDnD,EAAA5F,SAAAC,YAAA,eACA2F,EAAA1F,gBAAA,eAAA6I,IAGA/L,EAAAwG,QAAAE,cAAAkC,KAIA,SAAAyL,IACA,OAAA9T,KAAAyL,SAAAC,QAAAyI,aAAA,GAAAnU,KAAAyL,SAAAC,QAAA0I,YAAA,EAGA,SAAAC,IACA,IAIAT,EAJAnU,EAAAO,KACAsU,EAAA,EACAC,EAAA,GACA5M,EAAAlI,EAAAgM,SAAAC,QAEA8I,EAAA,IAAArL,EAAA,IAAAmL,GACAG,EAAA,IAAA1K,EACA2K,EAAAZ,EAAA1U,KAAAK,GAEAiV,IAAAjV,EAAA+L,KAAAmJ,QAIAlV,EAAA+L,KAAAmJ,OAAA,EACAJ,EAAAzQ,GAAA0Q,EAAA7S,WACA4S,EAAA1Q,GAAA4Q,EAAA9S,WACA4S,EAAA,aACAlO,EAAAsB,EAAA4M,GAEAX,EAAAnU,EAAAgM,SAAAC,QAAA0B,wBAEA3N,EAAAmV,oBAAAhB,EAAA/K,MACApJ,EAAAoV,qBAAAjB,EAAA9K,OACArJ,EAAA+L,KAAApB,YAAAzB,EAAAlJ,EAAAgM,SAAA9D,KAEAlI,EAAA2L,QAAAa,WACAiC,EAAA9O,KAAAK,GAAA,GAGAA,EAAAgQ,aAAA6E,EAGAE,EAAAnL,MAAA5J,EAAAgQ,aACA8E,EAAAzQ,GAAA0Q,EAAA7S,WACA0E,EAAAsB,EAAA4M,GAEA9U,EAAA+L,KAAAsJ,OAAA7T,OACA8T,EAAA3V,KAAAK,IAAA+L,KAAAsJ,QAGAE,EAAA5V,KAAAK,GAGA0O,EAAA/O,KAAAK,GACAwO,EAAA7O,KAAAK,IAGA,SAAAyO,EAAA+G,GACA,IAGAX,EACAY,EAMAC,EACAC,EAXA3V,EAAAO,KACAqV,EAAA7K,KAAAmE,IAAAlP,EAAA2L,QAAAiK,QAAA,MACAC,EAAA7V,EAAA2L,QAAAkK,SAAA,IAGA7G,EAAAhP,EAAAgM,SAAAgD,OACApF,EAAAC,WAAAmF,EAAAzL,OACAuS,EAAA9V,EAAAgM,SAAAZ,SAAAuC,wBACAwG,EAAAtL,EAAA7I,EAAAgM,SAAA9D,IAAAlI,EAAA+L,KAAApB,aACAsH,EAAAjS,EAAAgM,SAAAX,SAAAsC,wBAGA3N,EAAA2L,QAAA6E,kBACAkF,EAAAzD,EAAA7I,MAAA+K,EAAA/K,MACAuM,EAAA1D,EAAA5I,OAAA8K,EAAA9K,OACAuM,EAAA7K,KAAAmE,IAAAwG,EAAAC,IAGAC,GAAAC,IACAA,EAAAD,EAAA,GAGA5G,EAAAG,IAAAF,EAAA2G,EAAA,GACA5G,EAAAE,IAAAD,EAAA4G,EAAA,IAEAL,IAAA5L,EAAAoF,EAAAG,KAAAvF,EAAAoF,EAAAE,KACAJ,EAAAnP,KAAAK,EAAA4J,EAAAoF,EAAAG,IAAAH,EAAAG,IAAAH,EAAAE,KAEAsG,IACAC,EAAA1K,KAAAmE,IAAA4G,EAAA1M,MAAA+K,EAAA/K,MAAA0M,EAAAzM,OAAA8K,EAAA9K,QACAwL,EAAA,OAAA7U,EAAA+L,KAAAgK,UAAA/V,EAAA+L,KAAAgK,UAAAN,EACA3G,EAAAnP,KAAAK,EAAA6U,IAGAtO,EAAAyI,GAGA,SAAAsG,EAAAD,GACA,OAAAA,EAAA7T,OACA,qDAAA6T,EAEA,IAAArV,EAAAO,KACAyV,EAAAX,EAAA,GAAAA,EAAA,GAEApD,EAAAjS,EAAAgM,SAAAX,SAAAsC,wBACAuG,EAAAlU,EAAAgM,SAAAZ,SAAAuC,wBACAsI,EAAA,CACA7D,KAAAH,EAAAG,KAAA8B,EAAA9B,KACAD,IAAAF,EAAAE,IAAA+B,EAAA/B,KAEAvI,EAAAqI,EAAA7I,MAAA4M,EACAE,EAAAb,EAAA,GACAc,EAAAd,EAAA,GACAe,GAAA,EAAAf,EAAA,GAAAY,EAAA9D,IACAkE,GAAA,EAAAhB,EAAA,GAAAY,EAAA7D,KACAO,EAAA,GAEAA,EAAAvO,GAAA+R,EAAA,MAAAD,EAAA,KACAvD,EAAAtO,GAAA,IAAAqF,EAAA2M,EAAAD,EAAAxM,GAAA1H,WACA0E,EAAA5G,EAAAgM,SAAAC,QAAA0G,GAEA7D,EAAAnP,KAAAK,EAAA4J,GACA5J,EAAAgQ,aAAApG,EAGA,SAAA2L,IACA,IAAAvV,EAAAO,KACA+V,EAAAtW,EAAAgM,SAAAC,QAAA0B,wBACA4I,EAAAvW,EAAAgM,SAAAX,SAAAsC,wBACA6I,EAAAxW,EAAAgM,SAAAZ,SAAAuC,wBACA8I,EAAAF,EAAAnE,KAAAoE,EAAApE,KACAsE,EAAAH,EAAApE,IAAAqE,EAAArE,IACArJ,EAAA2N,GAAAH,EAAAlN,MAAAmN,EAAAnN,OAAA,EACA3H,EAAAiV,GAAAJ,EAAAjN,OAAAkN,EAAAlN,QAAA,EACAoG,EAAA,IAAA/F,EAAAZ,EAAArH,EAAAzB,EAAAgQ,cAEApJ,EAAA5G,EAAAgM,SAAAC,QAAA5H,EAAAoL,EAAAvN,YAGA,SAAAyU,EAAAC,GACA,IAAA5W,EAAAO,KACAmK,EAAA1K,EAAAgM,SAAAtB,OACAxC,EAAAlI,EAAAgM,SAAA9D,IACA0C,EAAAF,EAAAG,WAAA,MAEAD,EAAAiM,UAAA,IAAAnM,EAAAtB,MAAAsB,EAAArB,QACAqB,EAAAtB,MAAAlB,EAAAkB,MACAsB,EAAArB,OAAAnB,EAAAmB,OAEA,IAAAsB,EAAA3K,EAAA2L,QAAAE,mBAAA+K,GAAA1N,EAAAhB,GACAuC,EAAAC,EAAAxC,EAAAyC,GAGA,SAAAmM,EAAA/K,GACA,IAAA/L,EAAAO,KACA8U,EAAAtJ,EAAAsJ,OACAjD,EAAAxK,EAAAyN,EAAA,IACAlD,EAAAvK,EAAAyN,EAAA,IACAtC,EAAAnL,EAAAyN,EAAA,IACAvC,EAAAlL,EAAAyN,EAAA,IACAjM,EAAA2J,EAAAX,EACA/I,EAAAyJ,EAAAX,EACA4E,EAAAhL,EAAAgL,OACArM,EAAA1H,SAAAyB,cAAA,UACAmG,EAAAF,EAAAG,WAAA,MAGAmM,EAAAjL,EAAAkL,aAAA7N,EACA8N,EAAAnL,EAAAoL,cAAA9N,EAiEA,OA/DAqB,EAAAtB,MAAA4N,EACAtM,EAAArB,OAAA6N,EAEAnL,EAAAqL,kBACAxM,EAAAyM,UAAAtL,EAAAqL,gBACAxM,EAAA0M,SAAA,IAAAN,EAAAE,IAKAK,GAAAnF,EACAoF,GAAArF,EACAsF,OAAArO,EACAsO,QAAArO,EACAsO,GAAA,EACAC,GAAA,EACAC,OAAAb,EACAc,QAAAZ,EAQA9E,EAAA,IACAmF,GAAA,EACAI,GAAA5M,KAAAgN,IAAA3F,GAAAhJ,EAAA4N,GAIAS,OAAAF,GAAAvX,EAAAmV,sBACAsC,OAAAzX,EAAAmV,oBAAAoC,GACAM,OAAAJ,OAAArO,EAAA4N,GAQA7E,EAAA,IACAqF,GAAA,EACAI,GAAA7M,KAAAgN,IAAA5F,GAAA9I,EAAA6N,GAIAQ,QAAAF,GAAAxX,EAAAoV,uBACAsC,QAAA1X,EAAAoV,qBAAAoC,GACAM,QAAAJ,QAAArO,EAAA6N,GAKAtM,EAAAK,UAAA1K,KAAAyL,SAAAC,QAAAsL,GAAAC,GAAAC,OAAAC,QAAAC,GAAAC,GAAAC,OAAAC,SACAf,IACAnM,EAAAyM,UAAA,OACAzM,EAAAoN,yBAAA,iBACApN,EAAAqN,YACArN,EAAAsN,IAAAxN,EAAAtB,MAAA,EAAAsB,EAAArB,OAAA,EAAAqB,EAAAtB,MAAA,MAAA2B,KAAAC,IAAA,GACAJ,EAAAuN,YACAvN,EAAAwN,QAEA1N,EAGA,SAAA2N,EAAAtM,GACA,IAAAsJ,EAAAtJ,EAAAsJ,OACAiD,EAAAtV,SAAAyB,cAAA,OACAyD,EAAAlF,SAAAyB,cAAA,OACA2E,EAAAiM,EAAA,GAAAA,EAAA,GACAhM,EAAAgM,EAAA,GAAAA,EAAA,GAcA,OAZApO,EAAAqR,EAAA,kBACAA,EAAAjM,YAAAnE,GACAtB,EAAAsB,EAAA,CACAkK,MAAA,EAAAiD,EAAA,QACAlD,KAAA,EAAAkD,EAAA,UAEAnN,EAAAF,IAAA+D,EAAAwM,IACA3R,EAAA0R,EAAA,CACAlP,QAAA,KACAC,SAAA,OAGAiP,EAGA,SAAAE,EAAAzM,GACA,OAAA+K,EAAAnX,KAAAY,KAAAwL,GAAAlI,UAAAkI,EAAA0M,OAAA1M,EAAArI,SAGA,SAAAgV,EAAA3M,GACA,IAAA/L,EAAAO,KACA,WAAAN,QAAA,SAAAoB,GACAyV,EAAAnX,KAAAK,EAAA+L,GAAA1I,OAAA,SAAAsV,GACAtX,EAAAsX,IACa5M,EAAA0M,OAAA1M,EAAArI,WAIb,SAAAkV,EAAA1Q,GACA3H,KAAAyL,SAAA9D,IAAA2Q,aACA/W,MAAAG,UAAA6W,QAAAnZ,KAAAY,KAAAyL,SAAA9D,IAAAhB,UAAA,SAAA5G,GAAmF4H,EAAAhB,UAAAC,IAAA7G,KACnFC,KAAAyL,SAAA9D,IAAA2Q,WAAAE,aAAA7Q,EAAA3H,KAAAyL,SAAA9D,KACA3H,KAAAyL,SAAAC,QAAA/D,GAEA3H,KAAAyL,SAAA9D,MAGA,SAAA8Q,EAAArN,EAAAsN,GACA,IACAV,EADAvY,EAAAO,KAEA8U,EAAA,GACAnC,EAAA,KACAgG,EAAApN,EAAAnM,KAAAK,GAEA,uBACAuY,EAAA5M,EACAA,EAAA,QAEA,GAAA7J,MAAAC,QAAA4J,GACA0J,EAAA1J,EAAAvJ,YAEA,4BAAApC,EAAA+L,KAAAwM,IAGA,OAFA3D,EAAAjV,KAAAK,GACA2O,EAAAhP,KAAAK,GACA,KAGAuY,EAAA5M,EAAA4M,IACAlD,EAAA1J,EAAA0J,QAAA,GACAnC,EAAA,qBAAAvH,EAAA,UAAAA,EAAAuH,KAOA,OAJAlT,EAAA+L,KAAAmJ,OAAA,EACAlV,EAAA+L,KAAAwM,OAAAvY,EAAA+L,KAAAwM,IACAvY,EAAA+L,KAAAgK,UAAA7C,EAEAnL,EAAAwQ,EAAAW,GAAA5X,KAAA,SAAA4G,GAEA,GADA0Q,EAAAjZ,KAAAK,EAAAkI,GACAmN,EAAA7T,OAsBAxB,EAAA2L,QAAAwN,WACA9D,EAAA,CACAA,EAAA,GAAAnN,EAAAa,aAAA,IACAsM,EAAA,GAAAnN,EAAAc,cAAA,IACAqM,EAAA,GAAAnN,EAAAa,aAAA,IACAsM,EAAA,GAAAnN,EAAAc,cAAA,UA3BA,CACA,IAIAI,EAAAC,EAJA+P,EAAAvQ,EAAAX,GACAmR,EAAArZ,EAAAgM,SAAAX,SAAAsC,wBACA2L,EAAAD,EAAAjQ,MAAAiQ,EAAAhQ,OACAkQ,EAAAH,EAAAhQ,MAAAgQ,EAAA/P,OAGAkQ,EAAAD,GACAjQ,EAAA+P,EAAA/P,OACAD,EAAAC,EAAAiQ,IAGAlQ,EAAAgQ,EAAAhQ,MACAC,EAAA+P,EAAA/P,OAAAiQ,GAGA,IAAAE,GAAAJ,EAAAhQ,SAAA,EACAqQ,GAAAL,EAAA/P,UAAA,EACAqQ,EAAAF,EAAApQ,EACAuQ,EAAAF,EAAApQ,EACArJ,EAAA+L,KAAAsJ,OAAA,CAAAmE,EAAAC,EAAAC,EAAAC,GAWA3Z,EAAA+L,KAAAsJ,SAAAuE,IAAA,SAAAC,GACA,OAAAhQ,WAAAgQ,KAEA7Z,EAAA2L,QAAAC,WACA+K,EAAAhX,KAAAK,EAAA2L,EAAAhB,aAEAiK,EAAAjV,KAAAK,GACA2O,EAAAhP,KAAAK,GACAiZ,SAIA,SAAAhK,EAAApH,EAAAiS,GACA,OAAAjQ,WAAAhC,GAAAkS,QAAAD,GAAA,GAGA,SAAAE,IACA,IAAAha,EAAAO,KACA4T,EAAAnU,EAAAgM,SAAAC,QAAA0B,wBACAsE,EAAAjS,EAAAgM,SAAAX,SAAAsC,wBACA+L,EAAAzH,EAAAG,KAAA+B,EAAA/B,KACAuH,EAAA1H,EAAAE,IAAAgC,EAAAhC,IACA8H,GAAAhI,EAAA7I,MAAApJ,EAAAgM,SAAAX,SAAAsJ,aAAA,EACAuF,GAAAjI,EAAA5I,OAAArJ,EAAAgM,SAAAX,SAAAqJ,cAAA,EACAyF,EAAAT,EAAA1Z,EAAAgM,SAAAX,SAAAsJ,YAAAsF,EACAG,EAAAT,EAAA3Z,EAAAgM,SAAAX,SAAAqJ,aAAAwF,EACAtQ,EAAA5J,EAAAgQ,cAEApG,IAAAyQ,KAAAnO,MAAAtC,MACAA,EAAA,GAGA,IAAAsF,EAAAlP,EAAA2L,QAAA6E,gBAAA,EAAA8J,OAAAC,kBAMA,OALAb,EAAA3O,KAAAmE,MAAAwK,EAAA9P,GACA+P,EAAA5O,KAAAmE,MAAAyK,EAAA/P,GACAuQ,EAAApP,KAAAmE,MAAAiL,EAAAvQ,GACAwQ,EAAArP,KAAAmE,MAAAkL,EAAAxQ,GAEA,CACAyL,OAAA,CAAApG,EAAAyK,GAAAzK,EAAA0K,GAAA1K,EAAAkL,GAAAlL,EAAAmL,IACAlH,KAAAtJ,EACAe,YAAA3K,EAAA+L,KAAApB,aAIA,IAAA6P,EAAA,CACA/W,KAAA,SACAgV,OAAA,MACA/U,QAAA,GAEA+W,EAAA,sBAEA,SAAAC,GAAA/O,GACA,IAWAgP,EAXA3a,EAAAO,KACAwL,EAAAiO,EAAAra,KAAAK,GACA4a,EAAArV,EAAAI,EAAA6U,GAAA7U,EAAAgG,IACAkP,EAAA,oBAAAlP,EAAAiP,EAAAnX,MAAA,SACAqX,EAAAF,EAAAE,MAAA,WACArC,EAAAmC,EAAAnC,OACA/U,EAAAkX,EAAAlX,QACA0T,EAAAwD,EAAAxD,gBACAL,EAAA,mBAAA6D,EAAA7D,OAAA6D,EAAA7D,OAAA,WAAA/W,EAAA2L,QAAAN,SAAA5H,KACA4M,EAAArQ,EAAAgM,SAAAX,SAAAsC,wBACAoN,EAAA1K,EAAAjH,MAAAiH,EAAAhH,OA8CA,MA3CA,aAAAyR,GACA/O,EAAAkL,YAAA5G,EAAAjH,MACA2C,EAAAoL,aAAA9G,EAAAhH,QACS,kBAAAyR,IACTA,EAAA1R,OAAA0R,EAAAzR,QACA0C,EAAAkL,YAAA6D,EAAA1R,MACA2C,EAAAoL,aAAA2D,EAAAzR,QACayR,EAAA1R,OACb2C,EAAAkL,YAAA6D,EAAA1R,MACA2C,EAAAoL,aAAA2D,EAAA1R,MAAA2R,GACaD,EAAAzR,SACb0C,EAAAkL,YAAA6D,EAAAzR,OAAA0R,EACAhP,EAAAoL,aAAA2D,EAAAzR,SAIAoR,EAAArV,QAAAqT,IAAA,IACA1M,EAAA0M,OAAA,SAAAA,EACA1M,EAAArI,WAGAqI,EAAAgL,SACAhL,EAAAwM,IAAAvY,EAAA+L,KAAAwM,IACAxM,EAAAqL,kBAEAuD,EAAA,IAAA1a,QAAA,SAAAoB,GACA,OAAAwZ,EAAAG,eAEA,gBACA3Z,EAAAyV,EAAAnX,KAAAK,EAAA+L,IACA,MACA,aACA,aACA1K,EAAAmX,EAAA7Y,KAAAK,EAAA+L,IACA,MACA,WACA2M,EAAA/Y,KAAAK,EAAA+L,GAAAzK,KAAAD,GACA,MACA,QACAA,EAAAgX,EAAA1Y,KAAAK,EAAA+L,IACA,SAGA4O,EAGA,SAAAM,KACArG,EAAAjV,KAAAY,MAGA,SAAA2a,GAAAC,GACA,IAAA5a,KAAAoL,QAAAC,YAAArL,KAAAoL,QAAAE,kBACA,4EAGA,IAAA7L,EAAAO,KACAmK,EAAA1K,EAAAgM,SAAAtB,OAEA1K,EAAA+L,KAAApB,YAAA1F,EAAAjF,EAAA+L,KAAApB,YAAAwQ,GACA1Q,EAAAC,EAAA1K,EAAAgM,SAAA9D,IAAAlI,EAAA+L,KAAApB,aACA+D,EAAA/O,KAAAK,GAAA,GACAyO,EAAA9O,KAAAK,GAGA,SAAAob,KACA,IAAApb,EAAAO,KACAP,EAAAwG,QAAA6U,YAAArb,EAAAgM,SAAAZ,UACA/D,EAAArH,EAAAwG,QAAA,qBACAxG,EAAA2L,QAAAa,YACAxM,EAAAwG,QAAA6U,YAAArb,EAAAgM,SAAAoD,mBAEApP,EAAAgM,SAGA,GAAAxJ,OAAA8Y,OAAA,CACA,IAAA/G,GAAA/R,OAAA8Y,OACA/G,GAAAgH,GAAAC,QAAA,SAAAZ,GACA,IAAAa,SAAAb,EAEA,cAAAa,EAAA,CACA,IAAAtV,EAAArE,MAAAG,UAAAG,MAAAzC,KAAAU,UAAA,GACAqb,EAAAnH,GAAAhU,MAAAwL,KAAA,WAEA,cAAA6O,EACAc,EAAAtH,MAEA,WAAAwG,EACAc,EAAAC,OAAAvb,MAAAsb,EAAAvV,GAEA,SAAAyU,EACAc,EAAAE,KAAAxb,MAAAsb,EAAAvV,GAGA5F,KAAAsb,KAAA,WACA,IAAAjb,EAAA2T,GAAAhU,MAAAwL,KAAA,WACA,GAAAnL,EAAA,CAEA,IAAAkb,EAAAlb,EAAAga,GACA,IAAArG,GAAAwH,WAAAD,GAOA,gBAAAlB,EAAA,oBANAkB,EAAA1b,MAAAQ,EAAAuF,GACA,YAAAyU,GACArG,GAAAhU,MAAAyb,WAAA,cASA,OAAAzb,KAAAsb,KAAA,WACA,IAAAjb,EAAA,IAAAwJ,GAAA7J,KAAAqa,GACAha,EAAA2T,KACAA,GAAAhU,MAAAwL,KAAA,UAAAnL,MAMA,SAAAwJ,GAAA5D,EAAAoU,GACA,GAAApU,EAAAY,UAAAhC,QAAA,wBACA,UAAA6W,MAAA,oDAKA,GAHA1b,KAAAiG,UACAjG,KAAAoL,QAAApG,EAAAI,EAAAyE,GAAA8R,UAAAtB,GAEA,QAAAra,KAAAiG,QAAA2V,QAAAnB,cAAA,CACA,IAAAoB,EAAA7b,KAAAiG,QACAS,EAAAmV,EAAA,qBACA5U,EAAA4U,EAAA,CAAsCC,cAAA,OAAAlQ,IAAA,KACtC,IAAAmQ,EAAAtZ,SAAAyB,cAAA,OACAlE,KAAAiG,QAAAqS,WAAAxM,YAAAiQ,GACAA,EAAAjQ,YAAA+P,GACA7b,KAAAiG,QAAA8V,EACA/b,KAAAoL,QAAA4M,IAAAhY,KAAAoL,QAAA4M,KAAA6D,EAAApU,IAIA,GADAmD,EAAAxL,KAAAY,MACAA,KAAAoL,QAAA4M,IAAA,CACA,IAAAgE,EAAA,CACAhE,IAAAhY,KAAAoL,QAAA4M,IACAlD,OAAA9U,KAAAoL,QAAA0J,eAEA9U,KAAAoL,QAAA,cACApL,KAAAoL,QAAA,UACAqN,EAAArZ,KAAAY,KAAAgc,IAoEA,OAhEAnS,GAAA8R,SAAA,CACA7Q,SAAA,CACAjC,MAAA,IACAC,OAAA,IACA5F,KAAA,UAEA2H,SAAA,GACAoR,oBAAA,CACAC,SAAA,EACAC,UAAA,GACAC,WAAA,IAEA9N,eAAA,CACAzF,OAAA,EACAC,QAAA,GAEAiD,YAAA,GACA6D,YAAA,EACA3D,YAAA,EACAE,cAAA,EACAmD,gBAAA,EACAjD,YAAA,EACA4D,iBAAA,EACA3E,mBAAA,EACA4H,mBAAA,EACAa,OAAA,cAGAlK,GAAAC,QAAA,CACAZ,UAAA,eAGAlE,EAAA6E,GAAAnI,UAAA,CACA2Z,KAAA,SAAAjQ,EAAAsN,GACA,OAAAD,EAAArZ,KAAAY,KAAAoL,EAAAsN,IAEA7E,IAAA,WACA,IAAArI,EAAAiO,EAAAra,KAAAY,MACA8U,EAAAtJ,EAAAsJ,OAOA,OANA9U,KAAAoL,QAAAwN,WACA9D,EAAA,IAAA9U,KAAAyL,SAAA9D,IAAAa,aAAA,IACAsM,EAAA,IAAA9U,KAAAyL,SAAA9D,IAAAc,cAAA,IACAqM,EAAA,IAAA9U,KAAAyL,SAAA9D,IAAAa,aAAA,IACAsM,EAAA,IAAA9U,KAAAyL,SAAA9D,IAAAc,cAAA,KAEA+C,GAEA4P,OAAA,SAAAlY,GACA,OAAAiX,GAAA/a,KAAAY,KAAAkD,IAEAmZ,QAAA,WACA,OAAA3B,GAAAtb,KAAAY,OAEAsT,QAAA,SAAAhM,GACAiH,EAAAnP,KAAAY,KAAAsH,GACAtB,EAAAhG,KAAAyL,SAAAgD,SAEA7J,OAAA,SAAAgW,GACAD,GAAAvb,KAAAY,KAAA4a,IAEA0B,QAAA,WACA,OAAAzB,GAAAzb,KAAAY,SAGA6J","file":"js/chunk-vendors~5b63aa53.67cfe5ba.js","sourcesContent":["/*************************\r\n * Croppie\r\n * Copyright 2018\r\n * Foliotek\r\n * Version: 2.6.3\r\n *************************/\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(factory);\r\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\r\n        // CommonJS\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals\r\n        root.Croppie = factory();\r\n    }\r\n}(typeof self !== 'undefined' ? self : this, function () {\r\n\r\n    /* Polyfills */\r\n    if (typeof Promise !== 'function') {\r\n        /*! promise-polyfill 3.1.0 */\r\n        !function(a){function b(a,b){return function(){a.apply(b,arguments)}}function c(a){if(\"object\"!==typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!==typeof a)throw new TypeError(\"not a function\");this._state=null,this._value=null,this._deferreds=[],i(a,b(e,this),b(f,this))}function d(a){var b=this;return null===this._state?void this._deferreds.push(a):void k(function(){var c=b._state?a.onFulfilled:a.onRejected;if(null===c)return void(b._state?a.resolve:a.reject)(b._value);var d;try{d=c(b._value)}catch(e){return void a.reject(e)}a.resolve(d)})}function e(a){try{if(a===this)throw new TypeError(\"A promise cannot be resolved with itself.\");if(a&&(\"object\"===typeof a||\"function\"===typeof a)){var c=a.then;if(\"function\"===typeof c)return void i(b(c,a),b(e,this),b(f,this))}this._state=!0,this._value=a,g.call(this)}catch(d){f.call(this,d)}}function f(a){this._state=!1,this._value=a,g.call(this)}function g(){for(var a=0,b=this._deferreds.length;b>a;a++)d.call(this,this._deferreds[a]);this._deferreds=null}function h(a,b,c,d){this.onFulfilled=\"function\"===typeof a?a:null,this.onRejected=\"function\"===typeof b?b:null,this.resolve=c,this.reject=d}function i(a,b,c){var d=!1;try{a(function(a){d||(d=!0,b(a))},function(a){d||(d=!0,c(a))})}catch(e){if(d)return;d=!0,c(e)}}var j=setTimeout,k=\"function\"===typeof setImmediate&&setImmediate||function(a){j(a,1)},l=Array.isArray||function(a){return\"[object Array]\"===Object.prototype.toString.call(a)};c.prototype[\"catch\"]=function(a){return this.then(null,a)},c.prototype.then=function(a,b){var e=this;return new c(function(c,f){d.call(e,new h(a,b,c,f))})},c.all=function(){var a=Array.prototype.slice.call(1===arguments.length&&l(arguments[0])?arguments[0]:arguments);return new c(function(b,c){function d(f,g){try{if(g&&(\"object\"===typeof g||\"function\"===typeof g)){var h=g.then;if(\"function\"===typeof h)return void h.call(g,function(a){d(f,a)},c)}a[f]=g,0===--e&&b(a)}catch(i){c(i)}}if(0===a.length)return b([]);for(var e=a.length,f=0;f<a.length;f++)d(f,a[f])})},c.resolve=function(a){return a&&\"object\"===typeof a&&a.constructor===c?a:new c(function(b){b(a)})},c.reject=function(a){return new c(function(b,c){c(a)})},c.race=function(a){return new c(function(b,c){for(var d=0,e=a.length;e>d;d++)a[d].then(b,c)})},c._setImmediateFn=function(a){k=a},\"undefined\"!==typeof module&&module.exports?module.exports=c:a.Promise||(a.Promise=c)}(this);\r\n    }\r\n\r\n    if ( typeof window.CustomEvent !== \"function\" ) {\r\n        (function(){\r\n            function CustomEvent ( event, params ) {\r\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n                var evt = document.createEvent( 'CustomEvent' );\r\n                evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\r\n                return evt;\r\n            }\r\n            CustomEvent.prototype = window.Event.prototype;\r\n            window.CustomEvent = CustomEvent;\r\n        }());\r\n    }\r\n\r\n    if (!HTMLCanvasElement.prototype.toBlob) {\r\n        Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\r\n            value: function (callback, type, quality) {\r\n                var binStr = atob( this.toDataURL(type, quality).split(',')[1] ),\r\n                len = binStr.length,\r\n                arr = new Uint8Array(len);\r\n\r\n                for (var i=0; i<len; i++ ) {\r\n                    arr[i] = binStr.charCodeAt(i);\r\n                }\r\n\r\n                callback( new Blob( [arr], {type: type || 'image/png'} ) );\r\n            }\r\n        });\r\n    }\r\n    /* End Polyfills */\r\n\r\n    var cssPrefixes = ['Webkit', 'Moz', 'ms'],\r\n        emptyStyles = document.createElement('div').style,\r\n        EXIF_NORM = [1,8,3,6],\r\n        EXIF_FLIP = [2,7,4,5],\r\n        CSS_TRANS_ORG,\r\n        CSS_TRANSFORM,\r\n        CSS_USERSELECT;\r\n\r\n    function vendorPrefix(prop) {\r\n        if (prop in emptyStyles) {\r\n            return prop;\r\n        }\r\n\r\n        var capProp = prop[0].toUpperCase() + prop.slice(1),\r\n            i = cssPrefixes.length;\r\n\r\n        while (i--) {\r\n            prop = cssPrefixes[i] + capProp;\r\n            if (prop in emptyStyles) {\r\n                return prop;\r\n            }\r\n        }\r\n    }\r\n\r\n    CSS_TRANSFORM = vendorPrefix('transform');\r\n    CSS_TRANS_ORG = vendorPrefix('transformOrigin');\r\n    CSS_USERSELECT = vendorPrefix('userSelect');\r\n\r\n    function getExifOffset(ornt, rotate) {\r\n        var arr = EXIF_NORM.indexOf(ornt) > -1 ? EXIF_NORM : EXIF_FLIP,\r\n            index = arr.indexOf(ornt),\r\n            offset = (rotate / 90) % arr.length;// 180 = 2%4 = 2 shift exif by 2 indexes\r\n\r\n        return arr[(arr.length + index + (offset % arr.length)) % arr.length];\r\n    }\r\n\r\n    // Credits to : Andrew Dupont - http://andrewdupont.net/2009/08/28/deep-extending-objects-in-javascript/\r\n    function deepExtend(destination, source) {\r\n        destination = destination || {};\r\n        for (var property in source) {\r\n            if (source[property] && source[property].constructor && source[property].constructor === Object) {\r\n                destination[property] = destination[property] || {};\r\n                deepExtend(destination[property], source[property]);\r\n            } else {\r\n                destination[property] = source[property];\r\n            }\r\n        }\r\n        return destination;\r\n    }\r\n\r\n    function clone(object) {\r\n        return deepExtend({}, object);\r\n    }\r\n\r\n    function debounce(func, wait, immediate) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                if (!immediate) func.apply(context, args);\r\n            };\r\n            var callNow = immediate && !timeout;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n            if (callNow) func.apply(context, args);\r\n        };\r\n    }\r\n\r\n    function dispatchChange(element) {\r\n        if (\"createEvent\" in document) {\r\n            var evt = document.createEvent(\"HTMLEvents\");\r\n            evt.initEvent(\"change\", false, true);\r\n            element.dispatchEvent(evt);\r\n        }\r\n        else {\r\n            element.fireEvent(\"onchange\");\r\n        }\r\n    }\r\n\r\n    //http://jsperf.com/vanilla-css\r\n    function css(el, styles, val) {\r\n        if (typeof (styles) === 'string') {\r\n            var tmp = styles;\r\n            styles = {};\r\n            styles[tmp] = val;\r\n        }\r\n\r\n        for (var prop in styles) {\r\n            el.style[prop] = styles[prop];\r\n        }\r\n    }\r\n\r\n    function addClass(el, c) {\r\n        if (el.classList) {\r\n            el.classList.add(c);\r\n        }\r\n        else {\r\n            el.className += ' ' + c;\r\n        }\r\n    }\r\n\r\n    function removeClass(el, c) {\r\n        if (el.classList) {\r\n            el.classList.remove(c);\r\n        }\r\n        else {\r\n            el.className = el.className.replace(c, '');\r\n        }\r\n    }\r\n\r\n    function setAttributes(el, attrs) {\r\n        for (var key in attrs) {\r\n            el.setAttribute(key, attrs[key]);\r\n        }\r\n    }\r\n\r\n    function num(v) {\r\n        return parseInt(v, 10);\r\n    }\r\n\r\n    /* Utilities */\r\n    function loadImage(src, doExif) {\r\n        var img = new Image();\r\n        img.style.opacity = '0';\r\n        return new Promise(function (resolve, reject) {\r\n            function _resolve() {\r\n                img.style.opacity = '1';\r\n                setTimeout(function () {\r\n                    resolve(img);\r\n                }, 1);\r\n            }\r\n\r\n            img.removeAttribute('crossOrigin');\r\n            if (src.match(/^https?:\\/\\/|^\\/\\//)) {\r\n                img.setAttribute('crossOrigin', 'anonymous');\r\n            }\r\n\r\n            img.onload = function () {\r\n                if (doExif) {\r\n                    EXIF.getData(img, function () {\r\n                        _resolve();\r\n                    });\r\n                }\r\n                else {\r\n                    _resolve();\r\n                }\r\n            };\r\n            img.onerror = function (ev) {\r\n                img.style.opacity = 1;\r\n                setTimeout(function () {\r\n                    reject(ev);\r\n                }, 1);\r\n            };\r\n            img.src = src;\r\n        });\r\n    }\r\n\r\n    function naturalImageDimensions(img, ornt) {\r\n        var w = img.naturalWidth;\r\n        var h = img.naturalHeight;\r\n        var orient = ornt || getExifOrientation(img);\r\n        if (orient && orient >= 5) {\r\n            var x= w;\r\n            w = h;\r\n            h = x;\r\n        }\r\n        return { width: w, height: h };\r\n    }\r\n\r\n    /* CSS Transform Prototype */\r\n    var TRANSLATE_OPTS = {\r\n        'translate3d': {\r\n            suffix: ', 0px'\r\n        },\r\n        'translate': {\r\n            suffix: ''\r\n        }\r\n    };\r\n    var Transform = function (x, y, scale) {\r\n        this.x = parseFloat(x);\r\n        this.y = parseFloat(y);\r\n        this.scale = parseFloat(scale);\r\n    };\r\n\r\n    Transform.parse = function (v) {\r\n        if (v.style) {\r\n            return Transform.parse(v.style[CSS_TRANSFORM]);\r\n        }\r\n        else if (v.indexOf('matrix') > -1 || v.indexOf('none') > -1) {\r\n            return Transform.fromMatrix(v);\r\n        }\r\n        else {\r\n            return Transform.fromString(v);\r\n        }\r\n    };\r\n\r\n    Transform.fromMatrix = function (v) {\r\n        var vals = v.substring(7).split(',');\r\n        if (!vals.length || v === 'none') {\r\n            vals = [1, 0, 0, 1, 0, 0];\r\n        }\r\n\r\n        return new Transform(num(vals[4]), num(vals[5]), parseFloat(vals[0]));\r\n    };\r\n\r\n    Transform.fromString = function (v) {\r\n        var values = v.split(') '),\r\n            translate = values[0].substring(Croppie.globals.translate.length + 1).split(','),\r\n            scale = values.length > 1 ? values[1].substring(6) : 1,\r\n            x = translate.length > 1 ? translate[0] : 0,\r\n            y = translate.length > 1 ? translate[1] : 0;\r\n\r\n        return new Transform(x, y, scale);\r\n    };\r\n\r\n    Transform.prototype.toString = function () {\r\n        var suffix = TRANSLATE_OPTS[Croppie.globals.translate].suffix || '';\r\n        return Croppie.globals.translate + '(' + this.x + 'px, ' + this.y + 'px' + suffix + ') scale(' + this.scale + ')';\r\n    };\r\n\r\n    var TransformOrigin = function (el) {\r\n        if (!el || !el.style[CSS_TRANS_ORG]) {\r\n            this.x = 0;\r\n            this.y = 0;\r\n            return;\r\n        }\r\n        var css = el.style[CSS_TRANS_ORG].split(' ');\r\n        this.x = parseFloat(css[0]);\r\n        this.y = parseFloat(css[1]);\r\n    };\r\n\r\n    TransformOrigin.prototype.toString = function () {\r\n        return this.x + 'px ' + this.y + 'px';\r\n    };\r\n\r\n    function getExifOrientation (img) {\r\n        return img.exifdata && img.exifdata.Orientation ? num(img.exifdata.Orientation) : 1;\r\n    }\r\n\r\n    function drawCanvas(canvas, img, orientation) {\r\n        var width = img.width,\r\n            height = img.height,\r\n            ctx = canvas.getContext('2d');\r\n\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        ctx.save();\r\n        switch (orientation) {\r\n          case 2:\r\n             ctx.translate(width, 0);\r\n             ctx.scale(-1, 1);\r\n             break;\r\n\r\n          case 3:\r\n              ctx.translate(width, height);\r\n              ctx.rotate(180*Math.PI/180);\r\n              break;\r\n\r\n          case 4:\r\n              ctx.translate(0, height);\r\n              ctx.scale(1, -1);\r\n              break;\r\n\r\n          case 5:\r\n              canvas.width = height;\r\n              canvas.height = width;\r\n              ctx.rotate(90*Math.PI/180);\r\n              ctx.scale(1, -1);\r\n              break;\r\n\r\n          case 6:\r\n              canvas.width = height;\r\n              canvas.height = width;\r\n              ctx.rotate(90*Math.PI/180);\r\n              ctx.translate(0, -height);\r\n              break;\r\n\r\n          case 7:\r\n              canvas.width = height;\r\n              canvas.height = width;\r\n              ctx.rotate(-90*Math.PI/180);\r\n              ctx.translate(-width, height);\r\n              ctx.scale(1, -1);\r\n              break;\r\n\r\n          case 8:\r\n              canvas.width = height;\r\n              canvas.height = width;\r\n              ctx.translate(0, width);\r\n              ctx.rotate(-90*Math.PI/180);\r\n              break;\r\n        }\r\n        ctx.drawImage(img, 0,0, width, height);\r\n        ctx.restore();\r\n    }\r\n\r\n    /* Private Methods */\r\n    function _create() {\r\n        var self = this,\r\n            contClass = 'croppie-container',\r\n            customViewportClass = self.options.viewport.type ? 'cr-vp-' + self.options.viewport.type : null,\r\n            boundary, img, viewport, overlay, bw, bh;\r\n\r\n        self.options.useCanvas = self.options.enableOrientation || _hasExif.call(self);\r\n        // Properties on class\r\n        self.data = {};\r\n        self.elements = {};\r\n\r\n        boundary = self.elements.boundary = document.createElement('div');\r\n        viewport = self.elements.viewport = document.createElement('div');\r\n        img = self.elements.img = document.createElement('img');\r\n        overlay = self.elements.overlay = document.createElement('div');\r\n\r\n        if (self.options.useCanvas) {\r\n            self.elements.canvas = document.createElement('canvas');\r\n            self.elements.preview = self.elements.canvas;\r\n        }\r\n        else {\r\n            self.elements.preview = img;\r\n        }\r\n\r\n        addClass(boundary, 'cr-boundary');\r\n        boundary.setAttribute('aria-dropeffect', 'none');\r\n        bw = self.options.boundary.width;\r\n        bh = self.options.boundary.height;\r\n        css(boundary, {\r\n            width: (bw + (isNaN(bw) ? '' : 'px')),\r\n            height: (bh + (isNaN(bh) ? '' : 'px'))\r\n        });\r\n\r\n        addClass(viewport, 'cr-viewport');\r\n        if (customViewportClass) {\r\n            addClass(viewport, customViewportClass);\r\n        }\r\n        css(viewport, {\r\n            width: self.options.viewport.width + 'px',\r\n            height: self.options.viewport.height + 'px'\r\n        });\r\n        viewport.setAttribute('tabindex', 0);\r\n\r\n        addClass(self.elements.preview, 'cr-image');\r\n        setAttributes(self.elements.preview, { 'alt': 'preview', 'aria-grabbed': 'false' });\r\n        addClass(overlay, 'cr-overlay');\r\n\r\n        self.element.appendChild(boundary);\r\n        boundary.appendChild(self.elements.preview);\r\n        boundary.appendChild(viewport);\r\n        boundary.appendChild(overlay);\r\n\r\n        addClass(self.element, contClass);\r\n        if (self.options.customClass) {\r\n            addClass(self.element, self.options.customClass);\r\n        }\r\n\r\n        _initDraggable.call(this);\r\n\r\n        if (self.options.enableZoom) {\r\n            _initializeZoom.call(self);\r\n        }\r\n\r\n        // if (self.options.enableOrientation) {\r\n        //     _initRotationControls.call(self);\r\n        // }\r\n\r\n        if (self.options.enableResize) {\r\n            _initializeResize.call(self);\r\n        }\r\n    }\r\n\r\n    // function _initRotationControls () {\r\n    //     var self = this,\r\n    //         wrap, btnLeft, btnRight, iLeft, iRight;\r\n\r\n    //     wrap = document.createElement('div');\r\n    //     self.elements.orientationBtnLeft = btnLeft = document.createElement('button');\r\n    //     self.elements.orientationBtnRight = btnRight = document.createElement('button');\r\n\r\n    //     wrap.appendChild(btnLeft);\r\n    //     wrap.appendChild(btnRight);\r\n\r\n    //     iLeft = document.createElement('i');\r\n    //     iRight = document.createElement('i');\r\n    //     btnLeft.appendChild(iLeft);\r\n    //     btnRight.appendChild(iRight);\r\n\r\n    //     addClass(wrap, 'cr-rotate-controls');\r\n    //     addClass(btnLeft, 'cr-rotate-l');\r\n    //     addClass(btnRight, 'cr-rotate-r');\r\n\r\n    //     self.elements.boundary.appendChild(wrap);\r\n\r\n    //     btnLeft.addEventListener('click', function () {\r\n    //         self.rotate(-90);\r\n    //     });\r\n    //     btnRight.addEventListener('click', function () {\r\n    //         self.rotate(90);\r\n    //     });\r\n    // }\r\n\r\n    function _hasExif() {\r\n        return this.options.enableExif && window.EXIF;\r\n    }\r\n\r\n    function _initializeResize () {\r\n        var self = this;\r\n        var wrap = document.createElement('div');\r\n        var isDragging = false;\r\n        var direction;\r\n        var originalX;\r\n        var originalY;\r\n        var minSize = 50;\r\n        var maxWidth;\r\n        var maxHeight;\r\n        var vr;\r\n        var hr;\r\n\r\n        addClass(wrap, 'cr-resizer');\r\n        css(wrap, {\r\n            width: this.options.viewport.width + 'px',\r\n            height: this.options.viewport.height + 'px'\r\n        });\r\n\r\n        if (this.options.resizeControls.height) {\r\n            vr = document.createElement('div');\r\n            addClass(vr, 'cr-resizer-vertical');\r\n            wrap.appendChild(vr);\r\n        }\r\n\r\n        if (this.options.resizeControls.width) {\r\n            hr = document.createElement('div');\r\n            addClass(hr, 'cr-resizer-horisontal');\r\n            wrap.appendChild(hr);\r\n        }\r\n\r\n        function mouseDown(ev) {\r\n            if (ev.button !== undefined && ev.button !== 0) return;\r\n\r\n            ev.preventDefault();\r\n            if (isDragging) {\r\n                return;\r\n            }\r\n\r\n            var overlayRect = self.elements.overlay.getBoundingClientRect();\r\n\r\n            isDragging = true;\r\n            originalX = ev.pageX;\r\n            originalY = ev.pageY;\r\n            direction = ev.currentTarget.className.indexOf('vertical') !== -1 ? 'v' : 'h';\r\n            maxWidth = overlayRect.width;\r\n            maxHeight = overlayRect.height;\r\n\r\n            if (ev.touches) {\r\n                var touches = ev.touches[0];\r\n                originalX = touches.pageX;\r\n                originalY = touches.pageY;\r\n            }\r\n\r\n            window.addEventListener('mousemove', mouseMove);\r\n            window.addEventListener('touchmove', mouseMove);\r\n            window.addEventListener('mouseup', mouseUp);\r\n            window.addEventListener('touchend', mouseUp);\r\n            document.body.style[CSS_USERSELECT] = 'none';\r\n        }\r\n\r\n        function mouseMove(ev) {\r\n            var pageX = ev.pageX;\r\n            var pageY = ev.pageY;\r\n\r\n            ev.preventDefault();\r\n\r\n            if (ev.touches) {\r\n                var touches = ev.touches[0];\r\n                pageX = touches.pageX;\r\n                pageY = touches.pageY;\r\n            }\r\n\r\n            var deltaX = pageX - originalX;\r\n            var deltaY = pageY - originalY;\r\n            var newHeight = self.options.viewport.height + deltaY;\r\n            var newWidth = self.options.viewport.width + deltaX;\r\n\r\n            if (direction === 'v' && newHeight >= minSize && newHeight <= maxHeight) {\r\n                css(wrap, {\r\n                    height: newHeight + 'px'\r\n                });\r\n\r\n                self.options.boundary.height += deltaY;\r\n                css(self.elements.boundary, {\r\n                    height: self.options.boundary.height + 'px'\r\n                });\r\n\r\n                self.options.viewport.height += deltaY;\r\n                css(self.elements.viewport, {\r\n                    height: self.options.viewport.height + 'px'\r\n                });\r\n            }\r\n            else if (direction === 'h' && newWidth >= minSize && newWidth <= maxWidth) {\r\n                css(wrap, {\r\n                    width: newWidth + 'px'\r\n                });\r\n\r\n                self.options.boundary.width += deltaX;\r\n                css(self.elements.boundary, {\r\n                    width: self.options.boundary.width + 'px'\r\n                });\r\n\r\n                self.options.viewport.width += deltaX;\r\n                css(self.elements.viewport, {\r\n                    width: self.options.viewport.width + 'px'\r\n                });\r\n            }\r\n\r\n            _updateOverlay.call(self);\r\n            _updateZoomLimits.call(self);\r\n            _updateCenterPoint.call(self);\r\n            _triggerUpdate.call(self);\r\n            originalY = pageY;\r\n            originalX = pageX;\r\n        }\r\n\r\n        function mouseUp() {\r\n            isDragging = false;\r\n            window.removeEventListener('mousemove', mouseMove);\r\n            window.removeEventListener('touchmove', mouseMove);\r\n            window.removeEventListener('mouseup', mouseUp);\r\n            window.removeEventListener('touchend', mouseUp);\r\n            document.body.style[CSS_USERSELECT] = '';\r\n        }\r\n\r\n        if (vr) {\r\n            vr.addEventListener('mousedown', mouseDown);\r\n            vr.addEventListener('touchstart', mouseDown);\r\n        }\r\n\r\n        if (hr) {\r\n            hr.addEventListener('mousedown', mouseDown);\r\n            hr.addEventListener('touchstart', mouseDown);\r\n        }\r\n\r\n        this.elements.boundary.appendChild(wrap);\r\n    }\r\n\r\n    function _setZoomerVal(v) {\r\n        if (this.options.enableZoom) {\r\n            var z = this.elements.zoomer,\r\n                val = fix(v, 4);\r\n\r\n            z.value = Math.max(parseFloat(z.min), Math.min(parseFloat(z.max), val)).toString();\r\n        }\r\n    }\r\n\r\n    function _initializeZoom() {\r\n        var self = this,\r\n            wrap = self.elements.zoomerWrap = document.createElement('div'),\r\n            zoomer = self.elements.zoomer = document.createElement('input');\r\n\r\n        addClass(wrap, 'cr-slider-wrap');\r\n        addClass(zoomer, 'cr-slider');\r\n        zoomer.type = 'range';\r\n        zoomer.step = '0.0001';\r\n        zoomer.value = '1';\r\n        zoomer.style.display = self.options.showZoomer ? '' : 'none';\r\n        zoomer.setAttribute('aria-label', 'zoom');\r\n\r\n        self.element.appendChild(wrap);\r\n        wrap.appendChild(zoomer);\r\n\r\n        self._currentZoom = 1;\r\n\r\n        function change() {\r\n            _onZoom.call(self, {\r\n                value: parseFloat(zoomer.value),\r\n                origin: new TransformOrigin(self.elements.preview),\r\n                viewportRect: self.elements.viewport.getBoundingClientRect(),\r\n                transform: Transform.parse(self.elements.preview)\r\n            });\r\n        }\r\n\r\n        function scroll(ev) {\r\n            var delta, targetZoom;\r\n\r\n            if(self.options.mouseWheelZoom === 'ctrl' && ev.ctrlKey !== true){\r\n              return 0; \r\n            } else if (ev.wheelDelta) {\r\n                delta = ev.wheelDelta / 1200; //wheelDelta min: -120 max: 120 // max x 10 x 2\r\n            } else if (ev.deltaY) {\r\n                delta = ev.deltaY / 1060; //deltaY min: -53 max: 53 // max x 10 x 2\r\n            } else if (ev.detail) {\r\n                delta = ev.detail / -60; //delta min: -3 max: 3 // max x 10 x 2\r\n            } else {\r\n                delta = 0;\r\n            }\r\n\r\n            targetZoom = self._currentZoom + (delta * self._currentZoom);\r\n\r\n            ev.preventDefault();\r\n            _setZoomerVal.call(self, targetZoom);\r\n            change.call(self);\r\n        }\r\n\r\n        self.elements.zoomer.addEventListener('input', change);// this is being fired twice on keypress\r\n        self.elements.zoomer.addEventListener('change', change);\r\n\r\n        if (self.options.mouseWheelZoom) {\r\n            self.elements.boundary.addEventListener('mousewheel', scroll);\r\n            self.elements.boundary.addEventListener('DOMMouseScroll', scroll);\r\n        }\r\n    }\r\n\r\n    function _onZoom(ui) {\r\n        var self = this,\r\n            transform = ui ? ui.transform : Transform.parse(self.elements.preview),\r\n            vpRect = ui ? ui.viewportRect : self.elements.viewport.getBoundingClientRect(),\r\n            origin = ui ? ui.origin : new TransformOrigin(self.elements.preview);\r\n\r\n        function applyCss() {\r\n            var transCss = {};\r\n            transCss[CSS_TRANSFORM] = transform.toString();\r\n            transCss[CSS_TRANS_ORG] = origin.toString();\r\n            css(self.elements.preview, transCss);\r\n        }\r\n\r\n        self._currentZoom = ui ? ui.value : self._currentZoom;\r\n        transform.scale = self._currentZoom;\r\n        self.elements.zoomer.setAttribute('aria-valuenow', self._currentZoom);\r\n        applyCss();\r\n\r\n        if (self.options.enforceBoundary) {\r\n            var boundaries = _getVirtualBoundaries.call(self, vpRect),\r\n                transBoundaries = boundaries.translate,\r\n                oBoundaries = boundaries.origin;\r\n\r\n            if (transform.x >= transBoundaries.maxX) {\r\n                origin.x = oBoundaries.minX;\r\n                transform.x = transBoundaries.maxX;\r\n            }\r\n\r\n            if (transform.x <= transBoundaries.minX) {\r\n                origin.x = oBoundaries.maxX;\r\n                transform.x = transBoundaries.minX;\r\n            }\r\n\r\n            if (transform.y >= transBoundaries.maxY) {\r\n                origin.y = oBoundaries.minY;\r\n                transform.y = transBoundaries.maxY;\r\n            }\r\n\r\n            if (transform.y <= transBoundaries.minY) {\r\n                origin.y = oBoundaries.maxY;\r\n                transform.y = transBoundaries.minY;\r\n            }\r\n        }\r\n        applyCss();\r\n        _debouncedOverlay.call(self);\r\n        _triggerUpdate.call(self);\r\n    }\r\n\r\n    function _getVirtualBoundaries(viewport) {\r\n        var self = this,\r\n            scale = self._currentZoom,\r\n            vpWidth = viewport.width,\r\n            vpHeight = viewport.height,\r\n            centerFromBoundaryX = self.elements.boundary.clientWidth / 2,\r\n            centerFromBoundaryY = self.elements.boundary.clientHeight / 2,\r\n            imgRect = self.elements.preview.getBoundingClientRect(),\r\n            curImgWidth = imgRect.width,\r\n            curImgHeight = imgRect.height,\r\n            halfWidth = vpWidth / 2,\r\n            halfHeight = vpHeight / 2;\r\n\r\n        var maxX = ((halfWidth / scale) - centerFromBoundaryX) * -1;\r\n        var minX = maxX - ((curImgWidth * (1 / scale)) - (vpWidth * (1 / scale)));\r\n\r\n        var maxY = ((halfHeight / scale) - centerFromBoundaryY) * -1;\r\n        var minY = maxY - ((curImgHeight * (1 / scale)) - (vpHeight * (1 / scale)));\r\n\r\n        var originMinX = (1 / scale) * halfWidth;\r\n        var originMaxX = (curImgWidth * (1 / scale)) - originMinX;\r\n\r\n        var originMinY = (1 / scale) * halfHeight;\r\n        var originMaxY = (curImgHeight * (1 / scale)) - originMinY;\r\n\r\n        return {\r\n            translate: {\r\n                maxX: maxX,\r\n                minX: minX,\r\n                maxY: maxY,\r\n                minY: minY\r\n            },\r\n            origin: {\r\n                maxX: originMaxX,\r\n                minX: originMinX,\r\n                maxY: originMaxY,\r\n                minY: originMinY\r\n            }\r\n        };\r\n    }\r\n\r\n    function _updateCenterPoint(rotate) {\r\n        var self = this,\r\n            scale = self._currentZoom,\r\n            data = self.elements.preview.getBoundingClientRect(),\r\n            vpData = self.elements.viewport.getBoundingClientRect(),\r\n            transform = Transform.parse(self.elements.preview.style[CSS_TRANSFORM]),\r\n            pc = new TransformOrigin(self.elements.preview),\r\n            top = (vpData.top - data.top) + (vpData.height / 2),\r\n            left = (vpData.left - data.left) + (vpData.width / 2),\r\n            center = {},\r\n            adj = {};\r\n\r\n        if (rotate) {\r\n            var cx = pc.x;\r\n            var cy = pc.y;\r\n            var tx = transform.x;\r\n            var ty = transform.y;\r\n\r\n            center.y = cx;\r\n            center.x = cy;\r\n            transform.y = tx;\r\n            transform.x = ty;\r\n        }\r\n        else {\r\n            center.y = top / scale;\r\n            center.x = left / scale;\r\n\r\n            adj.y = (center.y - pc.y) * (1 - scale);\r\n            adj.x = (center.x - pc.x) * (1 - scale);\r\n\r\n            transform.x -= adj.x;\r\n            transform.y -= adj.y;\r\n        }\r\n\r\n        var newCss = {};\r\n        newCss[CSS_TRANS_ORG] = center.x + 'px ' + center.y + 'px';\r\n        newCss[CSS_TRANSFORM] = transform.toString();\r\n        css(self.elements.preview, newCss);\r\n    }\r\n\r\n    function _initDraggable() {\r\n        var self = this,\r\n            isDragging = false,\r\n            originalX,\r\n            originalY,\r\n            originalDistance,\r\n            vpRect,\r\n            transform;\r\n\r\n        function assignTransformCoordinates(deltaX, deltaY) {\r\n            var imgRect = self.elements.preview.getBoundingClientRect(),\r\n                top = transform.y + deltaY,\r\n                left = transform.x + deltaX;\r\n\r\n            if (self.options.enforceBoundary) {\r\n                if (vpRect.top > imgRect.top + deltaY && vpRect.bottom < imgRect.bottom + deltaY) {\r\n                    transform.y = top;\r\n                }\r\n\r\n                if (vpRect.left > imgRect.left + deltaX && vpRect.right < imgRect.right + deltaX) {\r\n                    transform.x = left;\r\n                }\r\n            }\r\n            else {\r\n                transform.y = top;\r\n                transform.x = left;\r\n            }\r\n        }\r\n\r\n        function toggleGrabState(isDragging) {\r\n          self.elements.preview.setAttribute('aria-grabbed', isDragging);\r\n          self.elements.boundary.setAttribute('aria-dropeffect', isDragging? 'move': 'none');\r\n        }\r\n\r\n        function keyDown(ev) {\r\n            var LEFT_ARROW  = 37,\r\n                UP_ARROW    = 38,\r\n                RIGHT_ARROW = 39,\r\n                DOWN_ARROW  = 40;\r\n\r\n            if (ev.shiftKey && (ev.keyCode === UP_ARROW || ev.keyCode === DOWN_ARROW)) {\r\n                var zoom;\r\n                if (ev.keyCode === UP_ARROW) {\r\n                    zoom = parseFloat(self.elements.zoomer.value) + parseFloat(self.elements.zoomer.step)\r\n                }\r\n                else {\r\n                    zoom = parseFloat(self.elements.zoomer.value) - parseFloat(self.elements.zoomer.step)\r\n                }\r\n                self.setZoom(zoom);\r\n            }\r\n            else if (self.options.enableKeyMovement && (ev.keyCode >= 37 && ev.keyCode <= 40)) {\r\n                ev.preventDefault();\r\n                var movement = parseKeyDown(ev.keyCode);\r\n\r\n                transform = Transform.parse(self.elements.preview);\r\n                document.body.style[CSS_USERSELECT] = 'none';\r\n                vpRect = self.elements.viewport.getBoundingClientRect();\r\n                keyMove(movement);\r\n            }\r\n\r\n            function parseKeyDown(key) {\r\n                switch (key) {\r\n                    case LEFT_ARROW:\r\n                        return [1, 0];\r\n                    case UP_ARROW:\r\n                        return [0, 1];\r\n                    case RIGHT_ARROW:\r\n                        return [-1, 0];\r\n                    case DOWN_ARROW:\r\n                        return [0, -1];\r\n                }\r\n            }\r\n        }\r\n\r\n        function keyMove(movement) {\r\n            var deltaX = movement[0],\r\n                deltaY = movement[1],\r\n                newCss = {};\r\n\r\n            assignTransformCoordinates(deltaX, deltaY);\r\n\r\n            newCss[CSS_TRANSFORM] = transform.toString();\r\n            css(self.elements.preview, newCss);\r\n            _updateOverlay.call(self);\r\n            document.body.style[CSS_USERSELECT] = '';\r\n            _updateCenterPoint.call(self);\r\n            _triggerUpdate.call(self);\r\n            originalDistance = 0;\r\n        }\r\n\r\n        function mouseDown(ev) {\r\n            if (ev.button !== undefined && ev.button !== 0) return;\r\n\r\n            ev.preventDefault();\r\n            if (isDragging) return;\r\n            isDragging = true;\r\n            originalX = ev.pageX;\r\n            originalY = ev.pageY;\r\n\r\n            if (ev.touches) {\r\n                var touches = ev.touches[0];\r\n                originalX = touches.pageX;\r\n                originalY = touches.pageY;\r\n            }\r\n            toggleGrabState(isDragging);\r\n            transform = Transform.parse(self.elements.preview);\r\n            window.addEventListener('mousemove', mouseMove);\r\n            window.addEventListener('touchmove', mouseMove);\r\n            window.addEventListener('mouseup', mouseUp);\r\n            window.addEventListener('touchend', mouseUp);\r\n            document.body.style[CSS_USERSELECT] = 'none';\r\n            vpRect = self.elements.viewport.getBoundingClientRect();\r\n        }\r\n\r\n        function mouseMove(ev) {\r\n            ev.preventDefault();\r\n            var pageX = ev.pageX,\r\n                pageY = ev.pageY;\r\n\r\n            if (ev.touches) {\r\n                var touches = ev.touches[0];\r\n                pageX = touches.pageX;\r\n                pageY = touches.pageY;\r\n            }\r\n\r\n            var deltaX = pageX - originalX,\r\n                deltaY = pageY - originalY,\r\n                newCss = {};\r\n\r\n            if (ev.type === 'touchmove') {\r\n                if (ev.touches.length > 1) {\r\n                    var touch1 = ev.touches[0];\r\n                    var touch2 = ev.touches[1];\r\n                    var dist = Math.sqrt((touch1.pageX - touch2.pageX) * (touch1.pageX - touch2.pageX) + (touch1.pageY - touch2.pageY) * (touch1.pageY - touch2.pageY));\r\n\r\n                    if (!originalDistance) {\r\n                        originalDistance = dist / self._currentZoom;\r\n                    }\r\n\r\n                    var scale = dist / originalDistance;\r\n\r\n                    _setZoomerVal.call(self, scale);\r\n                    dispatchChange(self.elements.zoomer);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            assignTransformCoordinates(deltaX, deltaY);\r\n\r\n            newCss[CSS_TRANSFORM] = transform.toString();\r\n            css(self.elements.preview, newCss);\r\n            _updateOverlay.call(self);\r\n            originalY = pageY;\r\n            originalX = pageX;\r\n        }\r\n\r\n        function mouseUp() {\r\n            isDragging = false;\r\n            toggleGrabState(isDragging);\r\n            window.removeEventListener('mousemove', mouseMove);\r\n            window.removeEventListener('touchmove', mouseMove);\r\n            window.removeEventListener('mouseup', mouseUp);\r\n            window.removeEventListener('touchend', mouseUp);\r\n            document.body.style[CSS_USERSELECT] = '';\r\n            _updateCenterPoint.call(self);\r\n            _triggerUpdate.call(self);\r\n            originalDistance = 0;\r\n        }\r\n\r\n        self.elements.overlay.addEventListener('mousedown', mouseDown);\r\n        self.elements.viewport.addEventListener('keydown', keyDown);\r\n        self.elements.overlay.addEventListener('touchstart', mouseDown);\r\n    }\r\n\r\n    function _updateOverlay() {\r\n        if (!this.elements) return; // since this is debounced, it can be fired after destroy\r\n        var self = this,\r\n            boundRect = self.elements.boundary.getBoundingClientRect(),\r\n            imgData = self.elements.preview.getBoundingClientRect();\r\n\r\n        css(self.elements.overlay, {\r\n            width: imgData.width + 'px',\r\n            height: imgData.height + 'px',\r\n            top: (imgData.top - boundRect.top) + 'px',\r\n            left: (imgData.left - boundRect.left) + 'px'\r\n        });\r\n    }\r\n    var _debouncedOverlay = debounce(_updateOverlay, 500);\r\n\r\n    function _triggerUpdate() {\r\n        var self = this,\r\n            data = self.get();\r\n\r\n        if (!_isVisible.call(self)) {\r\n            return;\r\n        }\r\n\r\n        self.options.update.call(self, data);\r\n        if (self.$ && typeof Prototype === 'undefined') {\r\n            self.$(self.element).trigger('update.croppie', data);\r\n        }\r\n        else {\r\n            var ev;\r\n            if (window.CustomEvent) {\r\n                ev = new CustomEvent('update', { detail: data });\r\n            } else {\r\n                ev = document.createEvent('CustomEvent');\r\n                ev.initCustomEvent('update', true, true, data);\r\n            }\r\n\r\n            self.element.dispatchEvent(ev);\r\n        }\r\n    }\r\n\r\n    function _isVisible() {\r\n        return this.elements.preview.offsetHeight > 0 && this.elements.preview.offsetWidth > 0;\r\n    }\r\n\r\n    function _updatePropertiesFromImage() {\r\n        var self = this,\r\n            initialZoom = 1,\r\n            cssReset = {},\r\n            img = self.elements.preview,\r\n            imgData,\r\n            transformReset = new Transform(0, 0, initialZoom),\r\n            originReset = new TransformOrigin(),\r\n            isVisible = _isVisible.call(self);\r\n\r\n        if (!isVisible || self.data.bound) {// if the croppie isn't visible or it doesn't need binding\r\n            return;\r\n        }\r\n\r\n        self.data.bound = true;\r\n        cssReset[CSS_TRANSFORM] = transformReset.toString();\r\n        cssReset[CSS_TRANS_ORG] = originReset.toString();\r\n        cssReset['opacity'] = 1;\r\n        css(img, cssReset);\r\n\r\n        imgData = self.elements.preview.getBoundingClientRect();\r\n\r\n        self._originalImageWidth = imgData.width;\r\n        self._originalImageHeight = imgData.height;\r\n        self.data.orientation = getExifOrientation(self.elements.img);\r\n\r\n        if (self.options.enableZoom) {\r\n            _updateZoomLimits.call(self, true);\r\n        }\r\n        else {\r\n            self._currentZoom = initialZoom;\r\n        }\r\n\r\n        transformReset.scale = self._currentZoom;\r\n        cssReset[CSS_TRANSFORM] = transformReset.toString();\r\n        css(img, cssReset);\r\n\r\n        if (self.data.points.length) {\r\n            _bindPoints.call(self, self.data.points);\r\n        }\r\n        else {\r\n            _centerImage.call(self);\r\n        }\r\n\r\n        _updateCenterPoint.call(self);\r\n        _updateOverlay.call(self);\r\n    }\r\n\r\n    function _updateZoomLimits (initial) {\r\n        var self = this,\r\n            minZoom = Math.max(self.options.minZoom, 0) || 0,\r\n            maxZoom = self.options.maxZoom || 1.5,\r\n            initialZoom,\r\n            defaultInitialZoom,\r\n            zoomer = self.elements.zoomer,\r\n            scale = parseFloat(zoomer.value),\r\n            boundaryData = self.elements.boundary.getBoundingClientRect(),\r\n            imgData = naturalImageDimensions(self.elements.img, self.data.orientation),\r\n            vpData = self.elements.viewport.getBoundingClientRect(),\r\n            minW,\r\n            minH;\r\n        if (self.options.enforceBoundary) {\r\n            minW = vpData.width / imgData.width;\r\n            minH = vpData.height / imgData.height;\r\n            minZoom = Math.max(minW, minH);\r\n        }\r\n\r\n        if (minZoom >= maxZoom) {\r\n            maxZoom = minZoom + 1;\r\n        }\r\n\r\n        zoomer.min = fix(minZoom, 4);\r\n        zoomer.max = fix(maxZoom, 4);\r\n        \r\n        if (!initial && (scale < zoomer.min || scale > zoomer.max)) {\r\n            _setZoomerVal.call(self, scale < zoomer.min ? zoomer.min : zoomer.max);\r\n        }\r\n        else if (initial) {\r\n            defaultInitialZoom = Math.max((boundaryData.width / imgData.width), (boundaryData.height / imgData.height));\r\n            initialZoom = self.data.boundZoom !== null ? self.data.boundZoom : defaultInitialZoom;\r\n            _setZoomerVal.call(self, initialZoom);\r\n        }\r\n\r\n        dispatchChange(zoomer);\r\n    }\r\n\r\n    function _bindPoints(points) {\r\n        if (points.length !== 4) {\r\n            throw \"Croppie - Invalid number of points supplied: \" + points;\r\n        }\r\n        var self = this,\r\n            pointsWidth = points[2] - points[0],\r\n            // pointsHeight = points[3] - points[1],\r\n            vpData = self.elements.viewport.getBoundingClientRect(),\r\n            boundRect = self.elements.boundary.getBoundingClientRect(),\r\n            vpOffset = {\r\n                left: vpData.left - boundRect.left,\r\n                top: vpData.top - boundRect.top\r\n            },\r\n            scale = vpData.width / pointsWidth,\r\n            originTop = points[1],\r\n            originLeft = points[0],\r\n            transformTop = (-1 * points[1]) + vpOffset.top,\r\n            transformLeft = (-1 * points[0]) + vpOffset.left,\r\n            newCss = {};\r\n\r\n        newCss[CSS_TRANS_ORG] = originLeft + 'px ' + originTop + 'px';\r\n        newCss[CSS_TRANSFORM] = new Transform(transformLeft, transformTop, scale).toString();\r\n        css(self.elements.preview, newCss);\r\n\r\n        _setZoomerVal.call(self, scale);\r\n        self._currentZoom = scale;\r\n    }\r\n\r\n    function _centerImage() {\r\n        var self = this,\r\n            imgDim = self.elements.preview.getBoundingClientRect(),\r\n            vpDim = self.elements.viewport.getBoundingClientRect(),\r\n            boundDim = self.elements.boundary.getBoundingClientRect(),\r\n            vpLeft = vpDim.left - boundDim.left,\r\n            vpTop = vpDim.top - boundDim.top,\r\n            w = vpLeft - ((imgDim.width - vpDim.width) / 2),\r\n            h = vpTop - ((imgDim.height - vpDim.height) / 2),\r\n            transform = new Transform(w, h, self._currentZoom);\r\n\r\n        css(self.elements.preview, CSS_TRANSFORM, transform.toString());\r\n    }\r\n\r\n    function _transferImageToCanvas(customOrientation) {\r\n        var self = this,\r\n            canvas = self.elements.canvas,\r\n            img = self.elements.img,\r\n            ctx = canvas.getContext('2d');\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        canvas.width = img.width;\r\n        canvas.height = img.height;\r\n\r\n        var orientation = self.options.enableOrientation && customOrientation || getExifOrientation(img);\r\n        drawCanvas(canvas, img, orientation);\r\n    }\r\n\r\n    function _getCanvas(data) {\r\n        var self = this,\r\n            points = data.points,\r\n            left = num(points[0]),\r\n            top = num(points[1]),\r\n            right = num(points[2]),\r\n            bottom = num(points[3]),\r\n            width = right-left,\r\n            height = bottom-top,\r\n            circle = data.circle,\r\n            canvas = document.createElement('canvas'),\r\n            ctx = canvas.getContext('2d'),\r\n            startX = 0,\r\n            startY = 0,\r\n            canvasWidth = data.outputWidth || width,\r\n            canvasHeight = data.outputHeight || height;\r\n\r\n        canvas.width = canvasWidth;\r\n        canvas.height = canvasHeight;\r\n\r\n        if (data.backgroundColor) {\r\n            ctx.fillStyle = data.backgroundColor;\r\n            ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n        }\r\n\r\n        // By default assume we're going to draw the entire\r\n        // source image onto the destination canvas.\r\n        sx = left;\r\n        sy = top;\r\n        sWidth = width;\r\n        sHeight = height;\r\n        dx = 0;\r\n        dy = 0;\r\n        dWidth = canvasWidth;\r\n        dHeight = canvasHeight;\r\n\r\n        //\r\n        // Do not go outside of the original image's bounds along the x-axis.\r\n        // Handle translations when projecting onto the destination canvas.\r\n        //\r\n\r\n        // The smallest possible source x-position is 0.\r\n        if (left < 0) {\r\n            sx = 0;\r\n            dx = (Math.abs(left) / width) * canvasWidth;\r\n        }\r\n\r\n        // The largest possible source width is the original image's width.\r\n        if (sWidth + sx > self._originalImageWidth) {\r\n            sWidth = self._originalImageWidth - sx;\r\n            dWidth =  (sWidth / width) * canvasWidth;\r\n        }\r\n\r\n        //\r\n        // Do not go outside of the original image's bounds along the y-axis.\r\n        //\r\n\r\n        // The smallest possible source y-position is 0.\r\n        if (top < 0) {\r\n            sy = 0;\r\n            dy = (Math.abs(top) / height) * canvasHeight;\r\n        }\r\n\r\n        // The largest possible source height is the original image's height.\r\n        if (sHeight + sy > self._originalImageHeight) {\r\n            sHeight = self._originalImageHeight - sy;\r\n            dHeight = (sHeight / height) * canvasHeight;\r\n        }\r\n\r\n        // console.table({ left, right, top, bottom, canvasWidth, canvasHeight, width, height, startX, startY, circle, sx, sy, dx, dy, sWidth, sHeight, dWidth, dHeight });\r\n\r\n        ctx.drawImage(this.elements.preview, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\r\n        if (circle) {\r\n            ctx.fillStyle = '#fff';\r\n            ctx.globalCompositeOperation = 'destination-in';\r\n            ctx.beginPath();\r\n            ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, Math.PI * 2, true);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        return canvas;\r\n    }\r\n\r\n    function _getHtmlResult(data) {\r\n        var points = data.points,\r\n            div = document.createElement('div'),\r\n            img = document.createElement('img'),\r\n            width = points[2] - points[0],\r\n            height = points[3] - points[1];\r\n\r\n        addClass(div, 'croppie-result');\r\n        div.appendChild(img);\r\n        css(img, {\r\n            left: (-1 * points[0]) + 'px',\r\n            top: (-1 * points[1]) + 'px'\r\n        });\r\n        img.src = data.url;\r\n        css(div, {\r\n            width: width + 'px',\r\n            height: height + 'px'\r\n        });\r\n\r\n        return div;\r\n    }\r\n\r\n    function _getBase64Result(data) {\r\n        return _getCanvas.call(this, data).toDataURL(data.format, data.quality);\r\n    }\r\n\r\n    function _getBlobResult(data) {\r\n        var self = this;\r\n        return new Promise(function (resolve) {\r\n            _getCanvas.call(self, data).toBlob(function (blob) {\r\n                resolve(blob);\r\n            }, data.format, data.quality);\r\n        });\r\n    }\r\n\r\n    function _replaceImage(img) {\r\n        if (this.elements.img.parentNode) {\r\n            Array.prototype.forEach.call(this.elements.img.classList, function(c) { img.classList.add(c); });\r\n            this.elements.img.parentNode.replaceChild(img, this.elements.img);\r\n            this.elements.preview = img; // if the img is attached to the DOM, they're not using the canvas\r\n        }\r\n        this.elements.img = img;\r\n    }\r\n\r\n    function _bind(options, cb) {\r\n        var self = this,\r\n            url,\r\n            points = [],\r\n            zoom = null,\r\n            hasExif = _hasExif.call(self);\r\n\r\n        if (typeof (options) === 'string') {\r\n            url = options;\r\n            options = {};\r\n        }\r\n        else if (Array.isArray(options)) {\r\n            points = options.slice();\r\n        }\r\n        else if (typeof (options) === 'undefined' && self.data.url) { //refreshing\r\n            _updatePropertiesFromImage.call(self);\r\n            _triggerUpdate.call(self);\r\n            return null;\r\n        }\r\n        else {\r\n            url = options.url;\r\n            points = options.points || [];\r\n            zoom = typeof(options.zoom) === 'undefined' ? null : options.zoom;\r\n        }\r\n\r\n        self.data.bound = false;\r\n        self.data.url = url || self.data.url;\r\n        self.data.boundZoom = zoom;\r\n\r\n        return loadImage(url, hasExif).then(function (img) {\r\n            _replaceImage.call(self, img);\r\n            if (!points.length) {\r\n                var natDim = naturalImageDimensions(img);\r\n                var rect = self.elements.viewport.getBoundingClientRect();\r\n                var aspectRatio = rect.width / rect.height;\r\n                var imgAspectRatio = natDim.width / natDim.height;\r\n                var width, height;\r\n\r\n                if (imgAspectRatio > aspectRatio) {\r\n                    height = natDim.height;\r\n                    width = height * aspectRatio;\r\n                }\r\n                else {\r\n                    width = natDim.width;\r\n                    height = natDim.height / aspectRatio;\r\n                }\r\n\r\n                var x0 = (natDim.width - width) / 2;\r\n                var y0 = (natDim.height - height) / 2;\r\n                var x1 = x0 + width;\r\n                var y1 = y0 + height;\r\n                self.data.points = [x0, y0, x1, y1];\r\n            }\r\n            else if (self.options.relative) {\r\n                points = [\r\n                    points[0] * img.naturalWidth / 100,\r\n                    points[1] * img.naturalHeight / 100,\r\n                    points[2] * img.naturalWidth / 100,\r\n                    points[3] * img.naturalHeight / 100\r\n                ];\r\n            }\r\n\r\n            self.data.points = points.map(function (p) {\r\n                return parseFloat(p);\r\n            });\r\n            if (self.options.useCanvas) {\r\n                _transferImageToCanvas.call(self, options.orientation);\r\n            }\r\n            _updatePropertiesFromImage.call(self);\r\n            _triggerUpdate.call(self);\r\n            cb && cb();\r\n        });\r\n    }\r\n\r\n    function fix(v, decimalPoints) {\r\n        return parseFloat(v).toFixed(decimalPoints || 0);\r\n    }\r\n\r\n    function _get() {\r\n        var self = this,\r\n            imgData = self.elements.preview.getBoundingClientRect(),\r\n            vpData = self.elements.viewport.getBoundingClientRect(),\r\n            x1 = vpData.left - imgData.left,\r\n            y1 = vpData.top - imgData.top,\r\n            widthDiff = (vpData.width - self.elements.viewport.offsetWidth) / 2, //border\r\n            heightDiff = (vpData.height - self.elements.viewport.offsetHeight) / 2,\r\n            x2 = x1 + self.elements.viewport.offsetWidth + widthDiff,\r\n            y2 = y1 + self.elements.viewport.offsetHeight + heightDiff,\r\n            scale = self._currentZoom;\r\n\r\n        if (scale === Infinity || isNaN(scale)) {\r\n            scale = 1;\r\n        }\r\n\r\n        var max = self.options.enforceBoundary ? 0 : Number.NEGATIVE_INFINITY;\r\n        x1 = Math.max(max, x1 / scale);\r\n        y1 = Math.max(max, y1 / scale);\r\n        x2 = Math.max(max, x2 / scale);\r\n        y2 = Math.max(max, y2 / scale);\r\n\r\n        return {\r\n            points: [fix(x1), fix(y1), fix(x2), fix(y2)],\r\n            zoom: scale,\r\n            orientation: self.data.orientation\r\n        };\r\n    }\r\n\r\n    var RESULT_DEFAULTS = {\r\n            type: 'canvas',\r\n            format: 'png',\r\n            quality: 1\r\n        },\r\n        RESULT_FORMATS = ['jpeg', 'webp', 'png'];\r\n\r\n    function _result(options) {\r\n        var self = this,\r\n            data = _get.call(self),\r\n            opts = deepExtend(clone(RESULT_DEFAULTS), clone(options)),\r\n            resultType = (typeof (options) === 'string' ? options : (opts.type || 'base64')),\r\n            size = opts.size || 'viewport',\r\n            format = opts.format,\r\n            quality = opts.quality,\r\n            backgroundColor = opts.backgroundColor,\r\n            circle = typeof opts.circle === 'boolean' ? opts.circle : (self.options.viewport.type === 'circle'),\r\n            vpRect = self.elements.viewport.getBoundingClientRect(),\r\n            ratio = vpRect.width / vpRect.height,\r\n            prom;\r\n\r\n        if (size === 'viewport') {\r\n            data.outputWidth = vpRect.width;\r\n            data.outputHeight = vpRect.height;\r\n        } else if (typeof size === 'object') {\r\n            if (size.width && size.height) {\r\n                data.outputWidth = size.width;\r\n                data.outputHeight = size.height;\r\n            } else if (size.width) {\r\n                data.outputWidth = size.width;\r\n                data.outputHeight = size.width / ratio;\r\n            } else if (size.height) {\r\n                data.outputWidth = size.height * ratio;\r\n                data.outputHeight = size.height;\r\n            }\r\n        }\r\n\r\n        if (RESULT_FORMATS.indexOf(format) > -1) {\r\n            data.format = 'image/' + format;\r\n            data.quality = quality;\r\n        }\r\n\r\n        data.circle = circle;\r\n        data.url = self.data.url;\r\n        data.backgroundColor = backgroundColor;\r\n\r\n        prom = new Promise(function (resolve) {\r\n            switch(resultType.toLowerCase())\r\n            {\r\n                case 'rawcanvas':\r\n                    resolve(_getCanvas.call(self, data));\r\n                    break;\r\n                case 'canvas':\r\n                case 'base64':\r\n                    resolve(_getBase64Result.call(self, data));\r\n                    break;\r\n                case 'blob':\r\n                    _getBlobResult.call(self, data).then(resolve);\r\n                    break;\r\n                default:\r\n                    resolve(_getHtmlResult.call(self, data));\r\n                    break;\r\n            }\r\n        });\r\n        return prom;\r\n    }\r\n\r\n    function _refresh() {\r\n        _updatePropertiesFromImage.call(this);\r\n    }\r\n\r\n    function _rotate(deg) {\r\n        if (!this.options.useCanvas || !this.options.enableOrientation) {\r\n            throw 'Croppie: Cannot rotate without enableOrientation && EXIF.js included';\r\n        }\r\n\r\n        var self = this,\r\n            canvas = self.elements.canvas;\r\n\r\n        self.data.orientation = getExifOffset(self.data.orientation, deg);\r\n        drawCanvas(canvas, self.elements.img, self.data.orientation);\r\n        _updateCenterPoint.call(self, true);\r\n        _updateZoomLimits.call(self);\r\n    }\r\n\r\n    function _destroy() {\r\n        var self = this;\r\n        self.element.removeChild(self.elements.boundary);\r\n        removeClass(self.element, 'croppie-container');\r\n        if (self.options.enableZoom) {\r\n            self.element.removeChild(self.elements.zoomerWrap);\r\n        }\r\n        delete self.elements;\r\n    }\r\n\r\n    if (window.jQuery) {\r\n        var $ = window.jQuery;\r\n        $.fn.croppie = function (opts) {\r\n            var ot = typeof opts;\r\n\r\n            if (ot === 'string') {\r\n                var args = Array.prototype.slice.call(arguments, 1);\r\n                var singleInst = $(this).data('croppie');\r\n\r\n                if (opts === 'get') {\r\n                    return singleInst.get();\r\n                }\r\n                else if (opts === 'result') {\r\n                    return singleInst.result.apply(singleInst, args);\r\n                }\r\n                else if (opts === 'bind') {\r\n                    return singleInst.bind.apply(singleInst, args);\r\n                }\r\n\r\n                return this.each(function () {\r\n                    var i = $(this).data('croppie');\r\n                    if (!i) return;\r\n\r\n                    var method = i[opts];\r\n                    if ($.isFunction(method)) {\r\n                        method.apply(i, args);\r\n                        if (opts === 'destroy') {\r\n                            $(this).removeData('croppie');\r\n                        }\r\n                    }\r\n                    else {\r\n                        throw 'Croppie ' + opts + ' method not found';\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return this.each(function () {\r\n                    var i = new Croppie(this, opts);\r\n                    i.$ = $;\r\n                    $(this).data('croppie', i);\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function Croppie(element, opts) {\r\n        if (element.className.indexOf('croppie-container') > -1) {\r\n            throw new Error(\"Croppie: Can't initialize croppie more than once\");\r\n        }\r\n        this.element = element;\r\n        this.options = deepExtend(clone(Croppie.defaults), opts);\r\n\r\n        if (this.element.tagName.toLowerCase() === 'img') {\r\n            var origImage = this.element;\r\n            addClass(origImage, 'cr-original-image');\r\n            setAttributes(origImage, {'aria-hidden' : 'true', 'alt' : '' });\r\n            var replacementDiv = document.createElement('div');\r\n            this.element.parentNode.appendChild(replacementDiv);\r\n            replacementDiv.appendChild(origImage);\r\n            this.element = replacementDiv;\r\n            this.options.url = this.options.url || origImage.src;\r\n        }\r\n\r\n        _create.call(this);\r\n        if (this.options.url) {\r\n            var bindOpts = {\r\n                url: this.options.url,\r\n                points: this.options.points\r\n            };\r\n            delete this.options['url'];\r\n            delete this.options['points'];\r\n            _bind.call(this, bindOpts);\r\n        }\r\n    }\r\n\r\n    Croppie.defaults = {\r\n        viewport: {\r\n            width: 100,\r\n            height: 100,\r\n            type: 'square'\r\n        },\r\n        boundary: { },\r\n        orientationControls: {\r\n            enabled: true,\r\n            leftClass: '',\r\n            rightClass: ''\r\n        },\r\n        resizeControls: {\r\n            width: true,\r\n            height: true\r\n        },\r\n        customClass: '',\r\n        showZoomer: true,\r\n        enableZoom: true,\r\n        enableResize: false,\r\n        mouseWheelZoom: true,\r\n        enableExif: false,\r\n        enforceBoundary: true,\r\n        enableOrientation: false,\r\n        enableKeyMovement: true,\r\n        update: function () { }\r\n    };\r\n\r\n    Croppie.globals = {\r\n        translate: 'translate3d'\r\n    };\r\n\r\n    deepExtend(Croppie.prototype, {\r\n        bind: function (options, cb) {\r\n            return _bind.call(this, options, cb);\r\n        },\r\n        get: function () {\r\n            var data = _get.call(this);\r\n            var points = data.points;\r\n            if (this.options.relative) {\r\n                points[0] /= this.elements.img.naturalWidth / 100;\r\n                points[1] /= this.elements.img.naturalHeight / 100;\r\n                points[2] /= this.elements.img.naturalWidth / 100;\r\n                points[3] /= this.elements.img.naturalHeight / 100;\r\n            }\r\n            return data;\r\n        },\r\n        result: function (type) {\r\n            return _result.call(this, type);\r\n        },\r\n        refresh: function () {\r\n            return _refresh.call(this);\r\n        },\r\n        setZoom: function (v) {\r\n            _setZoomerVal.call(this, v);\r\n            dispatchChange(this.elements.zoomer);\r\n        },\r\n        rotate: function (deg) {\r\n            _rotate.call(this, deg);\r\n        },\r\n        destroy: function () {\r\n            return _destroy.call(this);\r\n        }\r\n    });\r\n    return Croppie;\r\n}));\r\n"],"sourceRoot":""}