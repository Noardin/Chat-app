{"version":3,"sources":["webpack:///./src/components/Cropper.vue?7f7d","webpack:///src/components/Cropper.vue","webpack:///./src/components/Cropper.vue?9348","webpack:///./src/components/Cropper.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","attrs","enableExif","enableResize","boundary","height","viewport","width","type","staticRenderFns","Croppervue_type_script_lang_js_","name","props","UserData","Object","default","String","cropper","Boolean","src","data","cropped","mounted","$refs","croppieRef","bind","url","path","profile_img","methods","img","crop","_this","result","size","format","quality","circle","output","$store","dispatch","imageBase64","then","console","log","fileChange","file","_this2","target","files","match","warn","value","$emit","reader","FileReader","readAsDataURL","onload","dialog","onerror","error","components_Croppervue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"gHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,eAAmCE,IAAA,aAAAC,MAAA,CAAwBC,YAAA,EAAAC,cAAA,EAAAC,SAAA,CAAmDC,OAAA,KAAWC,SAAA,CAAaC,MAAA,IAAAF,OAAA,IAAAG,KAAA,cAAyC,IACxQC,EAAA,GCSAC,iCAAA,CACAC,KAAA,UACAC,MAAA,CACAC,SAAAC,OACAC,QAAAC,OACAC,QAAAC,QACAC,IAAAH,QAEAI,KARA,WASA,OACAC,QAAA,KAGAC,QAbA,WAcA3B,KAAA4B,MAAAC,WAAAC,KAAA,CACAC,IAAA/B,KAAAgC,KAAAhC,KAAAkB,SAAAe,gBAGAC,QAAA,CACAF,KADA,SACAG,GACA,0DAAAA,EAAA,QAGAC,KALA,WAKA,IAAAC,EAAArC,KACAA,KAAA4B,MAAAC,WAAAS,OAAA,CACAzB,KAAA,SACA0B,KAAA,WACAC,OAAA,MACAC,QAAA,EACAC,QAAA,GACA,SAAAC,GACAN,EAAAX,QAAAiB,EACAN,EAAAO,OAAAC,SAAA,kBAAAC,YAAAT,EAAAX,UAAAqB,KAAAC,QAAAC,IAAA,eAIAC,WAlBA,SAkBAC,GAAA,IAAAC,EAAApD,KAEA,IAAAmD,EAAAE,OAAAC,MAAA,GAAAtC,KAAAuC,MAAA,yBAIA,OAHAP,QAAAQ,KAAA,gBACAL,EAAAE,OAAAI,MAAA,UACAzD,KAAA0D,MAAA,qBAGA,IAAAC,EAAA,IAAAC,WACAD,EAAAE,cAAAV,EAAAE,OAAAC,MAAA,IACAK,EAAAG,OAAA,WACAV,EAAAW,QAAA,EAGAX,EAAAxB,MAAAC,WAAAC,KAAA,CACAC,IAAA4B,EAAArB,SAEAa,EAAAE,OAAAI,MAAA,MAEAE,EAAAK,QAAA,SAAAC,SCjEiVC,EAAA,cCOjVC,EAAgBhD,OAAAiD,EAAA,KAAAjD,CACd+C,EACApE,EACAgB,GACF,EACA,KACA,WACA,MAIeuD,EAAA,KAAAF","file":"js/about~47fe49b1.8cedc165.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('vue-croppie',{ref:\"croppieRef\",attrs:{\"enableExif\":true,\"enableResize\":false,\"boundary\":{height:300},\"viewport\":{width:250, height: 250, type: 'circle'}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n         <vue-croppie ref=croppieRef :enableExif=\"true\" :enableResize=\"false\" :boundary=\"{height:300}\"\r\n                      :viewport=\"{width:250, height: 250, type: 'circle'}\"></vue-croppie>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import '../assets/croppie.css'\r\n    export default {\r\n        name: \"Cropper\",\r\n         props: {\r\n            UserData:Object,\r\n        default: String,\r\n        cropper: Boolean,\r\n        src: String,\r\n    },\r\n        data(){\r\n            return{\r\n                cropped:''\r\n            }\r\n        },\r\n        mounted(){\r\n            this.$refs.croppieRef.bind({\r\n                url: this.path(this.UserData.profile_img)\r\n            })\r\n        },\r\n    methods: {\r\n            path(img){\r\n                return 'https://maxchatapp-backend.herokuapp.com/api/get/'+img+'.jpg'\r\n\r\n            },\r\n            crop() {\r\n            this.$refs.croppieRef.result({\r\n\t\t\t\ttype: 'base64', //base64, html, blob, rawcanvas\r\n\t\t\t\tsize: 'viewport', //original , viewport, {width, height}\r\n\t\t\t\tformat: 'png', //jpeg, png, webp\r\n\t\t\t\tquality: 1,\r\n\t\t\t\tcircle: false\r\n\t\t\t},(output) => {\r\n                this.cropped = output;\r\n                this.$store.dispatch('updateSettings',{imageBase64:this.cropped}).then(console.log('cropped'))\r\n            });\r\n        },\r\n        // This method will detect if the image from image input changed\r\n        fileChange(file) {\r\n            // To check if file is an image\r\n            if (!file.target.files[0].name.match(/.(jpg|jpeg|png|gif)$/i)) {\r\n                console.warn('not an image');\r\n                file.target.value = null;\r\n                this.$emit('imageChanged', null);\r\n                return;\r\n            }\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(file.target.files[0]);\r\n            reader.onload = () => {\r\n                this.dialog = true;\r\n                // bind the result of the file\r\n                // to croppie\r\n                this.$refs.croppieRef.bind({\r\n                    url: reader.result,\r\n                });\r\n                file.target.value = null\r\n            };\r\n            reader.onerror = (error) => {\r\n                           };\r\n        }\r\n    }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cropper.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cropper.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cropper.vue?vue&type=template&id=0762f0f4&scoped=true&\"\nimport script from \"./Cropper.vue?vue&type=script&lang=js&\"\nexport * from \"./Cropper.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0762f0f4\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}