{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-empty.js","webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-pagination.js","webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-items.js","webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-caption.js","webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-colgroup.js","webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-filtering.js","webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/mixin-provider.js"],"names":["exports","__esModule","default","_html","__webpack_require__","_default","props","showEmpty","type","Boolean","emptyText","String","emptyHtml","emptyFilteredText","emptyFilteredHtml","methods","renderEmpty","$empty","h","this","$createElement","items","computedItems","length","computedBusy","hasNormalizedSlot","normalizeSlot","isFiltered","fields","computedFields","class","domProps","htmlOrText","attrs","colspan","role","aria-live","key","staticClass","tbodyTrClass","perPage","Number","currentPage","computed","localPaging","hasProvider","noProviderPaging","paginatedItems","sortedItems","Math","max","parseInt","slice","_normalizeFields","_interopRequireDefault","_array","obj","_default2","Array","Function","Object","primaryKey","data","localItems","isArray","computedFieldsObj","reduce","f","watch","newItems","undefined","caption","captionHtml","captionTop","captionClasses","b-table-caption-top","captionId","isStacked","safeId","renderCaption","$captionSlot","$caption","id","renderColgroup","$colgroup","columns","_stringifyRecordValues","_looseEqual","_warn","DEPRECATION_MSG","filter","RegExp","deprecation","filterFunction","localFiltering","noProviderFiltering","filteredCheck","filteredItems","localFilter","localFilterFn","filterFn","concat","criteria","filterFnFactory","defaultFilterFnFactory","_ref","$emit","newVal","oldVal","created","_this","$nextTick","fn","item","regexp","pattern","replace","lastIndex","test","_listenOnRoot","mixins","noProviderSorting","apiUrl","providerTriggerContext","ctx","sortBy","localSortBy","sortDesc","localSortDesc","_providerUpdate","mounted","listenOnRoot","refresh","$off","localBusy","$on","clearSelected","_providerSetLocal","emitOnRoot","_this2","context","then","e","name","message"],"mappings":"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","file":"js/chunk-vendors~4f0fe9e8.a1159529.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _html = require(\"../../../utils/html\");\n\nvar _default = {\n  props: {\n    showEmpty: {\n      type: Boolean,\n      default: false\n    },\n    emptyText: {\n      type: String,\n      default: 'There are no records to show'\n    },\n    emptyHtml: {\n      type: String\n    },\n    emptyFilteredText: {\n      type: String,\n      default: 'There are no records matching your request'\n    },\n    emptyFilteredHtml: {\n      type: String\n    }\n  },\n  methods: {\n    renderEmpty: function renderEmpty() {\n      var h = this.$createElement;\n      var items = this.computedItems;\n      var $empty;\n\n      if (this.showEmpty && (!items || items.length === 0) && !(this.computedBusy && this.hasNormalizedSlot('table-busy'))) {\n        $empty = this.normalizeSlot(this.isFiltered ? 'emptyfiltered' : 'empty', {\n          emptyFilteredHtml: this.emptyFilteredHtml,\n          emptyFilteredText: this.emptyFilteredText,\n          emptyHtml: this.emptyHtml,\n          emptyText: this.emptyText,\n          fields: this.computedFields,\n          // Not sure why this is included, as it will always be an empty array\n          items: this.computedItems\n        });\n\n        if (!$empty) {\n          $empty = h('div', {\n            class: ['text-center', 'my-2'],\n            domProps: this.isFiltered ? (0, _html.htmlOrText)(this.emptyFilteredHtml, this.emptyFilteredText) : (0, _html.htmlOrText)(this.emptyHtml, this.emptyText)\n          });\n        }\n\n        $empty = h('td', {\n          attrs: {\n            colspan: String(this.computedFields.length),\n            role: 'cell'\n          }\n        }, [h('div', {\n          attrs: {\n            role: 'alert',\n            'aria-live': 'polite'\n          }\n        }, [$empty])]);\n        $empty = h('tr', {\n          key: this.isFiltered ? '_b-table-empty-filtered-row_' : '_b-table-empty-row_',\n          staticClass: 'b-table-empty-row',\n          class: [typeof this.tbodyTrClass === 'function' ? this.tbodyTrClass(null, 'row-empty') : this.tbodyTrClass],\n          attrs: {\n            role: 'row'\n          }\n        }, [$empty]);\n      }\n\n      return $empty || h(false);\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _default = {\n  props: {\n    perPage: {\n      type: [Number, String],\n      default: 0\n    },\n    currentPage: {\n      type: [Number, String],\n      default: 1\n    }\n  },\n  computed: {\n    localPaging: function localPaging() {\n      return this.hasProvider ? !!this.noProviderPaging : true;\n    },\n    paginatedItems: function paginatedItems() {\n      var items = this.sortedItems || [];\n      var currentPage = Math.max(parseInt(this.currentPage, 10) || 1, 1);\n      var perPage = Math.max(parseInt(this.perPage, 10) || 0, 0); // Apply local pagination\n\n      if (this.localPaging && !!perPage) {\n        // Grab the current page of data (which may be past filtered items limit)\n        items = items.slice((currentPage - 1) * perPage, currentPage * perPage);\n      } // Return the items to display in the table\n\n\n      return items;\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _normalizeFields = _interopRequireDefault(require(\"./normalize-fields\"));\n\nvar _array = require(\"../../../utils/array\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default2 = {\n  props: {\n    items: {\n      type: [Array, Function],\n      default: function _default()\n      /* istanbul ignore next */\n      {\n        return [];\n      }\n    },\n    fields: {\n      // Object format is deprecated and should be avoided\n      type: [Array, Object],\n      default: null\n    },\n    primaryKey: {\n      // Primary key for record.\n      // If provided the value in each row must be unique!!!\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      // Our local copy of the items. Must be an array\n      localItems: (0, _array.isArray)(this.items) ? this.items.slice() : []\n    };\n  },\n  computed: {\n    computedFields: function computedFields() {\n      // We normalize fields into an array of objects\n      // [ { key:..., label:..., ...}, {...}, ..., {..}]\n      return (0, _normalizeFields.default)(this.fields, this.localItems);\n    },\n    computedFieldsObj: function computedFieldsObj()\n    /* istanbul ignore next: not using at the moment */\n    {\n      // Fields as a simple lookup hash object\n      // Mainly for scopedSlots for convenience\n      return this.computedFields.reduce(function (f, obj) {\n        obj[f.key] = f;\n        return obj;\n      }, {});\n    }\n  },\n  watch: {\n    items: function items(newItems) {\n      /* istanbul ignore else */\n      if ((0, _array.isArray)(newItems)) {\n        // Set localItems/filteredItems to a copy of the provided array\n        this.localItems = newItems.slice();\n      } else if (newItems === null || newItems === undefined) {\n        /* istanbul ignore next */\n        this.localItems = [];\n      }\n    }\n  }\n};\nexports.default = _default2;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _html = require(\"../../../utils/html\");\n\nvar _default = {\n  props: {\n    caption: {\n      type: String,\n      default: null\n    },\n    captionHtml: {\n      type: String\n    },\n    captionTop: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    captionClasses: function captionClasses() {\n      return {\n        'b-table-caption-top': this.captionTop\n      };\n    },\n    captionId: function captionId() {\n      // Even though this.safeId looks like a method, it is a computed prop\n      // that returns a new function if the underlying ID changes\n      return this.isStacked ? this.safeId('_caption_') : null;\n    }\n  },\n  methods: {\n    renderCaption: function renderCaption() {\n      var h = this.$createElement; // Build the caption\n\n      var $captionSlot = this.normalizeSlot('table-caption', {});\n      var $caption = h(false);\n\n      if ($captionSlot || this.caption || this.captionHtml) {\n        var data = {\n          key: 'caption',\n          class: this.captionClasses,\n          attrs: {\n            id: this.captionId\n          }\n        };\n\n        if (!$captionSlot) {\n          data.domProps = (0, _html.htmlOrText)(this.captionHtml, this.caption);\n        }\n\n        $caption = h('caption', data, [$captionSlot]);\n      }\n\n      return $caption;\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _default = {\n  methods: {\n    renderColgroup: function renderColgroup() {\n      var h = this.$createElement;\n      var fields = this.computedFields;\n      var $colgroup = h(false);\n\n      if (this.hasNormalizedSlot('table-colgroup')) {\n        $colgroup = h('colgroup', {\n          key: 'colgroup'\n        }, [this.normalizeSlot('table-colgroup', {\n          columns: fields.length,\n          fields: fields\n        })]);\n      }\n\n      return $colgroup;\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _stringifyRecordValues = _interopRequireDefault(require(\"./stringify-record-values\"));\n\nvar _looseEqual = _interopRequireDefault(require(\"../../../utils/loose-equal\"));\n\nvar _warn = _interopRequireDefault(require(\"../../../utils/warn\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEPRECATION_MSG = 'Supplying a function to prop \"filter\" is deprecated. Use \"filter-function\" instead.';\nvar _default = {\n  props: {\n    filter: {\n      // Pasing a function to filter is deprecated and should be avoided\n      type: [String, RegExp, Object, Array, Function],\n      default: null,\n      // depreaction: refers to a change in prop's usage\n      // deprecated: means don't use prop any more\n      deprecation: DEPRECATION_MSG\n    },\n    filterFunction: {\n      type: Function,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      // Flag for displaying which empty slot to show, and for some event triggering.\n      isFiltered: false\n    };\n  },\n  computed: {\n    localFiltering: function localFiltering() {\n      return this.hasProvider ? !!this.noProviderFiltering : true;\n    },\n    filteredCheck: function filteredCheck() {\n      // For watching changes to filteredItems vs localItems\n      return {\n        filteredItems: this.filteredItems,\n        localItems: this.localItems,\n        localFilter: this.localFilter\n      };\n    },\n    localFilter: function localFilter() {\n      // Returns a sanitized/normalized version of filter prop\n      if (typeof this.filter === 'function') {\n        // this.localFilterFn will contain the correct function ref.\n        // Deprecate setting prop filter to a function\n\n        /* istanbul ignore next */\n        return '';\n      } else if (typeof this.filterFunction !== 'function' && !(typeof this.filter === 'string' || this.filter instanceof RegExp)) {\n        // Using internal filter function, which only accepts string or regexp at the moment\n        return '';\n      } else {\n        // Could be a string, object or array, as needed by external filter function\n        return this.filter;\n      }\n    },\n    localFilterFn: function localFilterFn() {\n      var filter = this.filter;\n      var filterFn = this.filterFunction; // Sanitized/normalize filter-function prop\n\n      if (typeof filterFn === 'function') {\n        return filterFn;\n      } else if (typeof filter === 'function') {\n        // Deprecate setting prop filter to a function\n\n        /* istanbul ignore next */\n        (0, _warn.default)(\"b-table: \".concat(DEPRECATION_MSG));\n        /* istanbul ignore next */\n\n        return filter;\n      } else {\n        // no filterFunction, so signal to use internal filter function\n        return null;\n      }\n    },\n    filteredItems: function filteredItems() {\n      // Returns the records in localItems that match the filter criteria.\n      // Returns the original localItems array if not sorting\n      var items = this.localItems || [];\n      var criteria = this.localFilter;\n      var filterFn = this.filterFnFactory(this.localFilterFn, criteria) || this.defaultFilterFnFactory(criteria); // We only do local filtering if requested, and if the are records to filter and\n      // if a filter criteria was specified\n\n      if (this.localFiltering && filterFn && items.length > 0) {\n        items = items.filter(filterFn);\n      }\n\n      return items;\n    }\n  },\n  watch: {\n    // Watch for changes to the filter criteria and filtered items vs localItems).\n    // And set visual state and emit events as required\n    filteredCheck: function filteredCheck(_ref) {\n      var filteredItems = _ref.filteredItems,\n          localItems = _ref.localItems,\n          localFilter = _ref.localFilter;\n      // Determine if the dataset is filtered or not\n      var isFiltered;\n\n      if (!localFilter) {\n        // If filter criteria is falsey\n        isFiltered = false;\n      } else if ((0, _looseEqual.default)(localFilter, []) || (0, _looseEqual.default)(localFilter, {})) {\n        // If filter criteria is an empty array or object\n        isFiltered = false;\n      } else if (localFilter) {\n        // if Filter criteria is truthy\n        isFiltered = true;\n      } else {\n        /* istanbul ignore next: rare chance of reaching this else */\n        isFiltered = false;\n      }\n\n      if (isFiltered) {\n        this.$emit('filtered', filteredItems, filteredItems.length);\n      }\n\n      this.isFiltered = isFiltered;\n    },\n    isFiltered: function isFiltered(newVal, oldVal) {\n      if (newVal === false && oldVal === true) {\n        // We need to emit a filtered event if isFiltered transitions from true to\n        // false so that users can update their pagination controls.\n        this.$emit('filtered', this.localItems, this.localItems.length);\n      }\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    // Set the initial filtered state.\n    // In a nextTick so that we trigger a filtered event if needed\n    this.$nextTick(function () {\n      _this.isFiltered = Boolean(_this.localFilter);\n    });\n  },\n  methods: {\n    // Filter Function factories\n    filterFnFactory: function filterFnFactory(filterFn, criteria) {\n      // Wrapper factory for external filter functions.\n      // Wrap the provided filter-function and return a new function.\n      // Returns null if no filter-function defined or if criteria is falsey.\n      // Rather than directly grabbing this.computedLocalFilterFn or this.filterFunction\n      // we have it passed, so that the caller computed prop will be reactive to changes\n      // in the original filter-function (as this routine is a method)\n      if (!filterFn || typeof filterFn !== 'function' || !criteria || (0, _looseEqual.default)(criteria, []) || (0, _looseEqual.default)(criteria, {})) {\n        return null;\n      } // Build the wrapped filter test function, passing the criteria to the provided function\n\n\n      var fn = function fn(item) {\n        // Generated function returns true if the criteria matches part\n        // of the serialized data, otherwise false\n        return filterFn(item, criteria);\n      }; // Return the wrapped function\n\n\n      return fn;\n    },\n    defaultFilterFnFactory: function defaultFilterFnFactory(criteria) {\n      // Generates the default filter function, using the given filter criteria\n      if (!criteria || !(typeof criteria === 'string' || criteria instanceof RegExp)) {\n        // Built in filter can only support strings or RegExp criteria (at the moment)\n        return null;\n      } // Build the regexp needed for filtering\n\n\n      var regexp = criteria;\n\n      if (typeof regexp === 'string') {\n        // Escape special RegExp characters in the string and convert contiguous\n        // whitespace to \\s+ matches\n        var pattern = criteria.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&').replace(/[\\s\\uFEFF\\xA0]+/g, '\\\\s+'); // Build the RegExp (no need for global flag, as we only need\n        // to find the value once in the string)\n\n        regexp = new RegExp(\".*\".concat(pattern, \".*\"), 'i');\n      } // Generate the wrapped filter test function to use\n\n\n      var fn = function fn(item) {\n        // This searches all row values (and sub property values) in the entire (excluding\n        // special _ prefixed keys), because we convert the record to a space-separated\n        // string containing all the value properties (recursively), even ones that are\n        // not visible (not specified in this.fields).\n        //\n        // TODO: Enable searching on formatted fields and scoped slots\n        // TODO: Should we filter only on visible fields (i.e. ones in this.fields) by default?\n        // TODO: Allow for searching on specific fields/key, this could be combined with the previous TODO\n        // TODO: Give stringifyRecordValues extra options for filtering (i.e. passing the\n        //       fields definition and a reference to $scopedSlots)\n        //\n        // Generated function returns true if the criteria matches part of\n        // the serialized data, otherwise false\n        // We set lastIndex = 0 on regex in case someone uses the /g global flag\n        regexp.lastIndex = 0;\n        return regexp.test((0, _stringifyRecordValues.default)(item));\n      }; // Return the generated function\n\n\n      return fn;\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _looseEqual = _interopRequireDefault(require(\"../../../utils/loose-equal\"));\n\nvar _array = require(\"../../../utils/array\");\n\nvar _warn = _interopRequireDefault(require(\"../../../utils/warn\"));\n\nvar _listenOnRoot = _interopRequireDefault(require(\"../../../mixins/listen-on-root\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  mixins: [_listenOnRoot.default],\n  props: {\n    noProviderPaging: {\n      type: Boolean,\n      default: false\n    },\n    noProviderSorting: {\n      type: Boolean,\n      default: false\n    },\n    noProviderFiltering: {\n      type: Boolean,\n      default: false\n    },\n    apiUrl: {\n      // Passthrough prop. Passed to the context object. Not used by b-table directly\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    hasProvider: function hasProvider() {\n      return this.items instanceof Function;\n    },\n    providerTriggerContext: function providerTriggerContext() {\n      // Used to trigger the provider function via a watcher. Only the fields that\n      // are needed for triggering a provider update are included. Note that the\n      // regular this.context is sent to the provider during fetches though, as they\n      // may neeed all the prop info.\n      var ctx = {\n        apiUrl: this.apiUrl\n      };\n\n      if (!this.noProviderFiltering) {\n        // Either a string, or could be an object or array.\n        ctx.filter = this.localFilter;\n      }\n\n      if (!this.noProviderSorting) {\n        ctx.sortBy = this.localSortBy;\n        ctx.sortDesc = this.localSortDesc;\n      }\n\n      if (!this.noProviderPaging) {\n        ctx.perPage = this.perPage;\n        ctx.currentPage = this.currentPage;\n      }\n\n      return ctx;\n    }\n  },\n  watch: {\n    // Provider update triggering\n    items: function items(newVal, oldVal) {\n      // If a new provider has been specified, trigger an update\n      if (this.hasProvider || newVal instanceof Function) {\n        this.$nextTick(this._providerUpdate);\n      }\n    },\n    providerTriggerContext: function providerTriggerContext(newVal, oldVal) {\n      // Trigger the provider to update as the relevant context values have changed.\n      if (!(0, _looseEqual.default)(newVal, oldVal)) {\n        this.$nextTick(this._providerUpdate);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // Call the items provider if necessary\n    if (this.hasProvider && (!this.localItems || this.localItems.length === 0)) {\n      // Fetch on mount if localItems is empty\n      this._providerUpdate();\n    } // Listen for global messages to tell us to force refresh the table\n\n\n    this.listenOnRoot('bv::refresh::table', function (id) {\n      if (id === _this.id || id === _this) {\n        _this.refresh();\n      }\n    });\n  },\n  methods: {\n    refresh: function refresh() {\n      // Public Method: Force a refresh of the provider function\n      this.$off('refreshed', this.refresh);\n\n      if (this.computedBusy) {\n        // Can't force an update when forced busy by user (busy prop === true)\n        if (this.localBusy && this.hasProvider) {\n          // But if provider running (localBusy), re-schedule refresh once `refreshed` emitted\n          this.$on('refreshed', this.refresh);\n        }\n      } else {\n        this.clearSelected();\n\n        if (this.hasProvider) {\n          this.$nextTick(this._providerUpdate);\n        } else {\n          /* istanbul ignore next */\n          this.localItems = (0, _array.isArray)(this.items) ? this.items.slice() : [];\n        }\n      }\n    },\n    // Provider related methods\n    _providerSetLocal: function _providerSetLocal(items) {\n      this.localItems = (0, _array.isArray)(items) ? items.slice() : [];\n      this.localBusy = false;\n      this.$emit('refreshed'); // New root emit\n\n      if (this.id) {\n        this.emitOnRoot('bv::table::refreshed', this.id);\n      }\n    },\n    _providerUpdate: function _providerUpdate() {\n      // Refresh the provider function items.\n      if (!this.hasProvider) {\n        // Do nothing if no provider\n        return;\n      } // If table is busy, wait until refereshed before calling again\n\n\n      if (this.computedBusy) {\n        // Schedule a new refresh once `refreshed` is emitted\n        this.$nextTick(this.refresh);\n        return;\n      } // Set internal busy state\n\n\n      this.localBusy = true; // Call provider function with context and optional callback after DOM is fully updated\n\n      this.$nextTick(function () {\n        var _this2 = this;\n\n        try {\n          // Call provider function passing it the context and optional callback\n          var data = this.items(this.context, this._providerSetLocal);\n\n          if (data && data.then && typeof data.then === 'function') {\n            // Provider returned Promise\n            data.then(function (items) {\n              // Provider resolved with items\n              _this2._providerSetLocal(items);\n            });\n          } else if ((0, _array.isArray)(data)) {\n            // Provider returned Array data\n            this._providerSetLocal(data);\n          } else if (this.items.length !== 2) {\n            // Check number of arguments provider function requested\n            // Provider not using callback (didn't request second argument), so we clear\n            // busy state as most likely there was an error in the provider function\n\n            /* istanbul ignore next */\n            (0, _warn.default)(\"b-table provider function didn't request calback and did not return a promise or data\");\n            /* istanbul ignore next */\n\n            this.localBusy = false;\n          }\n        } catch (e)\n        /* istanbul ignore next */\n        {\n          // Provider function borked on us, so we spew out a warning\n          // and clear the busy state\n          (0, _warn.default)(\"b-table provider function error [\".concat(e.name, \"] \").concat(e.message));\n          this.localBusy = false;\n          this.$off('refreshed', this.refresh);\n        }\n      });\n    }\n  }\n};\nexports.default = _default;"],"sourceRoot":""}