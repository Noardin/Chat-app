{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/src/utils/object.js","webpack:///./node_modules/bootstrap-vue/src/utils/to-string.js","webpack:///./node_modules/bootstrap-vue/src/utils/router.js","webpack:///./node_modules/bootstrap-vue/src/utils/identity.js","webpack:///./node_modules/bootstrap-vue/src/utils/pluck-props.js","webpack:///./node_modules/bootstrap-vue/src/utils/warn.js"],"names":["__webpack_require__","d","__webpack_exports__","keys","isObject","isPlainObject","Object","assign","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","is","x","y","getOwnPropertyNames","defineProperties","defineProperty","freeze","getOwnPropertyDescriptor","getOwnPropertySymbols","getPrototypeOf","create","isFrozen","obj","toString","to_string_toString","val","spaces","undefined","array","object","JSON","stringify","String","to_string","isRouterLink","computeTag","computeRel","computeHref","ANCHOR_TAG","commaRE","encodeReserveRE","encodeReserveReplacer","c","charCodeAt","encode","str","encodeURIComponent","replace","stringifyQueryObj","decodeURIComponent","query","map","key","reduce","results","val2","push","join","filter","tag","disabled","thisOrParent","$router","$nuxt","rel","href","fallback","toFallback","path","hash","charAt","identity","utils_identity","pluckProps","keysToPluck","objToPluck","transformFn","slice","memo","prop","_env__WEBPACK_IMPORTED_MODULE_0__","warn","message","console"],"mappings":"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","file":"js/about~e00b5942.54a2085f.js","sourcesContent":["/**\n * Aliasing Object[method] allows the minifier to shorten methods to a single character variable,\n * as well as giving BV a chance to inject polyfills.\n * As long as we avoid\n * - import * as Object from \"utils/object\"\n * all unused exports should be removed by tree-shaking.\n */\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n/* istanbul ignore if */\nif (typeof Object.assign !== 'function') {\n  Object.assign = function(target, varArgs) {\n    // .length of function is 2\n\n    if (target == null) {\n      // TypeError if undefined or null\n      throw new TypeError('Cannot convert undefined or null to object')\n    }\n\n    let to = Object(target)\n\n    for (let index = 1; index < arguments.length; index++) {\n      const nextSource = arguments[index]\n\n      if (nextSource != null) {\n        // Skip over if undefined or null\n        for (const nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey]\n          }\n        }\n      }\n    }\n    return to\n  }\n}\n\n// @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Polyfill\n/* istanbul ignore if */\nif (!Object.is) {\n  Object.is = function(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y\n    } else {\n      // Step 6.a: NaN == NaN\n      // eslint-disable-next-line no-self-compare\n      return x !== x && y !== y\n    }\n  }\n}\n\nexport const assign = Object.assign\nexport const getOwnPropertyNames = Object.getOwnPropertyNames\nexport const keys = Object.keys\nexport const defineProperties = Object.defineProperties\nexport const defineProperty = Object.defineProperty\nexport const freeze = Object.freeze\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\nexport const getOwnPropertySymbols = Object.getOwnPropertySymbols\nexport const getPrototypeOf = Object.getPrototypeOf\nexport const create = Object.create\nexport const isFrozen = Object.isFrozen\nexport const is = Object.is\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n * Note object could be a complex type like array, date, etc.\n */\nexport const isObject = obj => obj !== null && typeof obj === 'object'\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nexport const isPlainObject = obj => Object.prototype.toString.call(obj) === '[object Object]'\n\n// @link https://gist.github.com/bisubus/2da8af7e801ffd813fab7ac221aa7afc\nexport const omit = (obj, props) =>\n  Object.keys(obj)\n    .filter(key => props.indexOf(key) === -1)\n    .reduce((result, key) => ({ ...result, [key]: obj[key] }), {})\n\nexport const readonlyDescriptor = () => ({ enumerable: true, configurable: false, writable: false })\n","import { isArray } from './array'\nimport { isPlainObject } from './object'\n\n/**\n * Convert a value to a string that can be rendered.\n */\nconst toString = (val, spaces = 2) => {\n  return val === null || val === undefined\n    ? ''\n    : isArray(val) || (isPlainObject(val) && val.toString === Object.prototype.toString)\n      ? JSON.stringify(val, null, spaces)\n      : String(val)\n}\n\nexport default toString\n","import { isPlainObject, keys } from './object'\nimport { isArray } from './array'\nimport toString from './to-string'\n\nconst ANCHOR_TAG = 'a'\n\n// Precompile RegExp\nconst commaRE = /%2C/g\nconst encodeReserveRE = /[!'()*]/g\n// Method to replace reserved chars\nconst encodeReserveReplacer = c => '%' + c.charCodeAt(0).toString(16)\n\n// Fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nconst encode = str =>\n  encodeURIComponent(toString(str))\n    .replace(encodeReserveRE, encodeReserveReplacer)\n    .replace(commaRE, ',')\n\nconst decode = decodeURIComponent\n\n// Stringifies an object of query parameters\n// See: https://github.com/vuejs/vue-router/blob/dev/src/util/query.js\nexport const stringifyQueryObj = obj => {\n  if (!isPlainObject(obj)) {\n    return ''\n  }\n\n  const query = keys(obj)\n    .map(key => {\n      const val = obj[key]\n      if (val === undefined) {\n        return ''\n      } else if (val === null) {\n        return encode(key)\n      } else if (isArray(val)) {\n        return val\n          .reduce((results, val2) => {\n            if (val2 === null) {\n              results.push(encode(key))\n            } else if (val2 !== undefined) {\n              // Faster than string interpolation\n              results.push(encode(key) + '=' + encode(val2))\n            }\n            return results\n          }, [])\n          .join('&')\n      }\n      // Faster than string interpolation\n      return encode(key) + '=' + encode(val)\n    })\n    /* must check for length, as we only want to filter empty strings, not things that look falsey! */\n    .filter(x => x.length > 0)\n    .join('&')\n\n  return query ? `?${query}` : ''\n}\n\nexport const parseQuery = query => {\n  const parsed = {}\n  query = toString(query)\n    .trim()\n    .replace(/^(\\?|#|&)/, '')\n\n  if (!query) {\n    return parsed\n  }\n\n  query.split('&').forEach(param => {\n    const parts = param.replace(/\\+/g, ' ').split('=')\n    const key = decode(parts.shift())\n    const val = parts.length > 0 ? decode(parts.join('=')) : null\n\n    if (parsed[key] === undefined) {\n      parsed[key] = val\n    } else if (isArray(parsed[key])) {\n      parsed[key].push(val)\n    } else {\n      parsed[key] = [parsed[key], val]\n    }\n  })\n\n  return parsed\n}\n\nexport const isRouterLink = tag => tag !== ANCHOR_TAG\n\nexport const computeTag = ({ to, disabled } = {}, thisOrParent) => {\n  return thisOrParent.$router && to && !disabled\n    ? thisOrParent.$nuxt\n      ? 'nuxt-link'\n      : 'router-link'\n    : ANCHOR_TAG\n}\n\nexport const computeRel = ({ target, rel } = {}) => {\n  if (target === '_blank' && rel === null) {\n    return 'noopener'\n  }\n  return rel || null\n}\n\nexport const computeHref = (\n  { href, to } = {},\n  tag = ANCHOR_TAG,\n  fallback = '#',\n  toFallback = '/'\n) => {\n  // We've already checked the $router in computeTag(), so isRouterLink() indicates a live router.\n  // When deferring to Vue Router's router-link, don't use the href attribute at all.\n  // We return null, and then remove href from the attributes passed to router-link\n  if (isRouterLink(tag)) {\n    return null\n  }\n\n  // Return `href` when explicitly provided\n  if (href) {\n    return href\n  }\n\n  // Reconstruct `href` when `to` used, but no router\n  if (to) {\n    // Fallback to `to` prop (if `to` is a string)\n    if (typeof to === 'string') {\n      return to || toFallback\n    }\n    // Fallback to `to.path + to.query + to.hash` prop (if `to` is an object)\n    if (isPlainObject(to) && (to.path || to.query || to.hash)) {\n      const path = toString(to.path)\n      const query = stringifyQueryObj(to.query)\n      let hash = toString(to.hash)\n      hash = !hash || hash.charAt(0) === '#' ? hash : `#${hash}`\n      return `${path}${query}${hash}` || toFallback\n    }\n  }\n\n  // If nothing is provided return the fallback\n  return fallback\n}\n","const identity = x => x\n\nexport default identity\n","import { keys } from './object'\nimport { isArray } from './array'\nimport identity from './identity'\n\n/**\n * Given an array of properties or an object of property keys,\n * plucks all the values off the target object, returning a new object\n * that has props that reference the original prop values\n *\n * @param {{}|string[]} keysToPluck\n * @param {{}} objToPluck\n * @param {Function} transformFn\n * @return {{}}\n */\nconst pluckProps = (keysToPluck, objToPluck, transformFn = identity) => {\n  return (isArray(keysToPluck) ? keysToPluck.slice() : keys(keysToPluck)).reduce((memo, prop) => {\n    memo[transformFn(prop)] = objToPluck[prop]\n    return memo\n  }, {})\n}\n\nexport default pluckProps\n","import { getNoWarn } from './env'\n\n/**\n * Log a warning message to the console with bootstrap-vue formatting sugar.\n * @param {string} message\n */\n/* istanbul ignore next */\nconst warn = message => {\n  if (!getNoWarn()) {\n    console.warn(`[BootstrapVue warn]: ${message}`)\n  }\n}\n\nexport default warn\n"],"sourceRoot":""}