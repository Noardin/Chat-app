{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/mixins/toolpop.js"],"names":["exports","__esModule","default","_array","__webpack_require__","_dom","_ssr","_observeDom","_interopRequireDefault","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","PLACEMENTS","top","topleft","topright","right","righttop","rightbottom","bottom","bottomleft","bottomright","left","lefttop","leftbottom","auto","OBSERVER_CONFIG","subtree","childList","characterData","attributes","attributeFilter","_default","props","type","String","HTMLElement","Function","delay","Number","offset","noFade","Boolean","container","boundary","boundaryPadding","show","disabled","data","localShow","computed","baseConfig","cont","this","parseInt","title","trim","content","placement","test","animation","trigger","isArray","triggers","join","callbacks","onShow","shown","onShown","hide","onHide","hidden","onHidden","enabled","onEnabled","onDisabled","watch","_show","old","onOpen","onClose","_disabled","onDisable","onEnable","$emit","created","_toolpop","_obs_title","_obs_content","mounted","_this","$nextTick","createToolpop","$on","setObservers","updated","updateConfig","getConfig","activated","deactivated","beforeDestroy","$off","bringItBack","destroy","methods","cfg","$refs","innerHTML","html","callback","disable","enable","updatePosition","update","getTarget","getById","isElement","$el","evt","defaultPrevented","appendChild","on","bind","disconnect"],"mappings":"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","file":"js/chunk-vendors~cdbeae1e.5037846b.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _array = require(\"../utils/array\");\n\nvar _dom = require(\"../utils/dom\");\n\nvar _ssr = require(\"../utils/ssr\");\n\nvar _observeDom = _interopRequireDefault(require(\"../utils/observe-dom\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar PLACEMENTS = {\n  top: 'top',\n  topleft: 'topleft',\n  topright: 'topright',\n  right: 'right',\n  righttop: 'righttop',\n  rightbottom: 'rightbottom',\n  bottom: 'bottom',\n  bottomleft: 'bottomleft',\n  bottomright: 'bottomright',\n  left: 'left',\n  lefttop: 'lefttop',\n  leftbottom: 'leftbottom',\n  auto: 'auto'\n};\nvar OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  attributes: true,\n  attributeFilter: ['class', 'style'] // @vue/component\n\n};\nvar _default = {\n  props: {\n    target: {\n      // String ID of element, or element/component reference\n      type: [String, Object, _ssr.HTMLElement, Function] // default: undefined\n\n    },\n    delay: {\n      type: [Number, Object, String],\n      default: 0\n    },\n    offset: {\n      type: [Number, String],\n      default: 0\n    },\n    noFade: {\n      type: Boolean,\n      default: false\n    },\n    container: {\n      // String ID of container, if null body is used (default)\n      type: String,\n      default: null\n    },\n    boundary: {\n      // String: scrollParent, window, or viewport\n      // Element: element reference\n      type: [String, _ssr.HTMLElement],\n      default: 'scrollParent'\n    },\n    boundaryPadding: {\n      type: Number,\n      default: 5\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      // semaphore for preventing multiple show events\n      localShow: false\n    };\n  },\n  computed: {\n    baseConfig: function baseConfig() {\n      var cont = this.container;\n      var delay = _typeof(this.delay) === 'object' ? this.delay : parseInt(this.delay, 10) || 0;\n      return {\n        // Title prop\n        title: (this.title || '').trim() || '',\n        // Contnt prop (if popover)\n        content: (this.content || '').trim() || '',\n        // Tooltip/Popover placement\n        placement: PLACEMENTS[this.placement] || 'auto',\n        // Container curently needs to be an ID with '#' prepended, if null then body is used\n        container: cont ? /^#/.test(cont) ? cont : \"#\".concat(cont) : false,\n        // boundariesElement passed to popper\n        boundary: this.boundary,\n        // boundariesElement padding passed to popper\n        boundaryPadding: this.boundaryPadding,\n        // Show/Hide delay\n        delay: delay || 0,\n        // Offset can be css distance. if no units, pixels are assumed\n        offset: this.offset || 0,\n        // Disable fade Animation?\n        animation: !this.noFade,\n        // Open/Close Trigger(s)\n        trigger: (0, _array.isArray)(this.triggers) ? this.triggers.join(' ') : this.triggers,\n        // Callbacks so we can trigger events on component\n        callbacks: {\n          show: this.onShow,\n          shown: this.onShown,\n          hide: this.onHide,\n          hidden: this.onHidden,\n          enabled: this.onEnabled,\n          disabled: this.onDisabled\n        }\n      };\n    }\n  },\n  watch: {\n    show: function show(_show, old) {\n      if (_show !== old) {\n        _show ? this.onOpen() : this.onClose();\n      }\n    },\n    disabled: function disabled(_disabled, old) {\n      if (_disabled !== old) {\n        _disabled ? this.onDisable() : this.onEnable();\n      }\n    },\n    localShow: function localShow(show, old) {\n      if (show !== this.show) {\n        this.$emit('update:show', show);\n      }\n    }\n  },\n  created: function created() {\n    // Create non-reactive property\n    this._toolpop = null;\n    this._obs_title = null;\n    this._obs_content = null;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // We do this in a next tick to ensure DOM has rendered first\n    this.$nextTick(function () {\n      // Instantiate ToolTip/PopOver on target\n      // The createToolpop method must exist in main component\n      if (_this.createToolpop()) {\n        if (_this.disabled) {\n          // Initially disabled\n          _this.onDisable();\n        } // Listen to open signals from others\n\n\n        _this.$on('open', _this.onOpen); // Listen to close signals from others\n\n\n        _this.$on('close', _this.onClose); // Listen to disable signals from others\n\n\n        _this.$on('disable', _this.onDisable); // Listen to enable signals from others\n\n\n        _this.$on('enable', _this.onEnable); // Observe content Child changes so we can notify popper of possible size change\n\n\n        _this.setObservers(true); // Set intially open state\n\n\n        if (_this.show) {\n          _this.onOpen();\n        }\n      }\n    });\n  },\n  updated: function updated() {\n    // If content/props changes, etc\n    if (this._toolpop) {\n      this._toolpop.updateConfig(this.getConfig());\n    }\n  },\n  activated: function activated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component brought offline\n    this.setObservers(true);\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component taken offline\n    if (this._toolpop) {\n      this.setObservers(false);\n\n      this._toolpop.hide();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Shutdown our local event listeners\n    this.$off('open', this.onOpen);\n    this.$off('close', this.onClose);\n    this.$off('disable', this.onDisable);\n    this.$off('enable', this.onEnable);\n    this.setObservers(false); // bring our content back if needed\n\n    this.bringItBack();\n\n    if (this._toolpop) {\n      this._toolpop.destroy();\n\n      this._toolpop = null;\n    }\n  },\n  methods: {\n    getConfig: function getConfig() {\n      var cfg = _objectSpread({}, this.baseConfig);\n\n      if (this.$refs.title && this.$refs.title.innerHTML.trim()) {\n        // If slot has content, it overrides 'title' prop\n        // We use the DOM node as content to allow components!\n        cfg.title = this.$refs.title;\n        cfg.html = true;\n      }\n\n      if (this.$refs.content && this.$refs.content.innerHTML.trim()) {\n        // If slot has content, it overrides 'content' prop\n        // We use the DOM node as content to allow components!\n        cfg.content = this.$refs.content;\n        cfg.html = true;\n      }\n\n      return cfg;\n    },\n    onOpen: function onOpen() {\n      if (this._toolpop && !this.localShow) {\n        this.localShow = true;\n\n        this._toolpop.show();\n      }\n    },\n    onClose: function onClose(callback) {\n      // What is callback for ? it is not documented\n\n      /* istanbul ignore else */\n      if (this._toolpop && this.localShow) {\n        this._toolpop.hide(callback);\n      } else if (typeof callback === 'function') {\n        // Is this even used?\n        callback();\n      }\n    },\n    onDisable: function onDisable() {\n      if (this._toolpop) {\n        this._toolpop.disable();\n      }\n    },\n    onEnable: function onEnable() {\n      if (this._toolpop) {\n        this._toolpop.enable();\n      }\n    },\n    updatePosition: function updatePosition() {\n      /* istanbul ignore next: can't test in JSDOM until mutation observer is implemented */\n      if (this._toolpop) {\n        // Instruct popper to reposition popover if necessary\n        this._toolpop.update();\n      }\n    },\n    getTarget: function getTarget() {\n      var target = this.target;\n\n      if (typeof target === 'function') {\n        /* istanbul ignore next */\n        target = target();\n      }\n\n      if (typeof target === 'string') {\n        // Assume ID of element\n        return (0, _dom.getById)(target);\n      } else if (_typeof(target) === 'object' && (0, _dom.isElement)(target.$el)) {\n        // Component reference\n\n        /* istanbul ignore next */\n        return target.$el;\n      } else if (_typeof(target) === 'object' && (0, _dom.isElement)(target)) {\n        // Element reference\n\n        /* istanbul ignore next */\n        return target;\n      }\n      /* istanbul ignore next */\n\n\n      return null;\n    },\n    // Callbacks called by Tooltip/Popover class instance\n    onShow: function onShow(evt) {\n      this.$emit('show', evt);\n      this.localShow = !(evt && evt.defaultPrevented);\n    },\n    onShown: function onShown(evt) {\n      this.setObservers(true);\n      this.$emit('shown', evt);\n      this.localShow = true;\n    },\n    onHide: function onHide(evt) {\n      this.$emit('hide', evt);\n      this.localShow = !!(evt && evt.defaultPrevented);\n    },\n    onHidden: function onHidden(evt) {\n      this.setObservers(false); // bring our content back if needed to keep Vue happy\n      // Tooltip class will move it back to tip when shown again\n\n      this.bringItBack();\n      this.$emit('hidden', evt);\n      this.localShow = false;\n    },\n    onEnabled: function onEnabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'enabled') {\n        // Prevent possible endless loop if user mistakienly fires enabled instead of enable\n        return;\n      }\n\n      this.$emit('update:disabled', false);\n      this.$emit('disabled');\n    },\n    onDisabled: function onDisabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'disabled') {\n        // Prevent possible endless loop if user mistakienly fires disabled instead of disable\n        return;\n      }\n\n      this.$emit('update:disabled', true);\n      this.$emit('enabled');\n    },\n    bringItBack: function bringItBack() {\n      // bring our content back if needed to keep Vue happy\n      if (this.$el && this.$refs.title) {\n        this.$el.appendChild(this.$refs.title);\n      }\n\n      if (this.$el && this.$refs.content) {\n        this.$el.appendChild(this.$refs.content);\n      }\n    },\n    setObservers: function setObservers(on) {\n      if (on) {\n        if (this.$refs.title) {\n          this._obs_title = (0, _observeDom.default)(this.$refs.title, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n\n        if (this.$refs.content) {\n          this._obs_content = (0, _observeDom.default)(this.$refs.content, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n      } else {\n        if (this._obs_title) {\n          this._obs_title.disconnect();\n\n          this._obs_title = null;\n        }\n\n        if (this._obs_content) {\n          this._obs_content.disconnect();\n\n          this._obs_content = null;\n        }\n      }\n    }\n  }\n};\nexports.default = _default;"],"sourceRoot":""}