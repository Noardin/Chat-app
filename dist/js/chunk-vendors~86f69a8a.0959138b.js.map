{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/mixins/form-custom.js","webpack:///./node_modules/bootstrap-vue/es/mixins/form-options.js"],"names":["exports","__esModule","default","_default","props","plain","type","Boolean","computed","custom","this","_array","__webpack_require__","_object","_html","isObject","obj","toString","call","_default2","options","Array","Object","valueField","String","textField","htmlField","disabledField","formOptions","isArray","map","option","value","text","stripTags","html","disabled","keys","key"],"mappings":"0HAEAA,EAAAC,YAAA,EACAD,EAAAE,aAAA,EAEA,IAAAC,EAAA,CACAC,MAAA,CACAC,MAAA,CACAC,KAAAC,QACAL,SAAA,IAGAM,SAAA,CACAC,OAAA,WACA,OAAAC,KAAAL,SAIAL,EAAAE,QAAAC,uCChBAH,EAAAC,YAAA,EACAD,EAAAE,aAAA,EAEA,IAAAS,EAAaC,EAAQ,QAErBC,EAAcD,EAAQ,QAEtBE,EAAYF,EAAQ,QAEpB,SAAAG,EAAAC,GACA,OAAAA,GAAkB,oBAAlB,GAAkBC,SAAAC,KAAAF,GAIlB,IAAAG,EAAA,CACAf,MAAA,CACAgB,QAAA,CACAd,KAAA,CAAAe,MAAAC,QACApB,QAAA,WACA,WAGAqB,WAAA,CACAjB,KAAAkB,OACAtB,QAAA,SAEAuB,UAAA,CACAnB,KAAAkB,OACAtB,QAAA,QAEAwB,UAAA,CACApB,KAAAkB,OACAtB,QAAA,QAEAyB,cAAA,CACArB,KAAAkB,OACAtB,QAAA,aAGAM,SAAA,CACAoB,YAAA,WACA,IAAAR,EAAAV,KAAAU,QACAG,EAAAb,KAAAa,WACAE,EAAAf,KAAAe,UACAC,EAAAhB,KAAAgB,UACAC,EAAAjB,KAAAiB,cAEA,SAAAhB,EAAAkB,SAAAT,GAEAA,EAAAU,IAAA,SAAAC,GACA,GAAAhB,EAAAgB,GAAA,CACA,IAAAC,EAAAD,EAAAR,GACAU,EAAAT,OAAAO,EAAAN,IACA,OACAO,MAAA,qBAAAA,EAAAC,EAAAD,EACAC,MAAA,EAAAnB,EAAAoB,WAAAD,GACAE,KAAAJ,EAAAL,GACAU,SAAA7B,QAAAwB,EAAAJ,KAIA,OACAK,MAAAD,EACAE,MAAA,EAAAnB,EAAAoB,WAAAV,OAAAO,IACAK,UAAA,MAMA,EAAAvB,EAAAwB,MAAAjB,GAAAU,IAAA,SAAAQ,GACA,IAAAP,EAAAX,EAAAkB,IAAA,GAEA,GAAAvB,EAAAgB,GAAA,CACA,IAAAC,EAAAD,EAAAR,GACAU,EAAAF,EAAAN,GACA,OACAO,MAAA,qBAAAA,EAAAM,EAAAN,EACAC,KAAA,qBAAAA,GAAA,EAAAnB,EAAAoB,WAAAV,OAAAc,KAAA,EAAAxB,EAAAoB,WAAAV,OAAAS,IACAE,KAAAJ,EAAAL,GACAU,SAAA7B,QAAAwB,EAAAJ,KAIA,OACAK,MAAAM,EACAL,MAAA,EAAAnB,EAAAoB,WAAAV,OAAAO,IACAK,UAAA,QAOApC,EAAAE,QAAAiB","file":"js/chunk-vendors~86f69a8a.0959138b.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n// @vue/component\nvar _default = {\n  props: {\n    plain: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    custom: function custom() {\n      return !this.plain;\n    }\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _array = require(\"../utils/array\");\n\nvar _object = require(\"../utils/object\");\n\nvar _html = require(\"../utils/html\");\n\nfunction isObject(obj) {\n  return obj && {}.toString.call(obj) === '[object Object]';\n} // @vue/component\n\n\nvar _default2 = {\n  props: {\n    options: {\n      type: [Array, Object],\n      default: function _default() {\n        return [];\n      }\n    },\n    valueField: {\n      type: String,\n      default: 'value'\n    },\n    textField: {\n      type: String,\n      default: 'text'\n    },\n    htmlField: {\n      type: String,\n      default: 'html'\n    },\n    disabledField: {\n      type: String,\n      default: 'disabled'\n    }\n  },\n  computed: {\n    formOptions: function formOptions() {\n      var options = this.options;\n      var valueField = this.valueField;\n      var textField = this.textField;\n      var htmlField = this.htmlField;\n      var disabledField = this.disabledField;\n\n      if ((0, _array.isArray)(options)) {\n        // Normalize flat-ish arrays to Array of Objects\n        return options.map(function (option) {\n          if (isObject(option)) {\n            var value = option[valueField];\n            var text = String(option[textField]);\n            return {\n              value: typeof value === 'undefined' ? text : value,\n              text: (0, _html.stripTags)(text),\n              html: option[htmlField],\n              disabled: Boolean(option[disabledField])\n            };\n          }\n\n          return {\n            value: option,\n            text: (0, _html.stripTags)(String(option)),\n            disabled: false\n          };\n        });\n      } else {\n        // options is Object\n        // Normalize Objects to Array of Objects\n        return (0, _object.keys)(options).map(function (key) {\n          var option = options[key] || {};\n\n          if (isObject(option)) {\n            var value = option[valueField];\n            var text = option[textField];\n            return {\n              value: typeof value === 'undefined' ? key : value,\n              text: typeof text === 'undefined' ? (0, _html.stripTags)(String(key)) : (0, _html.stripTags)(String(text)),\n              html: option[htmlField],\n              disabled: Boolean(option[disabledField])\n            };\n          }\n\n          return {\n            value: key,\n            text: (0, _html.stripTags)(String(option)),\n            disabled: false\n          };\n        });\n      }\n    }\n  }\n};\nexports.default = _default2;"],"sourceRoot":""}