{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/es/components/table/helpers/normalize-fields.js"],"names":["exports","__esModule","default","normalizeFields","_startcase","_interopRequireDefault","__webpack_require__","_object","_array","_constants","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","_typeof","Symbol","iterator","constructor","prototype","processField","field","label","formatter","origFields","items","fields","isArray","f","push","sample","k","IGNORED_FIELD_KEYS","memo"],"mappings":"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","file":"js/chunk-vendors~641b105c.32fe6c5c.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = normalizeFields;\n\nvar _startcase = _interopRequireDefault(require(\"../../../utils/startcase\"));\n\nvar _object = require(\"../../../utils/object\");\n\nvar _array = require(\"../../../utils/array\");\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// private function to massage field entry into common object format\nfunction processField(key, value) {\n  var field = null;\n\n  if (typeof value === 'string') {\n    // Label shortcut\n    field = {\n      key: key,\n      label: value\n    };\n  } else if (typeof value === 'function') {\n    // Formatter shortcut\n    field = {\n      key: key,\n      formatter: value\n    };\n  } else if (_typeof(value) === 'object') {\n    field = _objectSpread({}, value);\n    field.key = field.key || key;\n  } else if (value !== false) {\n    // Fallback to just key\n\n    /* istanbul ignore next */\n    field = {\n      key: key\n    };\n  }\n\n  return field;\n} // We normalize fields into an array of objects\n// [ { key:..., label:..., ...}, {...}, ..., {..}]\n\n\nfunction normalizeFields(origFields, items) {\n  var fields = [];\n\n  if ((0, _array.isArray)(origFields)) {\n    // Normalize array Form\n    origFields.filter(function (f) {\n      return f;\n    }).forEach(function (f) {\n      if (typeof f === 'string') {\n        fields.push({\n          key: f,\n          label: (0, _startcase.default)(f)\n        });\n      } else if (_typeof(f) === 'object' && f.key && typeof f.key === 'string') {\n        // Full object definition. We use assign so that we don't mutate the original\n        fields.push(_objectSpread({}, f));\n      } else if (_typeof(f) === 'object' && (0, _object.keys)(f).length === 1) {\n        // Shortcut object (i.e. { 'foo_bar': 'This is Foo Bar' }\n        var key = (0, _object.keys)(f)[0];\n        var field = processField(key, f[key]);\n\n        if (field) {\n          fields.push(field);\n        }\n      }\n    });\n  } else if (origFields && _typeof(origFields) === 'object' && (0, _object.keys)(origFields).length > 0) {\n    // Normalize object Form (deprecated)\n    (0, _object.keys)(origFields).forEach(function (key) {\n      var field = processField(key, origFields[key]);\n\n      if (field) {\n        fields.push(field);\n      }\n    });\n  } // If no field provided, take a sample from first record (if exits)\n\n\n  if (fields.length === 0 && (0, _array.isArray)(items) && items.length > 0) {\n    var sample = items[0];\n    (0, _object.keys)(sample).forEach(function (k) {\n      if (!_constants.IGNORED_FIELD_KEYS[k]) {\n        fields.push({\n          key: k,\n          label: (0, _startcase.default)(k)\n        });\n      }\n    });\n  } // Ensure we have a unique array of fields and that they have String labels\n\n\n  var memo = {};\n  return fields.filter(function (f) {\n    if (!memo[f.key]) {\n      memo[f.key] = true;\n      f.label = typeof f.label === 'string' ? f.label : (0, _startcase.default)(f.key);\n      return true;\n    }\n\n    return false;\n  });\n}"],"sourceRoot":""}